,Title,Topic Label,Accetpance,Difficulty,Frequency
0,129. Sum Root to Leaf Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",59.8%,Medium,2.53041%;
1,1. Two Sum,"['Array', 'Hash Table']",49.6%,Easy,99.5389%;
2,2. Add Two Numbers,"['Linked List', 'Math', 'Recursion']",40.3%,Medium,94.7021%;
3,3. Longest Substring Without Repeating Characters,"['Hash Table', 'String', 'Sliding Window']",33.8%,Medium,95.0445%;
4,4. Median of Two Sorted Arrays,"['Array', 'Binary Search', 'Divide and Conquer']",36.0%,Hard,93.6308%;
5,5. Longest Palindromic Substring,"['String', 'Dynamic Programming']",32.4%,Medium,96.3111%;
6,6. Zigzag Conversion,['String'],44.8%,Medium,86.8534%;
7,7. Reverse Integer,['Math'],27.4%,Medium,90.7213%;
8,8. String to Integer (atoi),['String'],16.6%,Medium,60.2364%;
9,9. Palindrome Number,['Math'],53.5%,Easy,94.1472%;
10,10. Regular Expression Matching,"['String', 'Dynamic Programming', 'Recursion']",28.0%,Hard,71.9822%;
11,11. Container With Most Water,"['Array', 'Two Pointers', 'Greedy']",54.0%,Medium,88.991%;
12,12. Integer to Roman,"['Hash Table', 'Math', 'String']",61.9%,Medium,83.2202%;
13,13. Roman to Integer,"['Hash Table', 'Math', 'String']",58.4%,Easy,100%;
14,14. Longest Common Prefix,"['String', 'Trie']",40.8%,Easy,94.241%;
15,15. 3Sum,"['Array', 'Two Pointers', 'Sorting']",32.5%,Medium,92.3665%;
16,16. 3Sum Closest,"['Array', 'Two Pointers', 'Sorting']",45.8%,Medium,72.3137%;
17,17. Letter Combinations of a Phone Number,"['Hash Table', 'String', 'Backtracking']",56.4%,Medium,85.7048%;
18,18. 4Sum,"['Array', 'Two Pointers', 'Sorting']",36.0%,Medium,79.4149%;
19,19. Remove Nth Node From End of List,"['Linked List', 'Two Pointers']",40.9%,Medium,64.7831%;
20,20. Valid Parentheses,"['String', 'Stack']",40.3%,Easy,97.6944%;
21,21. Merge Two Sorted Lists,"['Linked List', 'Recursion']",62.4%,Easy,83.2098%;
22,22. Generate Parentheses,"['String', 'Dynamic Programming', 'Backtracking']",72.4%,Medium,89.4521%;
23,23. Merge k Sorted Lists,"['Linked List', 'Divide and Conquer', '2+']",49.7%,Hard,32.4518%;
24,24. Swap Nodes in Pairs,"['Linked List', 'Recursion']",61.2%,Medium,46.9132%;
25,25. Reverse Nodes in k-Group,"['Linked List', 'Recursion']",54.5%,Hard,72.7424%;
26,26. Remove Duplicates from Sorted Array,"['Array', 'Two Pointers']",51.4%,Easy,80.3683%;
27,27. Remove Element,"['Array', 'Two Pointers']",52.9%,Easy,54.3717%;
28,28. Find the Index of the First Occurrence in a String,"['Two Pointers', 'String', 'String Matching']",38.9%,Easy,50.9579%;
29,29. Divide Two Integers,"['Math', 'Bit Manipulation']",17.2%,Medium,53.872%;
30,30. Substring with Concatenation of All Words,"['Hash Table', 'String', 'Sliding Window']",31.2%,Hard,42.8781%;
31,31. Next Permutation,"['Array', 'Two Pointers']",37.5%,Medium,88.852%;
32,32. Longest Valid Parentheses,"['String', 'Dynamic Programming', 'Stack']",32.8%,Hard,67.8675%;
33,33. Search in Rotated Sorted Array,"['Array', 'Binary Search']",38.9%,Medium,76.5138%;
34,34. Find First and Last Position of Element in Sorted Array,"['Array', 'Binary Search']",41.8%,Medium,73.1087%;
35,35. Search Insert Position,"['Array', 'Binary Search']",43.3%,Easy,70.2912%;
36,36. Valid Sudoku,"['Array', 'Hash Table', 'Matrix']",58.0%,Medium,79.2091%;
37,37. Sudoku Solver,"['Array', 'Hash Table', 'Backtracking', '1+']",57.5%,Hard,69.7398%;
38,38. Count and Say,['String'],52.0%,Medium,80.7716%;
39,39. Combination Sum,"['Array', 'Backtracking']",68.5%,Medium,72.7559%;
40,40. Combination Sum II,"['Array', 'Backtracking']",53.4%,Medium,58.9267%;
41,41. First Missing Positive,"['Array', 'Hash Table']",36.7%,Hard,84.7355%;
42,42. Trapping Rain Water,"['Array', 'Two Pointers', '3+']",59.2%,Hard,96.7722%;
43,43. Multiply Strings,"['Math', 'String', 'Simulation']",39.1%,Medium,58.2984%;
44,44. Wildcard Matching,"['String', 'Dynamic Programming', 'Greedy', '1+']",26.9%,Hard,64.6551%;
45,45. Jump Game II,"['Array', 'Dynamic Programming', 'Greedy']",39.8%,Medium,79.787%;
46,46. Permutations,"['Array', 'Backtracking']",75.6%,Medium,69.4127%;
47,47. Permutations II,"['Array', 'Backtracking']",57.3%,Medium,50.2326%;
48,48. Rotate Image,"['Array', 'Math', 'Matrix']",70.9%,Medium,81.5598%;
49,49. Group Anagrams,"['Array', 'Hash Table', 'String', '1+']",66.7%,Medium,87.5031%;
50,"50. Pow(x, n)","['Math', 'Recursion']",33.0%,Medium,75.6105%;
51,51. N-Queens,"['Array', 'Backtracking']",64.0%,Hard,75.9755%;
52,52. N-Queens II,['Backtracking'],71.5%,Hard,30.026%;
53,53. Maximum Subarray,"['Array', 'Divide and Conquer', '1+']",50.2%,Medium,92.0306%;
54,54. Spiral Matrix,"['Array', 'Matrix', 'Simulation']",44.8%,Medium,86.8734%;
55,55. Jump Game,"['Array', 'Dynamic Programming', 'Greedy']",38.9%,Medium,80.3319%;
56,56. Merge Intervals,"['Array', 'Sorting']",46.2%,Medium,93.1697%;
57,57. Insert Interval,['Array'],39.0%,Medium,73.888%;
58,58. Length of Last Word,['String'],42.6%,Easy,53.9589%;
59,59. Spiral Matrix II,"['Array', 'Matrix', 'Simulation']",67.3%,Medium,48.5548%;
60,60. Permutation Sequence,"['Math', 'Recursion']",44.3%,Hard,57.871%;
61,61. Rotate List,"['Linked List', 'Two Pointers']",36.0%,Medium,53.5028%;
62,62. Unique Paths,"['Math', 'Dynamic Programming', '1+']",62.6%,Medium,66.3595%;
63,63. Unique Paths II,"['Array', 'Dynamic Programming', 'Matrix']",39.4%,Medium,53.1656%;
64,64. Minimum Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",61.1%,Medium,62.4025%;
65,65. Valid Number,['String'],18.7%,Hard,46.5127%;
66,66. Plus One,"['Array', 'Math']",43.6%,Easy,64.6321%;
67,67. Add Binary,"['Math', 'String', 'Bit Manipulation', '1+']",52.4%,Easy,78.4544%;
68,68. Text Justification,"['Array', 'String', 'Simulation']",37.4%,Hard,83.0981%;
69,69. Sqrt(x),"['Math', 'Binary Search']",37.4%,Easy,74.0598%;
70,70. Climbing Stairs,"['Math', 'Dynamic Programming', '1+']",52.2%,Easy,88.5835%;
71,71. Simplify Path,"['String', 'Stack']",39.3%,Medium,69.3539%;
72,72. Edit Distance,"['String', 'Dynamic Programming']",54.3%,Hard,73.854%;
73,73. Set Matrix Zeroes,"['Array', 'Hash Table', 'Matrix']",51.1%,Medium,71.5449%;
74,74. Search a 2D Matrix,"['Array', 'Binary Search', 'Matrix']",47.6%,Medium,64.9027%;
75,75. Sort Colors,"['Array', 'Two Pointers', 'Sorting']",58.4%,Medium,67.1699%;
76,76. Minimum Window Substring,"['Hash Table', 'String', 'Sliding Window']",40.9%,Hard,72.7877%;
77,77. Combinations,['Backtracking'],66.9%,Medium,45.8454%;
78,78. Subsets,"['Array', 'Backtracking', 'Bit Manipulation']",74.8%,Medium,67.7906%;
79,79. Word Search,"['Array', 'Backtracking', 'Matrix']",40.2%,Medium,76.8252%;
80,80. Remove Duplicates from Sorted Array II,"['Array', 'Two Pointers']",52.2%,Medium,40.516%;
81,81. Search in Rotated Sorted Array II,"['Array', 'Binary Search']",35.7%,Medium,45.111%;
82,82. Remove Duplicates from Sorted List II,"['Linked List', 'Two Pointers']",45.9%,Medium,52.4054%;
83,83. Remove Duplicates from Sorted List,['Linked List'],50.5%,Easy,51.51%;
84,84. Largest Rectangle in Histogram,"['Array', 'Stack', 'Monotonic Stack']",42.5%,Hard,71.6497%;
85,85. Maximal Rectangle,"['Array', 'Dynamic Programming', '3+']",44.7%,Hard,58.073%;
86,86. Partition List,"['Linked List', 'Two Pointers']",51.9%,Medium,31.0967%;
87,87. Scramble String,"['String', 'Dynamic Programming']",36.1%,Hard,33.7244%;
88,88. Merge Sorted Array,"['Array', 'Two Pointers', 'Sorting']",46.5%,Easy,72.4095%;
89,89. Gray Code,"['Math', 'Backtracking', 'Bit Manipulation']",57.1%,Medium,35.4546%;
90,90. Subsets II,"['Array', 'Backtracking', 'Bit Manipulation']",55.8%,Medium,51.1459%;
91,91. Decode Ways,"['String', 'Dynamic Programming']",32.7%,Medium,81.1822%;
92,92. Reverse Linked List II,['Linked List'],45.4%,Medium,56.0003%;
93,93. Restore IP Addresses,"['String', 'Backtracking']",47.3%,Medium,80.3631%;
94,94. Binary Tree Inorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",73.7%,Easy,53.7321%;
95,95. Unique Binary Search Trees II,"['Dynamic Programming', '4+']",52.3%,Medium,51.7688%;
96,96. Unique Binary Search Trees,"['Math', 'Dynamic Programming', '3+']",59.6%,Medium,61.8852%;
97,97. Interleaving String,"['String', 'Dynamic Programming']",37.3%,Medium,52.2798%;
98,98. Validate Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",32.0%,Medium,65.9474%;
99,99. Recover Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",50.9%,Medium,51.3883%;
100,100. Same Tree,"['Tree', 'Depth-First Search', '2+']",58.0%,Easy,52.0478%;
101,101. Symmetric Tree,"['Tree', 'Depth-First Search', '2+']",54.2%,Easy,13.0114%;
102,102. Binary Tree Level Order Traversal,"['Tree', 'Breadth-First Search', '1+']",64.2%,Medium,53.1872%;
103,103. Binary Tree Zigzag Level Order Traversal,"['Tree', 'Breadth-First Search', '1+']",56.8%,Medium,65.1536%;
104,104. Maximum Depth of Binary Tree,"['Tree', 'Depth-First Search', '2+']",73.8%,Easy,59.7834%;
105,105. Construct Binary Tree from Preorder and Inorder Traversal,"['Array', 'Hash Table', '3+']",61.4%,Medium,58.3701%;
106,106. Construct Binary Tree from Inorder and Postorder Traversal,"['Array', 'Hash Table', '3+']",58.1%,Medium,30.2678%;
107,107. Binary Tree Level Order Traversal II,"['Tree', 'Breadth-First Search', '1+']",61.0%,Medium,13.418%;
108,108. Convert Sorted Array to Binary Search Tree,"['Array', 'Divide and Conquer', 'Tree', '2+']",69.7%,Easy,45.0224%;
109,109. Convert Sorted List to Binary Search Tree,"['Linked List', 'Divide and Conquer', '3+']",60.1%,Medium,25.9809%;
110,110. Balanced Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",48.9%,Easy,52.7168%;
111,111. Minimum Depth of Binary Tree,"['Tree', 'Depth-First Search', '2+']",44.3%,Easy,35.5551%;
112,112. Path Sum,"['Tree', 'Depth-First Search', '2+']",48.2%,Easy,45.2805%;
113,113. Path Sum II,"['Backtracking', 'Tree', '2+']",57.0%,Medium,52.2829%;
114,114. Flatten Binary Tree to Linked List,"['Linked List', 'Stack', 'Tree', '2+']",61.7%,Medium,48.0335%;
115,115. Distinct Subsequences,"['String', 'Dynamic Programming']",44.4%,Hard,46.1461%;
116,116. Populating Next Right Pointers in Each Node,"['Linked List', 'Tree', '3+']",60.3%,Medium,47.2287%;
117,117. Populating Next Right Pointers in Each Node II,"['Linked List', 'Tree', '3+']",50.2%,Medium,35.8377%;
118,118. Pascal's Triangle,"['Array', 'Dynamic Programming']",70.6%,Easy,79.6137%;
119,119. Pascal's Triangle II,"['Array', 'Dynamic Programming']",60.6%,Easy,28.7751%;
120,120. Triangle,"['Array', 'Dynamic Programming']",54.4%,Medium,41.4434%;
121,121. Best Time to Buy and Sell Stock,"['Array', 'Dynamic Programming']",54.4%,Easy,95.5056%;
122,122. Best Time to Buy and Sell Stock II,"['Array', 'Dynamic Programming', 'Greedy']",63.8%,Medium,67.3335%;
123,123. Best Time to Buy and Sell Stock III,"['Array', 'Dynamic Programming']",45.4%,Hard,58.3538%;
124,124. Binary Tree Maximum Path Sum,"['Dynamic Programming', 'Tree', '2+']",39.2%,Hard,76.7547%;
125,125. Valid Palindrome,"['Two Pointers', 'String']",44.3%,Easy,71.2204%;
126,126. Word Ladder II,"['Hash Table', 'String', '2+']",27.5%,Hard,56.9472%;
127,127. Word Ladder,"['Hash Table', 'String', '1+']",37.1%,Hard,76.7295%;
128,128. Longest Consecutive Sequence,"['Array', 'Hash Table', 'Union Find']",48.6%,Medium,73.2805%;
129,129. Sum Root to Leaf Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",59.8%,Medium,2.53041%;
130,130. Surrounded Regions,"['Array', 'Depth-First Search', '3+']",36.6%,Medium,49.6514%;
131,131. Palindrome Partitioning,"['String', 'Dynamic Programming', '1+']",64.7%,Medium,75.7605%;
132,132. Palindrome Partitioning II,"['String', 'Dynamic Programming']",33.8%,Hard,49.7575%;
133,133. Clone Graph,"['Hash Table', 'Depth-First Search', '2+']",51.8%,Medium,52.3854%;
134,134. Gas Station,"['Array', 'Greedy']",46.1%,Medium,87.3149%;
135,135. Candy,"['Array', 'Greedy']",41.0%,Hard,61.7313%;
136,136. Single Number,"['Array', 'Bit Manipulation']",70.6%,Easy,65.7655%;
137,137. Single Number II,"['Array', 'Bit Manipulation']",58.4%,Medium,54.69%;
138,138. Copy List with Random Pointer,"['Hash Table', 'Linked List']",51.2%,Medium,66.6441%;
139,139. Word Break,"['Array', 'Hash Table', 'String', '3+']",45.6%,Medium,69.8707%;
140,140. Word Break II,"['Array', 'Hash Table', 'String', '4+']",45.2%,Hard,75.3315%;
141,141. Linked List Cycle,"['Hash Table', 'Linked List', 'Two Pointers']",47.4%,Easy,59.7848%;
142,142. Linked List Cycle II,"['Hash Table', 'Linked List', 'Two Pointers']",48.6%,Medium,52.9746%;
143,143. Reorder List,"['Linked List', 'Two Pointers', 'Stack', '1+']",52.3%,Medium,61.6475%;
144,144. Binary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",66.7%,Easy,37.9989%;
145,145. Binary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search', '1+']",67.8%,Easy,16.9774%;
146,146. LRU Cache,"['Hash Table', 'Linked List', 'Design', '1+']",40.6%,Medium,97.2333%;
147,147. Insertion Sort List,"['Linked List', 'Sorting']",50.9%,Medium,34.6648%;
148,148. Sort List,"['Linked List', 'Two Pointers', '3+']",55.0%,Medium,51.8062%;
149,149. Max Points on a Line,"['Array', 'Hash Table', 'Math', '1+']",25.1%,Hard,87.5522%;
150,150. Evaluate Reverse Polish Notation,"['Array', 'Math', 'Stack']",45.6%,Medium,70.2236%;
151,151. Reverse Words in a String,"['Two Pointers', 'String']",32.6%,Medium,75.6252%;
152,152. Maximum Product Subarray,"['Array', 'Dynamic Programming']",34.9%,Medium,66.9769%;
153,153. Find Minimum in Rotated Sorted Array,"['Array', 'Binary Search']",48.8%,Medium,45.5713%;
154,154. Find Minimum in Rotated Sorted Array II,"['Array', 'Binary Search']",43.5%,Hard,29.9097%;
155,155. Min Stack,"['Stack', 'Design']",52.3%,Medium,65.0383%;
156,156. Binary Tree Upside Down,"['Tree', 'Depth-First Search', 'Binary Tree']",61.9%,Medium,39.1672%;
157,157. Read N Characters Given Read4,"['String', 'Simulation', 'Interactive']",40.9%,Easy,27.8646%;
158,158. Read N Characters Given read4 II - Call Multiple Times,"['String', 'Simulation', 'Interactive']",41.6%,Hard,64.2123%;
159,159. Longest Substring with At Most Two Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",53.8%,Medium,39.8945%;
160,160. Intersection of Two Linked Lists,"['Hash Table', 'Linked List', 'Two Pointers']",54.2%,Easy,52.6394%;
161,161. One Edit Distance,"['Two Pointers', 'String']",34.1%,Medium,45.0491%;
162,162. Find Peak Element,"['Array', 'Binary Search']",46.0%,Medium,69.3326%;
163,163. Missing Ranges,['Array'],32.2%,Easy,36.3686%;
164,164. Maximum Gap,"['Array', 'Sorting', 'Bucket Sort', '1+']",43.2%,Hard,20.9217%;
165,165. Compare Version Numbers,"['Two Pointers', 'String']",35.7%,Medium,40.1526%;
166,166. Fraction to Recurring Decimal,"['Hash Table', 'Math', 'String']",24.3%,Medium,46.3288%;
167,167. Two Sum II - Input Array Is Sorted,"['Array', 'Two Pointers', 'Binary Search']",60.0%,Medium,53.7032%;
168,168. Excel Sheet Column Title,"['Math', 'String']",35.4%,Easy,54.6678%;
169,169. Majority Element,"['Array', 'Hash Table', '3+']",63.9%,Easy,70.331%;
170,170. Two Sum III - Data structure design,"['Array', 'Hash Table', 'Two Pointers', '2+']",37.4%,Easy,18.1128%;
171,171. Excel Sheet Column Number,"['Math', 'String']",62.0%,Easy,52.7334%;
172,172. Factorial Trailing Zeroes,['Math'],42.1%,Medium,32.2452%;
173,173. Binary Search Tree Iterator,"['Stack', 'Tree', 'Design', '3+']",69.6%,Medium,40.2546%;
174,174. Dungeon Game,"['Array', 'Dynamic Programming', 'Matrix']",37.5%,Hard,41.7557%;
175,175. Combine Two Tables,['Database'],74.0%,Easy,58.3613%;
176,176. Second Highest Salary,['Database'],37.5%,Medium,78.9067%;
177,177. Nth Highest Salary,['Database'],37.6%,Medium,62.4991%;
178,178. Rank Scores,['Database'],60.4%,Medium,36.2468%;
179,179. Largest Number,"['Array', 'String', 'Greedy', '1+']",34.5%,Medium,69.9027%;
180,180. Consecutive Numbers,['Database'],46.6%,Medium,50.4238%;
181,181. Employees Earning More Than Their Managers,['Database'],69.0%,Easy,58.1983%;
182,182. Duplicate Emails,['Database'],70.8%,Easy,44.9192%;
183,183. Customers Who Never Order,['Database'],68.5%,Easy,51.2491%;
184,184. Department Highest Salary,['Database'],50.0%,Medium,52.0342%;
185,185. Department Top Three Salaries,['Database'],50.4%,Hard,38.2165%;
186,186. Reverse Words in a String II,"['Two Pointers', 'String']",52.8%,Medium,23.7066%;
187,187. Repeated DNA Sequences,"['Hash Table', 'String', '4+']",46.9%,Medium,48.8132%;
188,188. Best Time to Buy and Sell Stock IV,"['Array', 'Dynamic Programming']",38.8%,Hard,48.9676%;
189,189. Rotate Array,"['Array', 'Math', 'Two Pointers']",39.4%,Medium,76.9517%;
190,190. Reverse Bits,"['Divide and Conquer', 'Bit Manipulation']",53.8%,Easy,47.8394%;
191,191. Number of 1 Bits,"['Divide and Conquer', 'Bit Manipulation']",66.4%,Easy,50.9893%;
192,192. Word Frequency,['Shell'],25.6%,Medium,41.9362%;
193,193. Valid Phone Numbers,['Shell'],26.0%,Easy,61.4065%;
194,194. Transpose File,['Shell'],25.4%,Medium,34.9753%;
195,195. Tenth Line,['Shell'],32.9%,Easy,16.8894%;
196,196. Delete Duplicate Emails,['Database'],60.5%,Easy,52.4881%;
197,197. Rising Temperature,['Database'],44.7%,Easy,42.9154%;
198,198. House Robber,"['Array', 'Dynamic Programming']",49.4%,Medium,85.7035%;
199,199. Binary Tree Right Side View,"['Tree', 'Depth-First Search', '2+']",61.6%,Medium,52.1557%;
200,200. Number of Islands,"['Array', 'Depth-First Search', '3+']",56.9%,Medium,95.9785%;
201,201. Bitwise AND of Numbers Range,['Bit Manipulation'],42.5%,Medium,27.5136%;
202,202. Happy Number,"['Hash Table', 'Math', 'Two Pointers']",54.8%,Easy,73.4745%;
203,203. Remove Linked List Elements,"['Linked List', 'Recursion']",45.8%,Easy,40.7369%;
204,204. Count Primes,"['Array', 'Math', 'Enumeration', '1+']",33.1%,Medium,72.2022%;
205,205. Isomorphic Strings,"['Hash Table', 'String']",42.8%,Easy,68.6165%;
206,206. Reverse Linked List,"['Linked List', 'Recursion']",73.4%,Easy,67.9697%;
207,207. Course Schedule,"['Depth-First Search', '3+']",45.4%,Medium,71.055%;
208,208. Implement Trie (Prefix Tree),"['Hash Table', 'String', 'Design', '1+']",61.6%,Medium,57.2471%;
209,209. Minimum Size Subarray Sum,"['Array', 'Binary Search', '2+']",44.9%,Medium,50.1009%;
210,210. Course Schedule II,"['Depth-First Search', '3+']",48.4%,Medium,65.0581%;
211,211. Design Add and Search Words Data Structure,"['String', 'Depth-First Search', '2+']",43.0%,Medium,36.2584%;
212,212. Word Search II,"['Array', 'String', 'Backtracking', '2+']",36.5%,Hard,82.6811%;
213,213. House Robber II,"['Array', 'Dynamic Programming']",41.0%,Medium,43.0179%;
214,214. Shortest Palindrome,"['String', 'Rolling Hash', '2+']",32.3%,Hard,51.2062%;
215,215. Kth Largest Element in an Array,"['Array', 'Divide and Conquer', '3+']",66.1%,Medium,75.0779%;
216,216. Combination Sum III,"['Array', 'Backtracking']",67.6%,Medium,46.8292%;
217,217. Contains Duplicate,"['Array', 'Hash Table', 'Sorting']",61.4%,Easy,86.3814%;
218,218. The Skyline Problem,"['Array', 'Divide and Conquer', '5+']",41.8%,Hard,85.7666%;
219,219. Contains Duplicate II,"['Array', 'Hash Table', 'Sliding Window']",42.5%,Easy,68.6898%;
220,220. Contains Duplicate III,"['Array', 'Sliding Window', 'Sorting', '2+']",22.1%,Hard,37.1673%;
221,221. Maximal Square,"['Array', 'Dynamic Programming', 'Matrix']",44.9%,Medium,65.3587%;
222,222. Count Complete Tree Nodes,"['Binary Search', 'Tree', '2+']",60.4%,Medium,57.4636%;
223,223. Rectangle Area,"['Math', 'Geometry']",45.1%,Medium,78.8113%;
224,224. Basic Calculator,"['Math', 'String', 'Stack', '1+']",42.4%,Hard,79.0795%;
225,225. Implement Stack using Queues,"['Stack', 'Design', 'Queue']",58.5%,Easy,44.2653%;
226,226. Invert Binary Tree,"['Tree', 'Depth-First Search', '2+']",74.6%,Easy,57.9213%;
227,227. Basic Calculator II,"['Math', 'String', 'Stack']",42.4%,Medium,67.1325%;
228,228. Summary Ranges,['Array'],47.1%,Easy,69.9543%;
229,229. Majority Element II,"['Array', 'Hash Table', 'Sorting', '1+']",44.9%,Medium,51.4209%;
230,230. Kth Smallest Element in a BST,"['Tree', 'Depth-First Search', '2+']",70.0%,Medium,54.8031%;
231,231. Power of Two,"['Math', 'Bit Manipulation', 'Recursion']",46.0%,Easy,71.4518%;
232,232. Implement Queue using Stacks,"['Stack', 'Design', 'Queue']",63.1%,Easy,59.1706%;
233,233. Number of Digit One,"['Math', 'Dynamic Programming', '1+']",34.0%,Hard,59.4356%;
234,234. Palindrome Linked List,"['Linked List', 'Two Pointers', 'Stack', '1+']",50.1%,Easy,88.1659%;
235,235. Lowest Common Ancestor of a Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",61.4%,Medium,47.3585%;
236,236. Lowest Common Ancestor of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",58.7%,Medium,69.2775%;
237,237. Delete Node in a Linked List,['Linked List'],75.9%,Medium,66.022%;
238,238. Product of Array Except Self,"['Array', 'Prefix Sum']",65.0%,Medium,76.545%;
239,239. Sliding Window Maximum,"['Array', 'Queue', 'Sliding Window', '2+']",46.3%,Hard,83.6769%;
240,240. Search a 2D Matrix II,"['Array', 'Binary Search', '2+']",51.0%,Medium,61.0698%;
241,241. Different Ways to Add Parentheses,"['Math', 'String', '3+']",63.8%,Medium,54.8581%;
242,242. Valid Anagram,"['Hash Table', 'String', 'Sorting']",63.0%,Easy,70.7928%;
243,243. Shortest Word Distance,"['Array', 'String']",65.0%,Easy,31.4073%;
244,244. Shortest Word Distance II,"['Array', 'Hash Table', 'Two Pointers', '2+']",60.8%,Medium,34.3739%;
245,245. Shortest Word Distance III,"['Array', 'String']",57.6%,Medium,11.174%;
246,246. Strobogrammatic Number,"['Hash Table', 'Two Pointers', 'String']",47.7%,Easy,43.1768%;
247,247. Strobogrammatic Number II,"['Array', 'String', 'Recursion']",51.5%,Medium,44.5955%;
248,248. Strobogrammatic Number III,"['Array', 'String', 'Recursion']",41.9%,Hard,44.5955%;
249,249. Group Shifted Strings,"['Array', 'Hash Table', 'String']",64.3%,Medium,47.998%;
250,250. Count Univalue Subtrees,"['Tree', 'Depth-First Search', 'Binary Tree']",55.4%,Medium,25.2857%;
251,251. Flatten 2D Vector,"['Array', 'Two Pointers', 'Design', '1+']",49.1%,Medium,40.9451%;
252,252. Meeting Rooms,"['Array', 'Sorting']",57.2%,Easy,44.7752%;
253,253. Meeting Rooms II,"['Array', 'Two Pointers', 'Greedy', '3+']",50.6%,Medium,90.2602%;
254,254. Factor Combinations,"['Array', 'Backtracking']",49.1%,Medium,40.7349%;
255,255. Verify Preorder Sequence in Binary Search Tree,"['Stack', 'Tree', 'Binary Search Tree', '3+']",48.2%,Medium,17.1707%;
256,256. Paint House,"['Array', 'Dynamic Programming']",61.0%,Medium,40.6798%;
257,257. Binary Tree Paths,"['String', 'Backtracking', 'Tree', '2+']",61.3%,Easy,41.0387%;
258,258. Add Digits,"['Math', 'Simulation', 'Number Theory']",63.9%,Easy,51.4532%;
259,259. 3Sum Smaller,"['Array', 'Two Pointers', '2+']",50.7%,Medium,21.2524%;
260,260. Single Number III,"['Array', 'Bit Manipulation']",67.6%,Medium,33.2993%;
261,261. Graph Valid Tree,"['Depth-First Search', '3+']",47.1%,Medium,46.7076%;
262,262. Trips and Users,['Database'],37.5%,Hard,33.4167%;
263,263. Ugly Number,['Math'],42.3%,Easy,61.323%;
264,264. Ugly Number II,"['Hash Table', 'Math', '2+']",46.2%,Medium,50.8001%;
265,265. Paint House II,"['Array', 'Dynamic Programming']",52.9%,Hard,15.386%;
266,266. Palindrome Permutation,"['Hash Table', 'String', 'Bit Manipulation']",66.0%,Easy,28.4733%;
267,267. Palindrome Permutation II,"['Hash Table', 'String', 'Backtracking']",40.7%,Medium,33.3729%;
268,268. Missing Number,"['Array', 'Hash Table', 'Math', '3+']",62.4%,Easy,65.9147%;
269,269. Alien Dictionary,"['Array', 'String', '4+']",35.3%,Hard,79.3577%;
270,270. Closest Binary Search Tree Value,"['Binary Search', 'Tree', '3+']",54.7%,Easy,12.9091%;
271,271. Encode and Decode Strings,"['Array', 'String', 'Design']",42.7%,Medium,31.5552%;
272,272. Closest Binary Search Tree Value II,"['Two Pointers', 'Stack', 'Tree', '4+']",58.4%,Hard,11.5958%;
273,273. Integer to English Words,"['Math', 'String', 'Recursion']",30.0%,Hard,88.4939%;
274,274. H-Index,"['Array', 'Sorting', 'Counting Sort']",38.3%,Medium,57.7923%;
275,275. H-Index II,"['Array', 'Binary Search']",37.5%,Medium,12.0454%;
276,276. Paint Fence,['Dynamic Programming'],44.5%,Medium,22.8589%;
277,277. Find the Celebrity,"['Two Pointers', 'Greedy', 'Graph', '1+']",46.6%,Medium,41.1838%;
278,278. First Bad Version,"['Binary Search', 'Interactive']",43.2%,Easy,66.0871%;
279,279. Perfect Squares,"['Math', 'Dynamic Programming', '1+']",52.6%,Medium,77.623%;
280,280. Wiggle Sort,"['Array', 'Greedy', 'Sorting']",67.0%,Medium,33.8438%;
281,281. Zigzag Iterator,"['Array', 'Design', 'Queue', '1+']",62.7%,Medium,17.5771%;
282,282. Expression Add Operators,"['Math', 'String', 'Backtracking']",39.2%,Hard,50.079%;
283,283. Move Zeroes,"['Array', 'Two Pointers']",61.4%,Easy,74.9747%;
284,284. Peeking Iterator,"['Array', 'Design', 'Iterator']",58.6%,Medium,29.4037%;
285,285. Inorder Successor in BST,"['Tree', 'Depth-First Search', '2+']",48.7%,Medium,33.6722%;
286,286. Walls and Gates,"['Array', 'Breadth-First Search', 'Matrix']",60.4%,Medium,57.4237%;
287,287. Find the Duplicate Number,"['Array', 'Two Pointers', '2+']",59.1%,Medium,68.577%;
288,288. Unique Word Abbreviation,"['Array', 'Hash Table', 'String', '1+']",25.6%,Medium,0%;
289,289. Game of Life,"['Array', 'Matrix', 'Simulation']",67.1%,Medium,67.5831%;
290,290. Word Pattern,"['Hash Table', 'String']",41.7%,Easy,68.8791%;
291,291. Word Pattern II,"['Hash Table', 'String', 'Backtracking']",47.1%,Medium,24.6832%;
292,292. Nim Game,"['Math', 'Brainteaser', 'Game Theory']",56.1%,Easy,28.4826%;
293,293. Flip Game,['String'],63.2%,Easy,0%;
294,294. Flip Game II,"['Math', 'Dynamic Programming', '3+']",51.9%,Medium,27.3577%;
295,295. Find Median from Data Stream,"['Two Pointers', 'Design', 'Sorting', '2+']",51.5%,Hard,77.4245%;
296,296. Best Meeting Point,"['Array', 'Math', 'Sorting', '1+']",60.1%,Hard,50.5546%;
297,297. Serialize and Deserialize Binary Tree,"['String', 'Tree', 'Depth-First Search', '3+']",55.3%,Hard,60.6355%;
298,298. Binary Tree Longest Consecutive Sequence,"['Tree', 'Depth-First Search', 'Binary Tree']",52.7%,Medium,11.174%;
299,299. Bulls and Cows,"['Hash Table', 'String', 'Counting']",49.3%,Medium,41.7727%;
300,300. Longest Increasing Subsequence,"['Array', 'Binary Search', '1+']",52.0%,Medium,66.9327%;
301,301. Remove Invalid Parentheses,"['String', 'Backtracking', '1+']",47.2%,Hard,51.3659%;
302,302. Smallest Rectangle Enclosing Black Pixels,"['Array', 'Binary Search', '3+']",58.4%,Hard,20.3521%;
303,303. Range Sum Query - Immutable,"['Array', 'Design', 'Prefix Sum']",59.3%,Easy,36.1696%;
304,304. Range Sum Query 2D - Immutable,"['Array', 'Design', 'Matrix', '1+']",52.7%,Medium,38.3233%;
305,305. Number of Islands II,"['Array', 'Union Find']",39.6%,Hard,37.6083%;
306,306. Additive Number,"['String', 'Backtracking']",31.0%,Medium,42.7635%;
307,307. Range Sum Query - Mutable,"['Array', 'Design', '2+']",40.7%,Medium,31.4958%;
308,308. Range Sum Query 2D - Mutable,"['Array', 'Design', '3+']",42.8%,Hard,40.5994%;
309,309. Best Time to Buy and Sell Stock with Cooldown,"['Array', 'Dynamic Programming']",56.2%,Medium,62.4107%;
310,310. Minimum Height Trees,"['Depth-First Search', '3+']",38.5%,Medium,43.5384%;
311,311. Sparse Matrix Multiplication,"['Array', 'Hash Table', 'Matrix']",67.3%,Medium,63.3494%;
312,312. Burst Balloons,"['Array', 'Dynamic Programming']",57.0%,Hard,66.3889%;
313,313. Super Ugly Number,"['Array', 'Math', 'Dynamic Programming']",45.5%,Medium,24.0559%;
314,314. Binary Tree Vertical Order Traversal,"['Hash Table', 'Tree', '3+']",52.3%,Medium,65.9877%;
315,315. Count of Smaller Numbers After Self,"['Array', 'Binary Search', '5+']",42.6%,Hard,45.042%;
316,316. Remove Duplicate Letters,"['String', 'Stack', 'Greedy', '1+']",44.9%,Medium,62.7225%;
317,317. Shortest Distance from All Buildings,"['Array', 'Breadth-First Search', 'Matrix']",42.6%,Hard,55.6192%;
318,318. Maximum Product of Word Lengths,"['Array', 'String', 'Bit Manipulation']",59.9%,Medium,47.8697%;
319,319. Bulb Switcher,"['Math', 'Brainteaser']",48.3%,Medium,53.5314%;
320,320. Generalized Abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",57.6%,Medium,14.8423%;
321,321. Create Maximum Number,"['Stack', 'Greedy', 'Monotonic Stack']",29.1%,Hard,27.0092%;
322,322. Coin Change,"['Array', 'Dynamic Programming', '1+']",42.0%,Medium,83.0444%;
323,323. Number of Connected Components in an Undirected Graph,"['Depth-First Search', '3+']",62.2%,Medium,42.7187%;
324,324. Wiggle Sort II,"['Array', 'Divide and Conquer', '2+']",33.3%,Medium,32.3805%;
325,325. Maximum Size Subarray Sum Equals k,"['Array', 'Hash Table', 'Prefix Sum']",49.2%,Medium,18.8906%;
326,326. Power of Three,"['Math', 'Recursion']",45.5%,Easy,38.9377%;
327,327. Count of Range Sum,"['Array', 'Binary Search', '5+']",36.0%,Hard,51.8803%;
328,328. Odd Even Linked List,['Linked List'],61.2%,Medium,76.493%;
329,329. Longest Increasing Path in a Matrix,"['Array', 'Dynamic Programming', '6+']",52.4%,Hard,63.782%;
330,330. Patching Array,"['Array', 'Greedy']",40.2%,Hard,51.6477%;
331,331. Verify Preorder Serialization of a Binary Tree,"['String', 'Stack', 'Tree', '1+']",44.6%,Medium,31.2614%;
332,332. Reconstruct Itinerary,"['Depth-First Search', 'Graph', '1+']",41.2%,Hard,65.6921%;
333,333. Largest BST Subtree,"['Dynamic Programming', 'Tree', '3+']",42.8%,Medium,29.4712%;
334,334. Increasing Triplet Subsequence,"['Array', 'Greedy']",42.7%,Medium,77.3306%;
335,335. Self Crossing,"['Array', 'Math', 'Geometry']",29.4%,Hard,34.3338%;
336,336. Palindrome Pairs,"['Array', 'Hash Table', 'String', '1+']",35.0%,Hard,77.0334%;
337,337. House Robber III,"['Dynamic Programming', 'Tree', '2+']",53.9%,Medium,44.4239%;
338,338. Counting Bits,"['Dynamic Programming', 'Bit Manipulation']",75.7%,Easy,40.7811%;
339,339. Nested List Weight Sum,"['Depth-First Search', '1+']",82.3%,Medium,65.0644%;
340,340. Longest Substring with At Most K Distinct Characters,"['Hash Table', 'String', 'Sliding Window']",48.0%,Medium,58.556%;
341,341. Flatten Nested List Iterator,"['Stack', 'Tree', 'Depth-First Search', '3+']",61.8%,Medium,62.5179%;
342,342. Power of Four,"['Math', 'Bit Manipulation', 'Recursion']",46.1%,Easy,24.9978%;
343,343. Integer Break,"['Math', 'Dynamic Programming']",55.9%,Medium,30.5812%;
344,344. Reverse String,"['Two Pointers', 'String']",76.7%,Easy,62.2792%;
345,345. Reverse Vowels of a String,"['Two Pointers', 'String']",50.0%,Easy,72.9416%;
346,346. Moving Average from Data Stream,"['Array', 'Design', 'Queue', '1+']",77.1%,Easy,60.5811%;
347,347. Top K Frequent Elements,"['Array', 'Hash Table', '6+']",64.3%,Medium,68.7667%;
348,348. Design Tic-Tac-Toe,"['Array', 'Hash Table', 'Design', '1+']",57.6%,Medium,52.9712%;
349,349. Intersection of Two Arrays,"['Array', 'Hash Table', 'Two Pointers', '2+']",70.8%,Easy,66.4329%;
350,350. Intersection of Two Arrays II,"['Array', 'Hash Table', 'Two Pointers', '2+']",55.9%,Easy,52.0482%;
351,351. Android Unlock Patterns,"['Dynamic Programming', 'Backtracking']",51.5%,Medium,15.5482%;
352,352. Data Stream as Disjoint Intervals,"['Binary Search', 'Design', 'Ordered Set']",59.7%,Hard,64.0978%;
353,353. Design Snake Game,"['Array', 'Design', 'Queue', '1+']",39.2%,Medium,72.1901%;
354,354. Russian Doll Envelopes,"['Array', 'Binary Search', '2+']",38.0%,Hard,56.2068%;
355,355. Design Twitter,"['Hash Table', 'Linked List', 'Design', '1+']",37.2%,Medium,49.5738%;
356,356. Line Reflection,"['Array', 'Hash Table', 'Math']",34.8%,Medium,68.1224%;
357,357. Count Numbers with Unique Digits,"['Math', 'Dynamic Programming', '1+']",51.8%,Medium,35.3119%;
358,358. Rearrange String k Distance Apart,"['Hash Table', 'String', 'Greedy', '3+']",37.7%,Hard,23.0875%;
359,359. Logger Rate Limiter,"['Hash Table', 'Design']",75.6%,Easy,69.7666%;
360,360. Sort Transformed Array,"['Array', 'Math', 'Two Pointers', '1+']",55.0%,Medium,41.5973%;
361,361. Bomb Enemy,"['Array', 'Dynamic Programming', 'Matrix']",51.3%,Medium,20.6735%;
362,362. Design Hit Counter,"['Array', 'Hash Table', '3+']",68.4%,Medium,77.1935%;
363,363. Max Sum of Rectangle No Larger Than K,"['Array', 'Binary Search', 'Matrix', '2+']",44.0%,Hard,54.1111%;
364,364. Nested List Weight Sum II,"['Stack', 'Depth-First Search', '1+']",66.6%,Medium,26.7549%;
365,365. Water and Jug Problem,"['Math', 'Depth-First Search', '1+']",37.4%,Medium,73.8182%;
366,366. Find Leaves of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",80.3%,Medium,59.6251%;
367,367. Valid Perfect Square,"['Math', 'Binary Search']",43.3%,Easy,48.8915%;
368,368. Largest Divisible Subset,"['Array', 'Math', '2+']",41.5%,Medium,58.8242%;
369,369. Plus One Linked List,"['Linked List', 'Math']",61.0%,Medium,13.5957%;
370,370. Range Addition,"['Array', 'Prefix Sum']",71.1%,Medium,52.2824%;
371,371. Sum of Two Integers,"['Math', 'Bit Manipulation']",50.7%,Medium,55.933%;
372,372. Super Pow,"['Math', 'Divide and Conquer']",36.5%,Medium,41.9789%;
373,373. Find K Pairs with Smallest Sums,"['Array', 'Heap (Priority Queue)']",38.3%,Medium,38.3636%;
374,374. Guess Number Higher or Lower,"['Binary Search', 'Interactive']",51.8%,Easy,63.9119%;
375,375. Guess Number Higher or Lower II,"['Math', 'Dynamic Programming', '1+']",46.8%,Medium,32.1209%;
376,376. Wiggle Subsequence,"['Array', 'Dynamic Programming', 'Greedy']",48.3%,Medium,23.6617%;
377,377. Combination Sum IV,"['Array', 'Dynamic Programming']",52.2%,Medium,26.4972%;
378,378. Kth Smallest Element in a Sorted Matrix,"['Array', 'Binary Search', 'Sorting', '2+']",61.8%,Medium,31.8791%;
379,379. Design Phone Directory,"['Array', 'Hash Table', 'Linked List', '2+']",51.2%,Medium,43.0099%;
380,380. Insert Delete GetRandom O(1),"['Array', 'Hash Table', 'Math', '2+']",52.8%,Medium,92.1406%;
381,381. Insert Delete GetRandom O(1) - Duplicates allowed,"['Array', 'Hash Table', 'Math', '2+']",35.5%,Hard,43.0896%;
382,382. Linked List Random Node,"['Linked List', 'Math', '2+']",62.7%,Medium,30.5575%;
383,383. Ransom Note,"['Hash Table', 'String', 'Counting']",58.1%,Easy,59.392%;
384,384. Shuffle an Array,"['Array', 'Math', 'Randomized']",57.8%,Medium,44.1301%;
385,385. Mini Parser,"['String', 'Stack', 'Depth-First Search']",36.9%,Medium,11.174%;
386,386. Lexicographical Numbers,"['Depth-First Search', 'Trie']",61.5%,Medium,50.1433%;
387,387. First Unique Character in a String,"['Hash Table', 'String', 'Queue', '1+']",59.5%,Easy,71.6179%;
388,388. Longest Absolute File Path,"['String', 'Stack', 'Depth-First Search']",46.6%,Medium,15.386%;
389,389. Find the Difference,"['Hash Table', 'String', '2+']",60.0%,Easy,39.079%;
390,390. Elimination Game,"['Math', 'Recursion']",46.2%,Medium,58.7358%;
391,391. Perfect Rectangle,"['Array', 'Line Sweep']",32.8%,Hard,28.6705%;
392,392. Is Subsequence,"['Two Pointers', 'String', '1+']",47.7%,Easy,56.4628%;
393,393. UTF-8 Validation,"['Array', 'Bit Manipulation']",45.1%,Medium,60.8439%;
394,394. Decode String,"['String', 'Stack', 'Recursion']",57.8%,Medium,87.5292%;
395,395. Longest Substring with At Least K Repeating Characters,"['Hash Table', 'String', '2+']",44.8%,Medium,54.9293%;
396,396. Rotate Function,"['Array', 'Math', 'Dynamic Programming']",41.1%,Medium,63.3349%;
397,397. Integer Replacement,"['Dynamic Programming', 'Greedy', '2+']",35.2%,Medium,29.5452%;
398,398. Random Pick Index,"['Hash Table', 'Math', '2+']",62.6%,Medium,9.10025%;
399,399. Evaluate Division,"['Array', 'Depth-First Search', '4+']",59.6%,Medium,67.4245%;
400,400. Nth Digit,"['Math', 'Binary Search']",34.1%,Medium,50.3716%;
401,401. Binary Watch,"['Backtracking', 'Bit Manipulation']",52.2%,Easy,31.4073%;
402,402. Remove K Digits,"['String', 'Stack', 'Greedy', '1+']",30.6%,Medium,60.8879%;
403,403. Frog Jump,"['Array', 'Dynamic Programming']",43.2%,Hard,55.9024%;
404,404. Sum of Left Leaves,"['Tree', 'Depth-First Search', '2+']",56.7%,Easy,31.5896%;
405,405. Convert a Number to Hexadecimal,"['Math', 'Bit Manipulation']",46.7%,Easy,39.246%;
406,406. Queue Reconstruction by Height,"['Array', 'Greedy', '3+']",72.9%,Medium,43.7328%;
407,407. Trapping Rain Water II,"['Array', 'Breadth-First Search', '2+']",47.6%,Hard,58.0135%;
408,408. Valid Word Abbreviation,"['Two Pointers', 'String']",34.8%,Easy,37.6083%;
409,409. Longest Palindrome,"['Hash Table', 'String', 'Greedy']",54.3%,Easy,41.6226%;
410,410. Split Array Largest Sum,"['Array', 'Binary Search', '2+']",53.5%,Hard,71.4087%;
411,411. Minimum Unique Word Abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",39.4%,Hard,39.1672%;
412,412. Fizz Buzz,"['Math', 'String', 'Simulation']",69.8%,Easy,93.6861%;
413,413. Arithmetic Slices,"['Array', 'Dynamic Programming']",65.1%,Medium,50.5849%;
414,414. Third Maximum Number,"['Array', 'Sorting']",33.1%,Easy,40.226%;
415,415. Add Strings,"['Math', 'String', 'Simulation']",52.5%,Easy,53.4712%;
416,416. Partition Equal Subset Sum,"['Array', 'Dynamic Programming']",46.3%,Medium,61.243%;
417,417. Pacific Atlantic Water Flow,"['Array', 'Depth-First Search', '2+']",54.4%,Medium,48.8357%;
418,418. Sentence Screen Fitting,"['String', 'Dynamic Programming', '1+']",35.6%,Medium,29.3886%;
419,419. Battleships in a Board,"['Array', 'Depth-First Search', 'Matrix']",74.8%,Medium,58.4319%;
420,420. Strong Password Checker,"['String', 'Greedy', 'Heap (Priority Queue)']",13.8%,Hard,58.1532%;
421,421. Maximum XOR of Two Numbers in an Array,"['Array', 'Hash Table', '2+']",54.1%,Medium,49.3593%;
422,422. Valid Word Square,"['Array', 'Matrix']",39.9%,Easy,1.3064%;
423,423. Reconstruct Original Digits from English,"['Hash Table', 'Math', 'String']",51.3%,Medium,62.5179%;
424,424. Longest Repeating Character Replacement,"['Hash Table', 'String', 'Sliding Window']",51.8%,Medium,63.395%;
425,425. Word Squares,"['Array', 'String', 'Backtracking', '1+']",52.8%,Hard,19.4164%;
426,426. Convert Binary Search Tree to Sorted Doubly Linked List,"['Linked List', 'Stack', 'Tree', '4+']",64.6%,Medium,35.5829%;
427,427. Construct Quad Tree,"['Array', 'Divide and Conquer', 'Tree', '1+']",74.5%,Medium,77.2364%;
428,428. Serialize and Deserialize N-ary Tree,"['String', 'Tree', 'Depth-First Search', '1+']",65.9%,Hard,58.7358%;
429,429. N-ary Tree Level Order Traversal,"['Tree', 'Breadth-First Search']",70.7%,Medium,23.1026%;
430,430. Flatten a Multilevel Doubly Linked List,"['Linked List', 'Depth-First Search', '1+']",59.6%,Medium,72.9727%;
431,431. Encode N-ary Tree to Binary Tree,"['Tree', 'Depth-First Search', '3+']",78.9%,Hard,0%;
432,432. All O`one Data Structure,"['Hash Table', 'Linked List', 'Design', '1+']",36.6%,Hard,58.8522%;
433,433. Minimum Genetic Mutation,"['Hash Table', 'String', '1+']",52.3%,Medium,79.3094%;
434,434. Number of Segments in a String,['String'],37.2%,Easy,24.215%;
435,435. Non-overlapping Intervals,"['Array', 'Dynamic Programming', '2+']",50.2%,Medium,46.3669%;
436,436. Find Right Interval,"['Array', 'Binary Search', 'Sorting']",50.7%,Medium,20.0045%;
437,437. Path Sum III,"['Tree', 'Depth-First Search', 'Binary Tree']",48.1%,Medium,50.4792%;
438,438. Find All Anagrams in a String,"['Hash Table', 'String', 'Sliding Window']",50.2%,Medium,66.316%;
439,439. Ternary Expression Parser,"['String', 'Stack', 'Recursion']",58.4%,Medium,20.3521%;
440,440. K-th Smallest in Lexicographical Order,['Trie'],31.1%,Hard,51.2582%;
441,441. Arranging Coins,"['Math', 'Binary Search']",46.2%,Easy,46.7325%;
442,442. Find All Duplicates in an Array,"['Array', 'Hash Table']",73.5%,Medium,67.3831%;
443,443. String Compression,"['Two Pointers', 'String']",52.1%,Medium,77.7278%;
444,444. Sequence Reconstruction,"['Array', 'Graph', 'Topological Sort']",26.7%,Medium,0%;
445,445. Add Two Numbers II,"['Linked List', 'Math', 'Stack']",59.6%,Medium,57.0014%;
446,446. Arithmetic Slices II - Subsequence,"['Array', 'Dynamic Programming']",46.7%,Hard,57.1323%;
447,447. Number of Boomerangs,"['Array', 'Hash Table', 'Math']",54.9%,Medium,40.7349%;
448,448. Find All Numbers Disappeared in an Array,"['Array', 'Hash Table']",59.9%,Easy,46.2043%;
449,449. Serialize and Deserialize BST,"['String', 'Tree', 'Depth-First Search', '4+']",57.0%,Medium,47.8697%;
450,450. Delete Node in a BST,"['Tree', 'Binary Search Tree', 'Binary Tree']",50.3%,Medium,43.8626%;
451,451. Sort Characters By Frequency,"['Hash Table', 'String', 'Sorting', '3+']",70.0%,Medium,60.3809%;
452,452. Minimum Number of Arrows to Burst Balloons,"['Array', 'Greedy', 'Sorting']",55.3%,Medium,80.4486%;
453,453. Minimum Moves to Equal Array Elements,"['Array', 'Math']",56.0%,Medium,60.6077%;
454,454. 4Sum II,"['Array', 'Hash Table']",57.2%,Medium,45.2524%;
455,455. Assign Cookies,"['Array', 'Two Pointers', 'Greedy', '1+']",50.0%,Easy,53.5632%;
456,456. 132 Pattern,"['Array', 'Binary Search', 'Stack', '2+']",32.4%,Medium,39.0639%;
457,457. Circular Array Loop,"['Array', 'Hash Table', 'Two Pointers']",32.6%,Medium,31.2377%;
458,458. Poor Pigs,"['Math', 'Dynamic Programming', '1+']",63.0%,Hard,31.8564%;
459,459. Repeated Substring Pattern,"['String', 'String Matching']",43.7%,Easy,34.8284%;
460,460. LFU Cache,"['Hash Table', 'Linked List', 'Design', '1+']",43.0%,Hard,81.5507%;
461,461. Hamming Distance,['Bit Manipulation'],75.0%,Easy,31.5274%;
462,462. Minimum Moves to Equal Array Elements II,"['Array', 'Math', 'Sorting']",60.1%,Medium,40.9293%;
463,463. Island Perimeter,"['Array', 'Depth-First Search', '2+']",69.7%,Easy,47.9516%;
464,464. Can I Win,"['Math', 'Dynamic Programming', '4+']",29.7%,Medium,44.3744%;
465,465. Optimal Account Balancing,"['Array', 'Dynamic Programming', '3+']",49.2%,Hard,53.5314%;
466,466. Count The Repetitions,"['String', 'Dynamic Programming']",29.4%,Hard,40.7349%;
467,467. Unique Substrings in Wraparound String,"['String', 'Dynamic Programming']",38.5%,Medium,21.7064%;
468,468. Validate IP Address,['String'],26.6%,Medium,62.1151%;
469,469. Convex Polygon,"['Math', 'Geometry']",38.8%,Medium,50.0961%;
470,470. Implement Rand10() Using Rand7(),"['Math', 'Rejection Sampling', '2+']",46.4%,Medium,37.905%;
471,471. Encode String with Shortest Length,"['String', 'Dynamic Programming']",50.6%,Hard,39.1672%;
472,472. Concatenated Words,"['Array', 'String', '3+']",50.1%,Hard,74.6478%;
473,473. Matchsticks to Square,"['Array', 'Dynamic Programming', '3+']",40.2%,Medium,37.4822%;
474,474. Ones and Zeroes,"['Array', 'String', 'Dynamic Programming']",46.7%,Medium,35.9857%;
475,475. Heaters,"['Array', 'Two Pointers', '2+']",36.4%,Medium,40.7349%;
476,476. Number Complement,['Bit Manipulation'],67.3%,Easy,27.0643%;
477,477. Total Hamming Distance,"['Array', 'Math', 'Bit Manipulation']",52.1%,Medium,12.9237%;
478,478. Generate Random Point in a Circle,"['Math', 'Geometry', '2+']",39.6%,Medium,26.561%;
479,479. Largest Palindrome Product,['Math'],32.0%,Hard,52.4167%;
480,480. Sliding Window Median,"['Array', 'Hash Table', '2+']",41.4%,Hard,52.2013%;
481,481. Magical String,"['Two Pointers', 'String']",50.7%,Medium,19.4164%;
482,482. License Key Formatting,['String'],43.3%,Easy,26.4477%;
483,483. Smallest Good Base,"['Math', 'Binary Search']",38.6%,Hard,40.7349%;
484,484. Find Permutation,"['Array', 'String', 'Stack', '1+']",66.9%,Medium,0%;
485,485. Max Consecutive Ones,['Array'],56.5%,Easy,39.9572%;
486,486. Predict the Winner,"['Array', 'Math', '3+']",51.1%,Medium,58.3071%;
487,487. Max Consecutive Ones II,"['Array', 'Dynamic Programming', '1+']",49.6%,Medium,47.8697%;
488,488. Zuma Game,"['String', 'Dynamic Programming', '2+']",34.0%,Hard,49.0476%;
489,489. Robot Room Cleaner,"['Backtracking', 'Interactive']",76.6%,Hard,62.0103%;
490,490. The Maze,"['Depth-First Search', '2+']",55.7%,Medium,55.8623%;
491,491. Non-decreasing Subsequences,"['Array', 'Hash Table', 'Backtracking', '1+']",60.1%,Medium,77.9687%;
492,492. Construct the Rectangle,['Math'],54.6%,Easy,24.4699%;
493,493. Reverse Pairs,"['Array', 'Binary Search', '5+']",30.9%,Hard,59.1531%;
494,494. Target Sum,"['Array', 'Dynamic Programming', '1+']",45.7%,Medium,49.8959%;
495,495. Teemo Attacking,"['Array', 'Simulation']",56.9%,Easy,17.0289%;
496,496. Next Greater Element I,"['Array', 'Hash Table', 'Stack', '1+']",71.4%,Easy,61.405%;
497,497. Random Point in Non-overlapping Rectangles,"['Array', 'Math', 'Binary Search', '4+']",39.4%,Medium,0%;
498,498. Diagonal Traverse,"['Array', 'Matrix', 'Simulation']",58.3%,Medium,45.6348%;
499,499. The Maze III,"['Depth-First Search', '4+']",47.3%,Hard,24.6832%;
500,500. Keyboard Row,"['Array', 'Hash Table', 'String']",69.5%,Easy,32.7447%;
501,501. Find Mode in Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",49.2%,Easy,30.5812%;
502,502. IPO,"['Array', 'Greedy', 'Sorting', '1+']",49.7%,Hard,79.6385%;
503,503. Next Greater Element II,"['Array', 'Stack', 'Monotonic Stack']",63.2%,Medium,63.3607%;
504,504. Base 7,['Math'],48.4%,Easy,18.1128%;
505,505. The Maze II,"['Depth-First Search', '4+']",52.5%,Medium,18.9207%;
506,506. Relative Ranks,"['Array', 'Sorting', 'Heap (Priority Queue)']",60.3%,Easy,50.7565%;
507,507. Perfect Number,['Math'],37.6%,Easy,28.5168%;
508,508. Most Frequent Subtree Sum,"['Hash Table', 'Tree', '2+']",64.8%,Medium,15.5482%;
509,509. Fibonacci Number,"['Math', 'Dynamic Programming', '2+']",69.7%,Easy,72.2063%;
510,510. Inorder Successor in BST II,"['Tree', 'Binary Search Tree', 'Binary Tree']",61.0%,Medium,40.0071%;
511,511. Game Play Analysis I,['Database'],76.1%,Easy,53.1284%;
512,512. Game Play Analysis II,['Database'],52.9%,Easy,17.4614%;
513,513. Find Bottom Left Tree Value,"['Tree', 'Depth-First Search', '2+']",66.8%,Medium,30.4731%;
514,514. Freedom Trail,"['String', 'Dynamic Programming', '2+']",47.0%,Hard,27.3577%;
515,515. Find Largest Value in Each Tree Row,"['Tree', 'Depth-First Search', '2+']",64.6%,Medium,9.17392%;
516,516. Longest Palindromic Subsequence,"['String', 'Dynamic Programming']",61.0%,Medium,53.3992%;
517,517. Super Washing Machines,"['Array', 'Greedy']",40.2%,Hard,39.1672%;
518,518. Coin Change II,"['Array', 'Dynamic Programming']",60.5%,Medium,51.2386%;
519,519. Random Flip Matrix,"['Hash Table', 'Math', '2+']",40.0%,Medium,0%;
520,520. Detect Capital,['String'],57.0%,Easy,62.6489%;
521,521. Longest Uncommon Subsequence I,['String'],60.3%,Easy,22.6815%;
522,522. Longest Uncommon Subsequence II,"['Array', 'Hash Table', 'Two Pointers', '2+']",40.5%,Medium,33.8438%;
523,523. Continuous Subarray Sum,"['Array', 'Hash Table', 'Math', '1+']",28.5%,Medium,82.3764%;
524,524. Longest Word in Dictionary through Deleting,"['Array', 'Two Pointers', 'String', '1+']",51.0%,Medium,29.6486%;
525,525. Contiguous Array,"['Array', 'Hash Table', 'Prefix Sum']",46.8%,Medium,50.8789%;
526,526. Beautiful Arrangement,"['Array', 'Dynamic Programming', '3+']",64.5%,Medium,58.5633%;
527,527. Word Abbreviation,"['Array', 'String', 'Greedy', '2+']",60.6%,Hard,49.0476%;
528,528. Random Pick with Weight,"['Array', 'Math', 'Binary Search', '2+']",46.1%,Medium,76.1981%;
529,529. Minesweeper,"['Array', 'Depth-First Search', '2+']",65.7%,Medium,76.1053%;
530,530. Minimum Absolute Difference in BST,"['Tree', 'Depth-First Search', '3+']",57.3%,Easy,20.1732%;
531,531. Lonely Pixel I,"['Array', 'Hash Table', 'Matrix']",62.2%,Medium,34.9753%;
532,532. K-diff Pairs in an Array,"['Array', 'Hash Table', 'Two Pointers', '2+']",41.1%,Medium,55.6744%;
533,533. Lonely Pixel II,"['Array', 'Hash Table', 'Matrix']",48.5%,Medium,0%;
534,534. Game Play Analysis III,['Database'],81.5%,Medium,4.57052%;
535,535. Encode and Decode TinyURL,"['Hash Table', 'String', 'Design', '1+']",85.9%,Medium,32.8501%;
536,536. Construct Binary Tree from String,"['String', 'Tree', 'Depth-First Search', '1+']",56.2%,Medium,21.7064%;
537,537. Complex Number Multiplication,"['Math', 'String', 'Simulation']",71.4%,Medium,44.1806%;
538,538. Convert BST to Greater Tree,"['Tree', 'Depth-First Search', '2+']",67.7%,Medium,23.9529%;
539,539. Minimum Time Difference,"['Array', 'Math', 'String', '1+']",56.4%,Medium,54.0557%;
540,540. Single Element in a Sorted Array,"['Array', 'Binary Search']",59.1%,Medium,86.8398%;
541,541. Reverse String II,"['Two Pointers', 'String']",50.5%,Easy,53.9231%;
542,542. 01 Matrix,"['Array', 'Dynamic Programming', '2+']",44.6%,Medium,58.2944%;
543,543. Diameter of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",56.7%,Easy,59.757%;
544,544. Output Contest Matches,"['String', 'Recursion', 'Simulation']",76.9%,Medium,0%;
545,545. Boundary of Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",44.5%,Medium,37.7722%;
546,546. Remove Boxes,"['Array', 'Dynamic Programming', '1+']",47.8%,Hard,64.7792%;
547,547. Number of Provinces,"['Depth-First Search', '3+']",63.7%,Medium,47.4547%;
548,548. Split Array with Equal Sum,"['Array', 'Prefix Sum']",50.1%,Hard,0%;
549,549. Binary Tree Longest Consecutive Sequence II,"['Tree', 'Depth-First Search', 'Binary Tree']",49.5%,Medium,0%;
550,550. Game Play Analysis IV,['Database'],43.0%,Medium,20.4028%;
551,551. Student Attendance Record I,['String'],48.2%,Easy,12.5062%;
552,552. Student Attendance Record II,['Dynamic Programming'],41.4%,Hard,37.1987%;
553,553. Optimal Division,"['Array', 'Math', 'Dynamic Programming']",59.9%,Medium,43.5587%;
554,554. Brick Wall,"['Array', 'Hash Table']",53.5%,Medium,47.8436%;
555,555. Split Concatenated Strings,"['Array', 'String', 'Greedy']",43.6%,Medium,0%;
556,556. Next Greater Element III,"['Math', 'Two Pointers', 'String']",34.0%,Medium,65.2001%;
557,557. Reverse Words in a String III,"['Two Pointers', 'String']",81.9%,Easy,65.7715%;
558,558. Logical OR of Two Binary Grids Represented as Quad-Trees,"['Divide and Conquer', 'Tree']",48.6%,Medium,52.4167%;
559,559. Maximum Depth of N-ary Tree,"['Tree', 'Depth-First Search', '1+']",71.7%,Easy,20.378%;
560,560. Subarray Sum Equals K,"['Array', 'Hash Table', 'Prefix Sum']",43.7%,Medium,87.6577%;
561,561. Array Partition,"['Array', 'Greedy', 'Sorting', '1+']",77.1%,Easy,39.6531%;
562,562. Longest Line of Consecutive One in Matrix,"['Array', 'Dynamic Programming', 'Matrix']",50.2%,Medium,38.647%;
563,563. Binary Tree Tilt,"['Tree', 'Depth-First Search', 'Binary Tree']",59.9%,Easy,17.4614%;
564,564. Find the Closest Palindrome,"['Math', 'String']",21.9%,Hard,72.6173%;
565,565. Array Nesting,"['Array', 'Depth-First Search']",56.4%,Medium,0%;
566,566. Reshape the Matrix,"['Array', 'Matrix', 'Simulation']",62.9%,Easy,36.6484%;
567,567. Permutation in String,"['Hash Table', 'Two Pointers', 'String', '1+']",44.4%,Medium,70.3185%;
568,568. Maximum Vacation Days,"['Array', 'Dynamic Programming', 'Matrix']",45.0%,Hard,30.1546%;
569,569. Median Employee Salary,['Database'],67.5%,Hard,8.54266%;
570,570. Managers with at Least 5 Direct Reports,['Database'],66.7%,Medium,8.14441%;
571,571. Find Median Given Frequency of Numbers,['Database'],43.9%,Hard,0%;
572,572. Subtree of Another Tree,"['Tree', 'Depth-First Search', '3+']",46.3%,Easy,37.2025%;
573,573. Squirrel Simulation,"['Array', 'Math']",55.1%,Medium,0%;
574,574. Winning Candidate,['Database'],59.8%,Medium,10.0509%;
575,575. Distribute Candies,"['Array', 'Hash Table']",66.4%,Easy,18.5918%;
576,576. Out of Boundary Paths,['Dynamic Programming'],44.3%,Medium,33.6722%;
577,577. Employee Bonus,['Database'],75.1%,Easy,0%;
578,578. Get Highest Answer Rate Question,['Database'],41.0%,Medium,10.4038%;
579,579. Find Cumulative Salary of an Employee,['Database'],45.6%,Hard,0%;
580,580. Count Student Number in Departments,['Database'],58.6%,Medium,4.80365%;
581,581. Shortest Unsorted Continuous Subarray,"['Array', 'Two Pointers', 'Stack', '3+']",36.4%,Medium,41.5973%;
582,582. Kill Process,"['Array', 'Hash Table', 'Tree', '2+']",68.7%,Medium,30.1546%;
583,583. Delete Operation for Two Strings,"['String', 'Dynamic Programming']",59.7%,Medium,38.0407%;
584,584. Find Customer Referee,['Database'],69.4%,Easy,30.3647%;
585,585. Investments in 2016,['Database'],52.3%,Medium,22.0761%;
586,586. Customer Placing the Largest Number of Orders,['Database'],69.4%,Easy,24.303%;
587,587. Erect the Fence,"['Array', 'Math', 'Geometry']",52.2%,Hard,91.5695%;
588,588. Design In-Memory File System,"['Hash Table', 'String', 'Design', '1+']",48.6%,Hard,81.1733%;
589,589. N-ary Tree Preorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",75.9%,Easy,13.9311%;
590,590. N-ary Tree Postorder Traversal,"['Stack', 'Tree', 'Depth-First Search']",77.4%,Easy,10.0509%;
591,591. Tag Validator,"['String', 'Stack']",37.2%,Hard,25.1229%;
592,592. Fraction Addition and Subtraction,"['Math', 'String', 'Simulation']",52.4%,Medium,50.0961%;
593,593. Valid Square,"['Math', 'Geometry']",44.0%,Medium,43.7259%;
594,594. Longest Harmonious Subsequence,"['Array', 'Hash Table', 'Sorting']",53.5%,Easy,30.5575%;
595,595. Big Countries,['Database'],70.8%,Easy,83.4323%;
596,596. Classes More Than 5 Students,['Database'],47.9%,Easy,35.4662%;
597,597. Friend Requests I: Overall Acceptance Rate,['Database'],42.5%,Easy,10.4038%;
598,598. Range Addition II,"['Array', 'Math']",55.3%,Easy,37.9803%;
599,599. Minimum Index Sum of Two Lists,"['Array', 'Hash Table', 'String']",53.3%,Easy,25.0731%;
600,600. Non-negative Integers without Consecutive Ones,['Dynamic Programming'],39.1%,Hard,50.0961%;
601,601. Human Traffic of Stadium,['Database'],50.0%,Hard,31.0771%;
602,602. Friend Requests II: Who Has the Most Friends,['Database'],61.1%,Medium,21.0059%;
603,603. Consecutive Available Seats,['Database'],67.6%,Easy,9.50427%;
604,604. Design Compressed String Iterator,"['Array', 'Hash Table', 'String', '2+']",39.5%,Easy,16.3206%;
605,605. Can Place Flowers,"['Array', 'Greedy']",32.5%,Easy,45.3024%;
606,606. Construct String from Binary Tree,"['String', 'Tree', 'Depth-First Search', '1+']",63.9%,Easy,28.8262%;
607,607. Sales Person,['Database'],69.7%,Easy,31.3546%;
608,608. Tree Node,['Database'],71.6%,Medium,39.7327%;
609,609. Find Duplicate File in System,"['Array', 'Hash Table', 'String']",67.8%,Medium,78.0524%;
610,610. Triangle Judgement,['Database'],70.9%,Easy,0%;
611,611. Valid Triangle Number,"['Array', 'Two Pointers', '3+']",50.5%,Medium,60.2766%;
612,612. Shortest Distance in a Plane,['Database'],62.7%,Medium,12.5261%;
613,613. Shortest Distance in a Line,['Database'],81.0%,Easy,0%;
614,614. Second Degree Follower,['Database'],37.4%,Medium,16.0551%;
615,615. Average Salary: Departments VS Company,['Database'],56.6%,Hard,0%;
616,616. Add Bold Tag in String,"['Array', 'Hash Table', 'String', '2+']",48.8%,Medium,56.8418%;
617,617. Merge Two Binary Trees,"['Tree', 'Depth-First Search', '2+']",78.6%,Easy,30.5411%;
618,618. Students Report By Geography,['Database'],64.2%,Hard,14.194%;
619,619. Biggest Single Number,['Database'],49.8%,Easy,4.35081%;
620,620. Not Boring Movies,['Database'],72.3%,Easy,16.3713%;
621,621. Task Scheduler,"['Array', 'Hash Table', 'Greedy', '3+']",56.3%,Medium,66.7766%;
622,622. Design Circular Queue,"['Array', 'Linked List', 'Design', '1+']",51.6%,Medium,61.2293%;
623,623. Add One Row to Tree,"['Tree', 'Depth-First Search', '2+']",59.5%,Medium,58.3619%;
624,624. Maximum Distance in Arrays,"['Array', 'Greedy']",41.8%,Medium,30.1546%;
625,625. Minimum Factorization,"['Math', 'Greedy']",33.5%,Medium,33.8438%;
626,626. Exchange Seats,['Database'],70.0%,Medium,39.0639%;
627,627. Swap Salary,['Database'],83.1%,Easy,35.6219%;
628,628. Maximum Product of Three Numbers,"['Array', 'Math', 'Sorting']",46.0%,Easy,57.9254%;
629,629. K Inverse Pairs Array,['Dynamic Programming'],42.7%,Hard,54.0298%;
630,630. Course Schedule III,"['Array', 'Greedy', 'Heap (Priority Queue)']",40.2%,Hard,34.005%;
631,631. Design Excel Sum Formula,"['Graph', 'Design', 'Topological Sort']",43.5%,Hard,63.8611%;
632,632. Smallest Range Covering Elements from K Lists,"['Array', 'Hash Table', 'Greedy', '3+']",60.9%,Hard,55.646%;
633,633. Sum of Square Numbers,"['Math', 'Two Pointers', 'Binary Search']",34.4%,Medium,30.6949%;
634,634. Find the Derangement of An Array,"['Math', 'Dynamic Programming']",42.0%,Medium,0%;
635,635. Design Log Storage System,"['Hash Table', 'String', 'Design', '1+']",62.8%,Medium,54.5896%;
636,636. Exclusive Time of Functions,"['Array', 'Stack']",61.2%,Medium,50.5291%;
637,637. Average of Levels in Binary Tree,"['Tree', 'Depth-First Search', '2+']",71.8%,Easy,13.7021%;
638,638. Shopping Offers,"['Array', 'Dynamic Programming', '4+']",53.3%,Medium,31.7834%;
639,639. Decode Ways II,"['String', 'Dynamic Programming']",30.4%,Hard,30.9747%;
640,640. Solve the Equation,"['Math', 'String', 'Simulation']",43.4%,Medium,11.5958%;
641,641. Design Circular Deque,"['Array', 'Linked List', 'Design', '1+']",57.4%,Medium,8.60197%;
642,642. Design Search Autocomplete System,"['String', 'Design', 'Trie', '1+']",48.6%,Hard,50.9403%;
643,643. Maximum Average Subarray I,"['Array', 'Sliding Window']",43.7%,Easy,25.099%;
644,644. Maximum Average Subarray II,"['Array', 'Binary Search', 'Prefix Sum']",35.9%,Hard,0%;
645,645. Set Mismatch,"['Array', 'Hash Table', '2+']",42.8%,Easy,63.5042%;
646,646. Maximum Length of Pair Chain,"['Array', 'Dynamic Programming', '2+']",56.5%,Medium,35.1629%;
647,647. Palindromic Substrings,"['String', 'Dynamic Programming']",66.8%,Medium,57.5913%;
648,648. Replace Words,"['Array', 'Hash Table', 'String', '1+']",62.7%,Medium,19.4164%;
649,649. Dota2 Senate,"['String', 'Greedy', 'Queue']",40.6%,Medium,8.28335%;
650,650. 2 Keys Keyboard,"['Math', 'Dynamic Programming']",53.4%,Medium,23.2065%;
651,651. 4 Keys Keyboard,"['Math', 'Dynamic Programming']",54.6%,Medium,0%;
652,652. Find Duplicate Subtrees,"['Hash Table', 'Tree', '2+']",59.0%,Medium,61.6641%;
653,653. Two Sum IV - Input is a BST,"['Hash Table', 'Two Pointers', 'Tree', '4+']",61.0%,Easy,53.6803%;
654,654. Maximum Binary Tree,"['Array', 'Divide and Conquer', '4+']",84.7%,Medium,17.072%;
655,655. Print Binary Tree,"['Tree', 'Depth-First Search', '2+']",61.9%,Medium,43.5821%;
656,656. Coin Path,"['Array', 'Dynamic Programming']",31.8%,Hard,0%;
657,657. Robot Return to Origin,"['String', 'Simulation']",75.3%,Easy,29.5428%;
658,658. Find K Closest Elements,"['Array', 'Two Pointers', '4+']",46.8%,Medium,76.4715%;
659,659. Split Array into Consecutive Subsequences,"['Array', 'Hash Table', 'Greedy', '1+']",50.8%,Medium,51.5342%;
660,660. Remove 9,['Math'],57.3%,Hard,0%;
661,661. Image Smoother,"['Array', 'Matrix']",55.4%,Easy,39.1672%;
662,662. Maximum Width of Binary Tree,"['Tree', 'Depth-First Search', '2+']",40.7%,Medium,53.6253%;
663,663. Equal Tree Partition,"['Tree', 'Depth-First Search', 'Binary Tree']",41.4%,Medium,0%;
664,664. Strange Printer,"['String', 'Dynamic Programming']",46.8%,Hard,35.9111%;
665,665. Non-decreasing Array,['Array'],24.3%,Medium,37.6204%;
666,666. Path Sum IV,"['Array', 'Tree', 'Depth-First Search', '1+']",59.4%,Medium,48.4923%;
667,667. Beautiful Arrangement II,"['Array', 'Math']",59.8%,Medium,27.3577%;
668,668. Kth Smallest Number in Multiplication Table,"['Math', 'Binary Search']",51.6%,Hard,26.8149%;
669,669. Trim a Binary Search Tree,"['Tree', 'Depth-First Search', '2+']",66.4%,Medium,38.0407%;
670,670. Maximum Swap,"['Math', 'Greedy']",47.9%,Medium,41.9789%;
671,671. Second Minimum Node In a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",44.1%,Easy,31.3546%;
672,672. Bulb Switcher II,"['Math', 'Bit Manipulation', '2+']",50.7%,Medium,30.1546%;
673,673. Number of Longest Increasing Subsequence,"['Array', 'Dynamic Programming', '2+']",42.8%,Medium,35.3384%;
674,674. Longest Continuous Increasing Subsequence,['Array'],49.3%,Easy,31.8413%;
675,675. Cut Off Trees for Golf Event,"['Array', 'Breadth-First Search', '2+']",34.1%,Hard,39.9269%;
676,676. Implement Magic Dictionary,"['Hash Table', 'String', 'Design', '1+']",56.9%,Medium,0%;
677,677. Map Sum Pairs,"['Hash Table', 'String', 'Design', '1+']",56.8%,Medium,15.0708%;
678,678. Valid Parenthesis String,"['String', 'Dynamic Programming', '2+']",34.1%,Medium,57.2859%;
679,679. 24 Game,"['Array', 'Math', 'Backtracking']",49.2%,Hard,60.188%;
680,680. Valid Palindrome II,"['Two Pointers', 'String', 'Greedy']",39.3%,Easy,58.1453%;
681,681. Next Closest Time,"['String', 'Enumeration']",46.4%,Medium,42.1439%;
682,682. Baseball Game,"['Array', 'Stack', 'Simulation']",74.2%,Easy,51.3698%;
683,683. K Empty Slots,"['Array', 'Binary Indexed Tree', '2+']",37.0%,Hard,19.1652%;
684,684. Redundant Connection,"['Depth-First Search', '3+']",62.2%,Medium,45.0239%;
685,685. Redundant Connection II,"['Depth-First Search', '3+']",34.1%,Hard,20.6373%;
686,686. Repeated String Match,"['String', 'String Matching']",34.2%,Medium,36.1252%;
687,687. Longest Univalue Path,"['Tree', 'Depth-First Search', 'Binary Tree']",40.4%,Medium,37.4335%;
688,688. Knight Probability in Chessboard,['Dynamic Programming'],52.1%,Medium,30.1546%;
689,689. Maximum Sum of 3 Non-Overlapping Subarrays,"['Array', 'Dynamic Programming']",49.0%,Hard,22.4287%;
690,690. Employee Importance,"['Hash Table', 'Depth-First Search', '1+']",65.5%,Medium,47.7576%;
691,691. Stickers to Spell Word,"['Array', 'String', '4+']",46.3%,Hard,28.6705%;
692,692. Top K Frequent Words,"['Hash Table', 'String', 'Trie', '4+']",57.1%,Medium,67.8122%;
693,693. Binary Number with Alternating Bits,['Bit Manipulation'],61.6%,Easy,41.707%;
694,694. Number of Distinct Islands,"['Hash Table', 'Depth-First Search', '3+']",60.7%,Medium,52.4641%;
695,695. Max Area of Island,"['Array', 'Depth-First Search', '3+']",71.8%,Medium,57.1131%;
696,696. Count Binary Substrings,"['Two Pointers', 'String']",65.6%,Easy,58.8297%;
697,697. Degree of an Array,"['Array', 'Hash Table']",55.9%,Easy,75.7568%;
698,698. Partition to K Equal Sum Subsets,"['Array', 'Dynamic Programming', '4+']",40.1%,Medium,53.7472%;
699,699. Falling Squares,"['Array', 'Segment Tree', 'Ordered Set']",44.5%,Hard,19.1652%;
700,700. Search in a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",77.6%,Easy,20.9609%;
701,701. Insert into a Binary Search Tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",74.3%,Medium,21.5023%;
702,702. Search in a Sorted Array of Unknown Size,"['Array', 'Binary Search', 'Interactive']",71.5%,Medium,30.6728%;
703,703. Kth Largest Element in a Stream,"['Tree', 'Design', '4+']",55.5%,Easy,35.8588%;
704,704. Binary Search,"['Array', 'Binary Search']",55.4%,Easy,83.4986%;
705,705. Design HashSet,"['Array', 'Hash Table', 'Linked List', '2+']",65.6%,Easy,42.752%;
706,706. Design HashMap,"['Array', 'Hash Table', 'Linked List', '2+']",64.7%,Easy,62.5022%;
707,707. Design Linked List,"['Linked List', 'Design']",27.6%,Medium,40.4959%;
708,708. Insert into a Sorted Circular Linked List,['Linked List'],34.5%,Medium,50.8759%;
709,709. To Lower Case,['String'],82.3%,Easy,23.5901%;
710,710. Random Pick with Blacklist,"['Array', 'Hash Table', 'Math', '3+']",33.5%,Hard,25.6401%;
711,711. Number of Distinct Islands II,"['Hash Table', 'Depth-First Search', '3+']",51.8%,Hard,57.9822%;
712,712. Minimum ASCII Delete Sum for Two Strings,"['String', 'Dynamic Programming']",62.5%,Medium,17.8678%;
713,713. Subarray Product Less Than K,"['Array', 'Sliding Window']",45.7%,Medium,54.9531%;
714,714. Best Time to Buy and Sell Stock with Transaction Fee,"['Array', 'Dynamic Programming', 'Greedy']",65.0%,Medium,37.1288%;
715,715. Range Module,"['Design', 'Segment Tree', 'Ordered Set']",44.6%,Hard,59.2271%;
716,716. Max Stack,"['Linked List', 'Stack', 'Design', '2+']",45.2%,Hard,70.0211%;
717,717. 1-bit and 2-bit Characters,['Array'],45.7%,Easy,23.8063%;
718,718. Maximum Length of Repeated Subarray,"['Array', 'Binary Search', '4+']",51.3%,Medium,87.2463%;
719,719. Find K-th Smallest Pair Distance,"['Array', 'Two Pointers', '2+']",36.7%,Hard,43.7259%;
720,720. Longest Word in Dictionary,"['Array', 'Hash Table', 'String', '2+']",51.9%,Medium,27.9223%;
721,721. Accounts Merge,"['Array', 'String', '3+']",56.3%,Medium,64.0149%;
722,722. Remove Comments,"['Array', 'String']",38.2%,Medium,74.0126%;
723,723. Candy Crush,"['Array', 'Two Pointers', 'Matrix', '1+']",76.6%,Medium,64.2123%;
724,724. Find Pivot Index,"['Array', 'Prefix Sum']",54.5%,Easy,62.5478%;
725,725. Split Linked List in Parts,['Linked List'],57.2%,Medium,56.9233%;
726,726. Number of Atoms,"['Hash Table', 'String', 'Stack', '1+']",52.1%,Hard,61.9966%;
727,727. Minimum Window Subsequence,"['String', 'Dynamic Programming', '1+']",42.9%,Hard,37.1288%;
728,728. Self Dividing Numbers,['Math'],77.8%,Easy,22.1461%;
729,729. My Calendar I,"['Binary Search', 'Design', '2+']",56.9%,Medium,58.167%;
730,730. Count Different Palindromic Subsequences,"['String', 'Dynamic Programming']",44.8%,Hard,58.6488%;
731,731. My Calendar II,"['Binary Search', 'Design', '2+']",55.0%,Medium,45.0491%;
732,732. My Calendar III,"['Binary Search', 'Design', '2+']",71.5%,Hard,64.5794%;
733,733. Flood Fill,"['Array', 'Depth-First Search', '2+']",61.8%,Easy,63.7882%;
734,734. Sentence Similarity,"['Array', 'Hash Table', 'String']",44.0%,Easy,12.5261%;
735,735. Asteroid Collision,"['Array', 'Stack']",44.4%,Medium,68.3967%;
736,736. Parse Lisp Expression,"['Hash Table', 'String', 'Stack', '1+']",51.6%,Hard,43.5173%;
737,737. Sentence Similarity II,"['Array', 'Hash Table', 'String', '3+']",49.0%,Medium,27.3577%;
738,738. Monotone Increasing Digits,"['Math', 'Greedy']",47.2%,Medium,30.512%;
739,739. Daily Temperatures,"['Array', 'Stack', 'Monotonic Stack']",66.3%,Medium,74.0372%;
740,740. Delete and Earn,"['Array', 'Hash Table', '1+']",57.1%,Medium,49.2405%;
741,741. Cherry Pickup,"['Array', 'Dynamic Programming', 'Matrix']",36.3%,Hard,41.8733%;
742,742. Closest Leaf in a Binary Tree,"['Tree', 'Depth-First Search', '2+']",45.9%,Medium,26.561%;
743,743. Network Delay Time,"['Depth-First Search', '4+']",51.8%,Medium,34.9327%;
744,744. Find Smallest Letter Greater Than Target,"['Array', 'Binary Search']",45.6%,Easy,26.3587%;
745,745. Prefix and Suffix Search,"['Hash Table', 'String', 'Design', '1+']",41.3%,Hard,38.3795%;
746,746. Min Cost Climbing Stairs,"['Array', 'Dynamic Programming']",63.1%,Easy,44.0078%;
747,747. Largest Number At Least Twice of Others,"['Array', 'Sorting']",47.0%,Easy,10.1757%;
748,748. Shortest Completing Word,"['Array', 'Hash Table', 'String']",59.2%,Easy,5.05149%;
749,749. Contain Virus,"['Array', 'Depth-First Search', '3+']",51.1%,Hard,40.9451%;
750,750. Number Of Corner Rectangles,"['Array', 'Math', '2+']",67.5%,Medium,30.1546%;
751,751. IP to CIDR,"['String', 'Bit Manipulation']",54.5%,Medium,64.7792%;
752,752. Open the Lock,"['Array', 'Hash Table', 'String', '1+']",55.6%,Medium,46.3095%;
753,753. Cracking the Safe,"['Depth-First Search', 'Graph', '1+']",55.8%,Hard,53.608%;
754,754. Reach a Number,"['Math', 'Binary Search']",42.7%,Medium,45.6348%;
755,755. Pour Water,"['Array', 'Simulation']",46.4%,Medium,76.0229%;
756,756. Pyramid Transition Matrix,"['Bit Manipulation', '2+']",52.7%,Medium,15.5482%;
757,757. Set Intersection Size At Least Two,"['Array', 'Greedy', 'Sorting']",43.8%,Hard,68.3654%;
758,758. Bold Words in String,"['Array', 'Hash Table', 'String', '2+']",50.8%,Medium,0%;
759,759. Employee Free Time,"['Array', 'Sorting', 'Heap (Priority Queue)']",71.8%,Hard,58.5018%;
760,760. Find Anagram Mappings,"['Array', 'Hash Table']",82.9%,Easy,0%;
761,761. Special Binary String,"['String', 'Recursion']",60.4%,Hard,40.9451%;
762,762. Prime Number of Set Bits in Binary Representation,"['Math', 'Bit Manipulation']",68.0%,Easy,15.1876%;
763,763. Partition Labels,"['Hash Table', 'Two Pointers', 'String', '1+']",79.8%,Medium,46.8998%;
764,764. Largest Plus Sign,"['Array', 'Dynamic Programming']",48.3%,Medium,24.1579%;
765,765. Couples Holding Hands,"['Greedy', 'Depth-First Search', '3+']",56.8%,Hard,26.561%;
766,766. Toeplitz Matrix,"['Array', 'Matrix']",68.7%,Easy,63.9497%;
767,767. Reorganize String,"['Hash Table', 'String', 'Greedy', '3+']",52.9%,Medium,72.9359%;
768,768. Max Chunks To Make Sorted II,"['Array', 'Stack', 'Greedy', '2+']",52.8%,Hard,67.5831%;
769,769. Max Chunks To Make Sorted,"['Array', 'Stack', 'Greedy', '2+']",58.2%,Medium,65.7562%;
770,770. Basic Calculator IV,"['Hash Table', 'Math', 'String', '2+']",56.0%,Hard,48.4923%;
771,771. Jewels and Stones,"['Hash Table', 'String']",88.2%,Easy,49.0774%;
772,772. Basic Calculator III,"['Math', 'String', 'Stack', '1+']",48.8%,Hard,65.2937%;
773,773. Sliding Puzzle,"['Array', 'Breadth-First Search', 'Matrix']",64.1%,Hard,51.2535%;
774,774. Minimize Max Distance to Gas Station,"['Array', 'Binary Search']",51.7%,Hard,19.1652%;
775,775. Global and Local Inversions,"['Array', 'Math']",43.4%,Medium,27.8646%;
776,776. Split BST,"['Tree', 'Binary Search Tree', '2+']",72.0%,Medium,0%;
777,777. Swap Adjacent in LR String,"['Two Pointers', 'String']",36.8%,Medium,46.9534%;
778,778. Swim in Rising Water,"['Array', 'Binary Search', '5+']",59.9%,Hard,22.8589%;
779,779. K-th Symbol in Grammar,"['Math', 'Bit Manipulation', 'Recursion']",41.2%,Medium,55.1928%;
780,780. Reaching Points,['Math'],32.6%,Hard,90.2189%;
781,781. Rabbits in Forest,"['Array', 'Hash Table', 'Math', '1+']",54.9%,Medium,34.4775%;
782,782. Transform to Chessboard,"['Array', 'Math', 'Bit Manipulation', '1+']",51.7%,Hard,44.5955%;
783,783. Minimum Distance Between BST Nodes,"['Tree', 'Depth-First Search', '3+']",59.3%,Easy,59.8102%;
784,784. Letter Case Permutation,"['String', 'Backtracking', 'Bit Manipulation']",73.8%,Medium,30.7515%;
785,785. Is Graph Bipartite?,"['Depth-First Search', '3+']",53.0%,Medium,46.6796%;
786,786. K-th Smallest Prime Fraction,"['Array', 'Binary Search', 'Sorting', '1+']",51.5%,Medium,10.0509%;
787,787. Cheapest Flights Within K Stops,"['Dynamic Programming', '5+']",37.0%,Medium,63.1552%;
788,788. Rotated Digits,"['Math', 'Dynamic Programming']",56.7%,Medium,23.4795%;
789,789. Escape The Ghosts,"['Array', 'Math']",60.8%,Medium,19.1652%;
790,790. Domino and Tromino Tiling,['Dynamic Programming'],52.9%,Medium,89.7578%;
791,791. Custom Sort String,"['Hash Table', 'String', 'Sorting']",69.2%,Medium,39.8632%;
792,792. Number of Matching Subsequences,"['Hash Table', 'String', 'Trie', '1+']",51.7%,Medium,29.5754%;
793,793. Preimage Size of Factorial Zeroes Function,"['Math', 'Binary Search']",43.2%,Hard,16.3206%;
794,794. Valid Tic-Tac-Toe State,"['Array', 'String']",35.1%,Medium,40.7349%;
795,795. Number of Subarrays with Bounded Maximum,"['Array', 'Two Pointers']",52.8%,Medium,46.1871%;
796,796. Rotate String,"['String', 'String Matching']",55.1%,Easy,55.2485%;
797,797. All Paths From Source to Target,"['Backtracking', 'Depth-First Search', '2+']",82.3%,Medium,70.7629%;
798,798. Smallest Rotation with Highest Score,"['Array', 'Prefix Sum']",50.2%,Hard,35.377%;
799,799. Champagne Tower,['Dynamic Programming'],51.3%,Medium,31.8564%;
800,800. Similar RGB Color,"['Math', 'String', 'Enumeration']",67.0%,Easy,33.8438%;
801,801. Minimum Swaps To Make Sequences Increasing,"['Array', 'Dynamic Programming']",39.4%,Hard,34.3739%;
802,802. Find Eventual Safe States,"['Depth-First Search', '3+']",56.4%,Medium,38.3948%;
803,803. Bricks Falling When Hit,"['Array', 'Union Find', 'Matrix']",34.3%,Hard,0%;
804,804. Unique Morse Code Words,"['Array', 'Hash Table', 'String']",82.6%,Easy,26.1388%;
805,805. Split Array With Same Average,"['Array', 'Math', '3+']",25.7%,Hard,36.7581%;
806,806. Number of Lines To Write String,"['Array', 'String']",66.6%,Easy,4.68533%;
807,807. Max Increase to Keep City Skyline,"['Array', 'Greedy', 'Matrix']",85.9%,Medium,37.2381%;
808,808. Soup Servings,"['Math', 'Dynamic Programming', '1+']",43.4%,Medium,75.402%;
809,809. Expressive Words,"['Array', 'Two Pointers', 'String']",46.2%,Medium,32.7485%;
810,810. Chalkboard XOR Game,"['Array', 'Math', 'Bit Manipulation', '2+']",56.2%,Hard,0%;
811,811. Subdomain Visit Count,"['Array', 'Hash Table', 'String', '1+']",75.5%,Medium,83.3034%;
812,812. Largest Triangle Area,"['Array', 'Math', 'Geometry']",59.9%,Easy,36.0624%;
813,813. Largest Sum of Averages,"['Array', 'Dynamic Programming', '1+']",53.0%,Medium,11.174%;
814,814. Binary Tree Pruning,"['Tree', 'Depth-First Search', 'Binary Tree']",72.4%,Medium,33.0595%;
815,815. Bus Routes,"['Array', 'Hash Table', '1+']",45.6%,Hard,61.8261%;
816,816. Ambiguous Coordinates,"['String', 'Backtracking']",56.3%,Medium,17.1707%;
817,817. Linked List Components,"['Array', 'Hash Table', 'Linked List']",57.7%,Medium,33.0595%;
818,818. Race Car,['Dynamic Programming'],43.3%,Hard,81.9343%;
819,819. Most Common Word,"['Hash Table', 'String', 'Counting']",44.8%,Easy,38.6367%;
820,820. Short Encoding of Words,"['Array', 'Hash Table', 'String', '1+']",60.6%,Medium,0%;
821,821. Shortest Distance to a Character,"['Array', 'Two Pointers', 'String']",71.3%,Easy,22.46%;
822,822. Card Flipping Game,"['Array', 'Hash Table']",45.9%,Medium,0%;
823,823. Binary Trees With Factors,"['Array', 'Hash Table', '1+']",49.7%,Medium,43.5173%;
824,824. Goat Latin,['String'],67.9%,Easy,14.6752%;
825,825. Friends Of Appropriate Ages,"['Array', 'Two Pointers', '2+']",46.3%,Medium,12.0454%;
826,826. Most Profit Assigning Work,"['Array', 'Two Pointers', '3+']",44.8%,Medium,18.1128%;
827,827. Making A Large Island,"['Array', 'Depth-First Search', '3+']",44.9%,Hard,61.368%;
828,828. Count Unique Characters of All Substrings of a Given String,"['Hash Table', 'String', '1+']",51.8%,Hard,9.7897%;
829,829. Consecutive Numbers Sum,"['Math', 'Enumeration']",41.6%,Hard,52.2295%;
830,830. Positions of Large Groups,['String'],51.8%,Easy,10.2445%;
831,831. Masking Personal Information,['String'],47.4%,Medium,18.1128%;
832,832. Flipping an Image,"['Array', 'Two Pointers', 'Matrix', '1+']",80.7%,Easy,45.8163%;
833,833. Find And Replace in String,"['Array', 'String', 'Sorting']",54.0%,Medium,45.1464%;
834,834. Sum of Distances in Tree,"['Dynamic Programming', 'Tree', '2+']",59.3%,Hard,72.9517%;
835,835. Image Overlap,"['Array', 'Matrix']",63.9%,Medium,82.621%;
836,836. Rectangle Overlap,"['Math', 'Geometry']",43.9%,Easy,46.7737%;
837,837. New 21 Game,"['Math', 'Dynamic Programming', '2+']",36.2%,Medium,46.8931%;
838,838. Push Dominoes,"['Two Pointers', 'String', '1+']",57.0%,Medium,77.7207%;
839,839. Similar String Groups,"['Array', 'String', '3+']",48.0%,Hard,51.5342%;
840,840. Magic Squares In Grid,"['Array', 'Math', 'Matrix']",38.6%,Medium,35.1184%;
841,841. Keys and Rooms,"['Depth-First Search', '2+']",71.5%,Medium,64.3279%;
842,842. Split Array into Fibonacci Sequence,"['String', 'Backtracking']",38.4%,Medium,41.8733%;
843,843. Guess the Word,"['Array', 'Math', 'String', '2+']",41.4%,Hard,67.6049%;
844,844. Backspace String Compare,"['Two Pointers', 'String', 'Stack', '1+']",48.1%,Easy,38.3663%;
845,845. Longest Mountain in Array,"['Array', 'Two Pointers', '2+']",40.2%,Medium,62.4763%;
846,846. Hand of Straights,"['Array', 'Hash Table', 'Greedy', '1+']",56.2%,Medium,28.6877%;
847,847. Shortest Path Visiting All Nodes,"['Dynamic Programming', '4+']",61.1%,Hard,48.9241%;
848,848. Shifting Letters,"['Array', 'String']",45.2%,Medium,46.4807%;
849,849. Maximize Distance to Closest Person,['Array'],47.6%,Medium,71.4925%;
850,850. Rectangle Area II,"['Array', 'Segment Tree', '2+']",53.9%,Hard,52.6988%;
851,851. Loud and Rich,"['Array', 'Depth-First Search', '2+']",58.4%,Medium,5.05149%;
852,852. Peak Index in a Mountain Array,"['Array', 'Binary Search']",69.1%,Medium,73.9672%;
853,853. Car Fleet,"['Array', 'Stack', 'Sorting', '1+']",50.3%,Medium,31.686%;
854,854. K-Similar Strings,"['String', 'Breadth-First Search']",40.1%,Hard,31.8564%;
855,855. Exam Room,"['Design', 'Heap (Priority Queue)', '1+']",43.4%,Medium,39.0043%;
856,856. Score of Parentheses,"['String', 'Stack']",64.8%,Medium,41.6767%;
857,857. Minimum Cost to Hire K Workers,"['Array', 'Greedy', 'Sorting', '1+']",52.3%,Hard,41.1838%;
858,858. Mirror Reflection,"['Math', 'Geometry', 'Number Theory']",63.1%,Medium,37.6083%;
859,859. Buddy Strings,"['Hash Table', 'String']",29.2%,Easy,46.4663%;
860,860. Lemonade Change,"['Array', 'Greedy']",52.9%,Easy,32.6993%;
861,861. Score After Flipping Matrix,"['Array', 'Greedy', 'Bit Manipulation', '1+']",74.9%,Medium,25.1229%;
862,862. Shortest Subarray with Sum at Least K,"['Array', 'Binary Search', 'Queue', '4+']",26.1%,Hard,51.7547%;
863,863. All Nodes Distance K in Binary Tree,"['Tree', 'Depth-First Search', '2+']",62.3%,Medium,59.9869%;
864,864. Shortest Path to Get All Keys,"['Array', 'Bit Manipulation', '2+']",45.5%,Hard,63.8611%;
865,865. Smallest Subtree with all the Deepest Nodes,"['Hash Table', 'Tree', '3+']",68.9%,Medium,7.79914%;
866,866. Prime Palindrome,['Math'],25.7%,Medium,34.3338%;
867,867. Transpose Matrix,"['Array', 'Matrix', 'Simulation']",64.1%,Easy,56.7888%;
868,868. Binary Gap,['Bit Manipulation'],62.2%,Easy,24.0478%;
869,869. Reordered Power of 2,"['Math', 'Sorting', 'Counting', '1+']",63.6%,Medium,39.441%;
870,870. Advantage Shuffle,"['Array', 'Two Pointers', 'Greedy', '1+']",51.9%,Medium,29.8079%;
871,871. Minimum Number of Refueling Stops,"['Array', 'Dynamic Programming', '2+']",39.8%,Hard,53.639%;
872,872. Leaf-Similar Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",67.6%,Easy,57.8823%;
873,873. Length of Longest Fibonacci Subsequence,"['Array', 'Hash Table', '1+']",48.3%,Medium,42.4619%;
874,874. Walking Robot Simulation,"['Array', 'Simulation']",38.8%,Medium,26.1833%;
875,875. Koko Eating Bananas,"['Array', 'Binary Search']",52.3%,Medium,66.2636%;
876,876. Middle of the Linked List,"['Linked List', 'Two Pointers']",75.5%,Easy,68.8679%;
877,877. Stone Game,"['Array', 'Math', '2+']",69.7%,Medium,47.6271%;
878,878. Nth Magical Number,"['Math', 'Binary Search']",35.4%,Hard,43.5821%;
879,879. Profitable Schemes,"['Array', 'Dynamic Programming']",40.6%,Hard,14.8423%;
880,880. Decoded String at Index,"['String', 'Stack']",28.3%,Medium,12.0454%;
881,881. Boats to Save People,"['Array', 'Two Pointers', 'Greedy', '1+']",53.1%,Medium,46.1871%;
882,882. Reachable Nodes In Subdivided Graph,"['Graph', 'Heap (Priority Queue)', '1+']",50.2%,Hard,21.7064%;
883,883. Projection Area of 3D Shapes,"['Array', 'Math', 'Geometry', '1+']",71.1%,Easy,18.9207%;
884,884. Uncommon Words from Two Sentences,"['Hash Table', 'String']",66.3%,Easy,13.3134%;
885,885. Spiral Matrix III,"['Array', 'Matrix', 'Simulation']",73.3%,Medium,33.8438%;
886,886. Possible Bipartition,"['Depth-First Search', '3+']",50.0%,Medium,77.6661%;
887,887. Super Egg Drop,"['Math', 'Binary Search', '1+']",27.2%,Hard,48.4923%;
888,888. Fair Candy Swap,"['Array', 'Hash Table', '2+']",60.7%,Easy,54.5896%;
889,889. Construct Binary Tree from Preorder and Postorder Traversal,"['Array', 'Hash Table', '3+']",71.0%,Medium,42.4834%;
890,890. Find and Replace Pattern,"['Array', 'Hash Table', 'String']",77.6%,Medium,38.647%;
891,891. Sum of Subsequence Widths,"['Array', 'Math', 'Sorting']",36.6%,Hard,33.3729%;
892,892. Surface Area of 3D Shapes,"['Array', 'Math', 'Geometry', '1+']",64.0%,Easy,18.4503%;
893,893. Groups of Special-Equivalent Strings,"['Array', 'Hash Table', 'String']",71.1%,Medium,35.1184%;
894,894. All Possible Full Binary Trees,"['Dynamic Programming', 'Tree', '3+']",80.0%,Medium,55.0253%;
895,895. Maximum Frequency Stack,"['Hash Table', 'Stack', 'Design', '1+']",66.6%,Hard,56.5783%;
896,896. Monotonic Array,['Array'],58.4%,Easy,33.2509%;
897,897. Increasing Order Search Tree,"['Stack', 'Tree', 'Depth-First Search', '2+']",78.5%,Easy,23.5068%;
898,898. Bitwise ORs of Subarrays,"['Array', 'Dynamic Programming', '1+']",37.2%,Medium,27.0643%;
899,899. Orderly Queue,"['Math', 'String', 'Sorting']",66.4%,Hard,92.4503%;
900,900. RLE Iterator,"['Array', 'Design', 'Counting', '1+']",59.4%,Medium,42.5608%;
901,901. Online Stock Span,"['Stack', 'Design', 'Monotonic Stack', '1+']",65.2%,Medium,72.0545%;
902,902. Numbers At Most N Given Digit Set,"['Array', 'Math', 'String', '2+']",41.4%,Hard,38.647%;
903,903. Valid Permutations for DI Sequence,['Dynamic Programming'],57.8%,Hard,0%;
904,904. Fruit Into Baskets,"['Array', 'Hash Table', 'Sliding Window']",43.7%,Medium,82.002%;
905,905. Sort Array By Parity,"['Array', 'Two Pointers', 'Sorting']",75.6%,Easy,32.3483%;
906,906. Super Palindromes,"['Math', 'Enumeration']",38.8%,Hard,28.8262%;
907,907. Sum of Subarray Minimums,"['Array', 'Dynamic Programming', '2+']",35.8%,Medium,82.4224%;
908,908. Smallest Range I,"['Array', 'Math']",68.2%,Easy,36.5543%;
909,909. Snakes and Ladders,"['Array', 'Breadth-First Search', 'Matrix']",45.1%,Medium,82.5796%;
910,910. Smallest Range II,"['Array', 'Math', 'Greedy', '1+']",35.1%,Medium,55.4754%;
911,911. Online Election,"['Array', 'Hash Table', '2+']",52.2%,Medium,9.7897%;
912,912. Sort an Array,"['Array', 'Divide and Conquer', '6+']",59.7%,Medium,74.6944%;
913,913. Cat and Mouse,"['Math', 'Dynamic Programming', '4+']",34.9%,Hard,28.8262%;
914,914. X of a Kind in a Deck of Cards,"['Array', 'Hash Table', 'Math', '2+']",31.3%,Easy,23.1026%;
915,915. Partition Array into Disjoint Intervals,['Array'],48.5%,Medium,45.1048%;
916,916. Word Subsets,"['Array', 'Hash Table', 'String']",53.8%,Medium,16.7825%;
917,917. Reverse Only Letters,"['Two Pointers', 'String']",61.9%,Easy,27.3782%;
918,918. Maximum Sum Circular Subarray,"['Array', 'Divide and Conquer', '3+']",42.9%,Medium,77.004%;
919,919. Complete Binary Tree Inserter,"['Tree', 'Breadth-First Search', '2+']",65.1%,Medium,19.4164%;
920,920. Number of Music Playlists,"['Math', 'Dynamic Programming', '1+']",50.8%,Hard,37.6083%;
921,921. Minimum Add to Make Parentheses Valid,"['String', 'Stack', 'Greedy']",75.8%,Medium,39.3763%;
922,922. Sort Array By Parity II,"['Array', 'Two Pointers', 'Sorting']",70.7%,Easy,27.6365%;
923,923. 3Sum With Multiplicity,"['Array', 'Hash Table', 'Two Pointers', '2+']",45.3%,Medium,26.7549%;
924,924. Minimize Malware Spread,"['Array', 'Depth-First Search', '3+']",42.1%,Hard,27.3577%;
925,925. Long Pressed Name,"['Two Pointers', 'String']",33.2%,Easy,27.1612%;
926,926. Flip String to Monotone Increasing,"['String', 'Dynamic Programming']",61.5%,Medium,85.7727%;
927,927. Three Equal Parts,"['Array', 'Math']",39.6%,Hard,43.0099%;
928,928. Minimize Malware Spread II,"['Array', 'Depth-First Search', '3+']",42.7%,Hard,23.2741%;
929,929. Unique Email Addresses,"['Array', 'Hash Table', 'String']",67.1%,Easy,62.0448%;
930,930. Binary Subarrays With Sum,"['Array', 'Hash Table', '2+']",52.0%,Medium,36.222%;
931,931. Minimum Falling Path Sum,"['Array', 'Dynamic Programming', 'Matrix']",69.1%,Medium,66.3889%;
932,932. Beautiful Array,"['Array', 'Math', 'Divide and Conquer']",65.2%,Medium,62.47%;
933,933. Number of Recent Calls,"['Design', 'Queue', 'Data Stream']",73.2%,Easy,34.6944%;
934,934. Shortest Bridge,"['Array', 'Depth-First Search', '2+']",54.3%,Medium,48.767%;
935,935. Knight Dialer,['Dynamic Programming'],50.4%,Medium,65.7562%;
936,936. Stamping The Sequence,"['String', 'Stack', 'Greedy', '1+']",63.0%,Hard,83.3791%;
937,937. Reorder Data in Log Files,"['Array', 'String', 'Sorting']",56.4%,Medium,61.4224%;
938,938. Range Sum of BST,"['Tree', 'Depth-First Search', '2+']",85.9%,Easy,68.531%;
939,939. Minimum Area Rectangle,"['Array', 'Hash Table', 'Math', '2+']",52.9%,Medium,41.8981%;
940,940. Distinct Subsequences II,"['String', 'Dynamic Programming']",44.0%,Hard,41.9362%;
941,941. Valid Mountain Array,['Array'],33.4%,Easy,28.1002%;
942,942. DI String Match,"['Array', 'Two Pointers', 'String', '1+']",77.2%,Easy,26.561%;
943,943. Find the Shortest Superstring,"['Array', 'String', '3+']",44.5%,Hard,61.9488%;
944,944. Delete Columns to Make Sorted,"['Array', 'String']",74.8%,Easy,74.3768%;
945,945. Minimum Increment to Make Array Unique,"['Array', 'Greedy', 'Sorting', '1+']",51.0%,Medium,63.6239%;
946,946. Validate Stack Sequences,"['Array', 'Stack', 'Simulation']",67.7%,Medium,51.9667%;
947,947. Most Stones Removed with Same Row or Column,"['Depth-First Search', 'Union Find', 'Graph']",58.9%,Medium,77.2364%;
948,948. Bag of Tokens,"['Array', 'Two Pointers', 'Greedy', '1+']",52.1%,Medium,44.0562%;
949,949. Largest Time for Given Digits,"['String', 'Enumeration']",35.2%,Medium,36.9383%;
950,950. Reveal Cards In Increasing Order,"['Array', 'Queue', 'Sorting', '1+']",77.7%,Medium,34.4775%;
951,951. Flip Equivalent Binary Trees,"['Tree', 'Depth-First Search', 'Binary Tree']",66.8%,Medium,28.8458%;
952,952. Largest Component Size by Common Factor,"['Array', 'Math', 'Union Find']",40.1%,Hard,21.9414%;
953,953. Verifying an Alien Dictionary,"['Array', 'Hash Table', 'String']",54.5%,Easy,66.7607%;
954,954. Array of Doubled Pairs,"['Array', 'Hash Table', 'Greedy', '1+']",39.1%,Medium,10.7775%;
955,955. Delete Columns to Make Sorted II,"['Array', 'String', 'Greedy']",34.7%,Medium,49.0476%;
956,956. Tallest Billboard,"['Array', 'Dynamic Programming']",39.9%,Hard,20.3521%;
957,957. Prison Cells After N Days,"['Array', 'Hash Table', 'Math', '1+']",39.1%,Medium,39.5889%;
958,958. Check Completeness of a Binary Tree,"['Tree', 'Breadth-First Search', '1+']",53.9%,Medium,43.7786%;
959,959. Regions Cut By Slashes,"['Depth-First Search', '3+']",69.2%,Medium,56.8122%;
960,960. Delete Columns to Make Sorted III,"['Array', 'String', 'Dynamic Programming']",57.2%,Hard,40.9451%;
961,961. N-Repeated Element in Size 2N Array,"['Array', 'Hash Table']",76.0%,Easy,10.7775%;
962,962. Maximum Width Ramp,"['Array', 'Stack', 'Monotonic Stack']",49.0%,Medium,44.1806%;
963,963. Minimum Area Rectangle II,"['Array', 'Math', 'Geometry']",54.7%,Medium,23.2741%;
964,964. Least Operators to Express Number,"['Math', 'Dynamic Programming']",47.9%,Hard,0%;
965,965. Univalued Binary Tree,"['Tree', 'Depth-First Search', '2+']",69.6%,Easy,5.81331%;
966,966. Vowel Spellchecker,"['Array', 'Hash Table', 'String']",51.4%,Medium,0%;
967,967. Numbers With Same Consecutive Differences,"['Backtracking', 'Breadth-First Search']",57.4%,Medium,59.6047%;
968,968. Binary Tree Cameras,"['Dynamic Programming', 'Tree', '2+']",46.7%,Hard,53.1592%;
969,969. Pancake Sorting,"['Array', 'Two Pointers', 'Greedy', '1+']",70.1%,Medium,49.6272%;
970,970. Powerful Integers,"['Hash Table', 'Math']",43.6%,Medium,31.6547%;
971,971. Flip Binary Tree To Match Preorder Traversal,"['Tree', 'Depth-First Search', 'Binary Tree']",50.1%,Medium,19.1652%;
972,972. Equal Rational Numbers,"['Math', 'String']",43.4%,Hard,0%;
973,973. K Closest Points to Origin,"['Array', 'Math', '5+']",65.7%,Medium,49.8727%;
974,974. Subarray Sums Divisible by K,"['Array', 'Hash Table', 'Prefix Sum']",54.4%,Medium,91.1824%;
975,975. Odd Even Jump,"['Array', 'Dynamic Programming', '3+']",39.0%,Hard,42.2843%;
976,976. Largest Perimeter Triangle,"['Array', 'Math', 'Greedy', '1+']",54.6%,Easy,68.5088%;
977,977. Squares of a Sorted Array,"['Array', 'Two Pointers', 'Sorting']",71.9%,Easy,55.3737%;
978,978. Longest Turbulent Subarray,"['Array', 'Dynamic Programming', '1+']",47.2%,Medium,35.6214%;
979,979. Distribute Coins in Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",72.2%,Medium,52.6988%;
980,980. Unique Paths III,"['Array', 'Backtracking', '2+']",81.9%,Hard,53.1526%;
981,981. Time Based Key-Value Store,"['Hash Table', 'String', '2+']",52.4%,Medium,69.4753%;
982,982. Triples with Bitwise AND Equal To Zero,"['Array', 'Hash Table', 'Bit Manipulation']",57.6%,Hard,0%;
983,983. Minimum Cost For Tickets,"['Array', 'Dynamic Programming']",64.3%,Medium,46.8306%;
984,984. String Without AAA or BBB,"['String', 'Greedy']",43.1%,Medium,19.4164%;
985,985. Sum of Even Numbers After Queries,"['Array', 'Simulation']",68.2%,Medium,76.3489%;
986,986. Interval List Intersections,"['Array', 'Two Pointers']",71.3%,Medium,56.2749%;
987,987. Vertical Order Traversal of a Binary Tree,"['Hash Table', 'Tree', '3+']",45.0%,Hard,64.0794%;
988,988. Smallest String Starting From Leaf,"['String', 'Tree', 'Depth-First Search', '1+']",50.0%,Medium,2.16147%;
989,989. Add to Array-Form of Integer,"['Array', 'Math']",47.1%,Easy,49.6004%;
990,990. Satisfiability of Equality Equations,"['Array', 'String', 'Union Find', '1+']",50.5%,Medium,69.693%;
991,991. Broken Calculator,"['Math', 'Greedy']",54.1%,Medium,35.9111%;
992,992. Subarrays with K Different Integers,"['Array', 'Hash Table', '2+']",54.7%,Hard,65.6442%;
993,993. Cousins in Binary Tree,"['Tree', 'Depth-First Search', '2+']",54.6%,Easy,32.4678%;
994,994. Rotting Oranges,"['Array', 'Breadth-First Search', 'Matrix']",52.9%,Medium,72.3574%;
995,995. Minimum Number of K Consecutive Bit Flips,"['Array', 'Bit Manipulation', 'Queue', '2+']",51.2%,Hard,50.0961%;
996,996. Number of Squareful Arrays,"['Array', 'Math', '4+']",49.2%,Hard,22.3734%;
997,997. Find the Town Judge,"['Array', 'Hash Table', 'Graph']",49.6%,Easy,62.6365%;
998,998. Maximum Binary Tree II,"['Tree', 'Binary Tree']",67.2%,Medium,0%;
999,999. Available Captures for Rook,"['Array', 'Matrix', 'Simulation']",68.1%,Easy,20.6735%;
1000,1000. Minimum Cost to Merge Stones,"['Array', 'Dynamic Programming']",42.4%,Hard,37.667%;
1001,1001. Grid Illumination,"['Array', 'Hash Table']",36.2%,Hard,14.194%;
1002,1002. Find Common Characters,"['Array', 'Hash Table', 'String']",68.4%,Easy,66.4573%;
1003,1003. Check If Word Is Valid After Substitutions,"['String', 'Stack']",58.2%,Medium,21.7064%;
1004,1004. Max Consecutive Ones III,"['Array', 'Binary Search', '2+']",63.2%,Medium,64.6194%;
1005,1005. Maximize Sum Of Array After K Negations,"['Array', 'Greedy', 'Sorting']",50.9%,Easy,27.3577%;
1006,1006. Clumsy Factorial,"['Math', 'Stack', 'Simulation']",55.4%,Medium,34.3739%;
1007,1007. Minimum Domino Rotations For Equal Row,"['Array', 'Greedy']",52.3%,Medium,39.441%;
1008,1008. Construct Binary Search Tree from Preorder Traversal,"['Array', 'Stack', 'Tree', '3+']",81.1%,Medium,50.0961%;
1009,1009. Complement of Base 10 Integer,['Bit Manipulation'],61.6%,Easy,75.4792%;
1010,1010. Pairs of Songs With Total Durations Divisible by 60,"['Array', 'Hash Table', 'Counting']",52.8%,Medium,95.7898%;
1011,1011. Capacity To Ship Packages Within D Days,"['Array', 'Binary Search']",67.7%,Medium,79.8361%;
1012,1012. Numbers With Repeated Digits,"['Math', 'Dynamic Programming']",39.8%,Hard,73.1793%;
1013,1013. Partition Array Into Three Parts With Equal Sum,"['Array', 'Greedy']",42.8%,Easy,22.2025%;
1014,1014. Best Sightseeing Pair,"['Array', 'Dynamic Programming']",59.4%,Medium,20.4936%;
1015,1015. Smallest Integer Divisible by K,"['Hash Table', 'Math']",46.9%,Medium,26.561%;
1016,1016. Binary String With Substrings Representing 1 To N,['String'],57.4%,Medium,23.8549%;
1017,1017. Convert to Base -2,['Math'],60.8%,Medium,10.4038%;
1018,1018. Binary Prefix Divisible By 5,['Array'],46.9%,Easy,13.1611%;
1019,1019. Next Greater Node In Linked List,"['Array', 'Linked List', 'Stack', '1+']",59.9%,Medium,32.6906%;
1020,1020. Number of Enclaves,"['Array', 'Depth-First Search', '3+']",65.5%,Medium,26.1374%;
1021,1021. Remove Outermost Parentheses,"['String', 'Stack']",80.6%,Easy,25.3592%;
1022,1022. Sum of Root To Leaf Binary Numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",73.6%,Easy,22.5473%;
1023,1023. Camelcase Matching,"['Two Pointers', 'String', 'Trie', '1+']",60.5%,Medium,28.7263%;
1024,1024. Video Stitching,"['Array', 'Dynamic Programming', 'Greedy']",50.5%,Medium,37.7722%;
1025,1025. Divisor Game,"['Math', 'Dynamic Programming', '2+']",67.5%,Easy,42.3977%;
1026,1026. Maximum Difference Between Node and Ancestor,"['Tree', 'Depth-First Search', 'Binary Tree']",75.7%,Medium,72.8309%;
1027,1027. Longest Arithmetic Subsequence,"['Array', 'Hash Table', '2+']",46.8%,Medium,39.5006%;
1028,1028. Recover a Tree From Preorder Traversal,"['String', 'Tree', 'Depth-First Search', '1+']",73.2%,Hard,51.3224%;
1029,1029. Two City Scheduling,"['Array', 'Greedy', 'Sorting']",65.2%,Medium,79.4498%;
1030,1030. Matrix Cells in Distance Order,"['Array', 'Math', 'Geometry', '2+']",69.6%,Easy,8.81463%;
1031,1031. Maximum Sum of Two Non-Overlapping Subarrays,"['Array', 'Dynamic Programming', '1+']",59.6%,Medium,38.8991%;
1032,1032. Stream of Characters,"['Array', 'String', 'Design', '2+']",51.6%,Hard,19.4164%;
1033,1033. Moving Stones Until Consecutive,"['Math', 'Brainteaser']",46.2%,Medium,18.1128%;
1034,1034. Coloring A Border,"['Array', 'Depth-First Search', '2+']",49.2%,Medium,22.8589%;
1035,1035. Uncrossed Lines,"['Array', 'Dynamic Programming']",59.1%,Medium,8.28335%;
1036,1036. Escape a Large Maze,"['Array', 'Hash Table', '2+']",34.1%,Hard,45.7456%;
1037,1037. Valid Boomerang,"['Array', 'Math', 'Geometry']",37.1%,Easy,22.4287%;
1038,1038. Binary Search Tree to Greater Sum Tree,"['Tree', 'Depth-First Search', '2+']",85.5%,Medium,19.0422%;
1039,1039. Minimum Score Triangulation of Polygon,"['Array', 'Dynamic Programming']",55.3%,Medium,48.2176%;
1040,1040. Moving Stones Until Consecutive II,"['Array', 'Math', 'Two Pointers', '1+']",55.8%,Medium,58.5443%;
1041,1041. Robot Bounded In Circle,"['Math', 'String', 'Simulation']",55.3%,Medium,70.3643%;
1042,1042. Flower Planting With No Adjacent,"['Depth-First Search', '2+']",50.6%,Medium,32.0616%;
1043,1043. Partition Array for Maximum Sum,"['Array', 'Dynamic Programming']",71.5%,Medium,49.3172%;
1044,1044. Longest Duplicate Substring,"['String', 'Binary Search', '4+']",30.6%,Hard,39.5006%;
1045,1045. Customers Who Bought All Products,['Database'],66.8%,Medium,6.94803%;
1046,1046. Last Stone Weight,"['Array', 'Heap (Priority Queue)']",64.8%,Easy,54.2369%;
1047,1047. Remove All Adjacent Duplicates In String,"['String', 'Stack']",69.8%,Easy,70.303%;
1048,1048. Longest String Chain,"['Array', 'Hash Table', 'Two Pointers', '2+']",59.2%,Medium,64.6447%;
1049,1049. Last Stone Weight II,"['Array', 'Dynamic Programming']",53.1%,Medium,28.6989%;
1050,1050. Actors and Directors Who Cooperated At Least Three Times,['Database'],70.8%,Easy,8.4259%;
1051,1051. Height Checker,"['Array', 'Sorting', 'Counting Sort']",75.5%,Easy,3.2971%;
1052,1052. Grumpy Bookstore Owner,"['Array', 'Sliding Window']",57.1%,Medium,40.3695%;
1053,1053. Previous Permutation With One Swap,"['Array', 'Greedy']",50.5%,Medium,36.7581%;
1054,1054. Distant Barcodes,"['Array', 'Hash Table', 'Greedy', '3+']",45.8%,Medium,44.8079%;
1055,1055. Shortest Way to Form String,"['Two Pointers', 'String', 'Greedy']",59.7%,Medium,2.83656%;
1056,1056. Confusing Number,['Math'],48.2%,Easy,0%;
1057,1057. Campus Bikes,"['Array', 'Greedy', 'Sorting']",57.6%,Medium,26.561%;
1058,1058. Minimize Rounding Error to Meet Target,"['Array', 'Math', 'String', '1+']",44.9%,Medium,0%;
1059,1059. All Paths from Source Lead to Destination,"['Depth-First Search', 'Graph']",39.3%,Medium,12.5261%;
1060,1060. Missing Element in Sorted Array,"['Array', 'Binary Search']",54.7%,Medium,8.28335%;
1061,1061. Lexicographically Smallest Equivalent String,"['String', 'Union Find']",76.5%,Medium,63.0119%;
1062,1062. Longest Repeating Substring,"['String', 'Binary Search', '4+']",59.2%,Medium,21.7064%;
1063,1063. Number of Valid Subarrays,"['Array', 'Stack', 'Monotonic Stack']",74.4%,Hard,0%;
1064,1064. Fixed Point,"['Array', 'Binary Search']",64.2%,Easy,12.5261%;
1065,1065. Index Pairs of a String,"['Array', 'String', 'Trie', '1+']",63.8%,Easy,0%;
1066,1066. Campus Bikes II,"['Array', 'Dynamic Programming', '3+']",54.9%,Medium,16.3206%;
1067,1067. Digit Count in Range,"['Math', 'Dynamic Programming']",45.1%,Hard,39.1672%;
1068,1068. Product Sales Analysis I,['Database'],80.3%,Easy,0%;
1069,1069. Product Sales Analysis II,['Database'],81.9%,Easy,0%;
1070,1070. Product Sales Analysis III,['Database'],48.7%,Medium,0%;
1071,1071. Greatest Common Divisor of Strings,"['Math', 'String']",56.6%,Easy,82.8258%;
1072,1072. Flip Columns For Maximum Number of Equal Rows,"['Array', 'Hash Table', 'Matrix']",63.3%,Medium,31.8564%;
1073,1073. Adding Two Negabinary Numbers,"['Array', 'Math']",36.4%,Medium,64.4684%;
1074,1074. Number of Submatrices That Sum to Target,"['Array', 'Hash Table', 'Matrix', '1+']",69.8%,Hard,30.6836%;
1075,1075. Project Employees I,['Database'],66.5%,Easy,0%;
1076,1076. Project Employees II,['Database'],50.3%,Easy,0%;
1077,1077. Project Employees III,['Database'],77.5%,Medium,0%;
1078,1078. Occurrences After Bigram,['String'],63.6%,Easy,17.6292%;
1079,1079. Letter Tile Possibilities,"['Hash Table', 'String', '2+']",76.0%,Medium,28.4733%;
1080,1080. Insufficient Nodes in Root to Leaf Paths,"['Tree', 'Depth-First Search', 'Binary Tree']",53.4%,Medium,0%;
1081,1081. Smallest Subsequence of Distinct Characters,"['String', 'Stack', 'Greedy', '1+']",57.8%,Medium,43.7328%;
1082,1082. Sales Analysis I,['Database'],74.9%,Easy,0%;
1083,1083. Sales Analysis II,['Database'],50.0%,Easy,0%;
1084,1084. Sales Analysis III,['Database'],49.1%,Easy,20.0534%;
1085,1085. Sum of Digits in the Minimum Number,"['Array', 'Math']",76.3%,Easy,0%;
1086,1086. High Five,"['Array', 'Hash Table', 'Sorting']",75.1%,Easy,31.8564%;
1087,1087. Brace Expansion,"['String', 'Backtracking', '1+']",66.2%,Medium,24.6832%;
1088,1088. Confusing Number II,"['Math', 'Backtracking']",47.3%,Hard,27.3577%;
1089,1089. Duplicate Zeros,"['Array', 'Two Pointers']",51.5%,Easy,24.4441%;
1090,1090. Largest Values From Labels,"['Array', 'Hash Table', 'Greedy', '2+']",61.1%,Medium,23.8549%;
1091,1091. Shortest Path in Binary Matrix,"['Array', 'Breadth-First Search', 'Matrix']",44.6%,Medium,52.7779%;
1092,1092. Shortest Common Supersequence,"['String', 'Dynamic Programming']",58.0%,Hard,33.8438%;
1093,1093. Statistics from a Large Sample,"['Array', 'Math', 'Probability and Statistics']",43.6%,Medium,0%;
1094,1094. Car Pooling,"['Array', 'Sorting', '3+']",57.0%,Medium,52.8022%;
1095,1095. Find in Mountain Array,"['Array', 'Binary Search', 'Interactive']",35.6%,Hard,49.1843%;
1096,1096. Brace Expansion II,"['String', 'Backtracking', 'Stack', '1+']",63.4%,Hard,24.6832%;
1097,1097. Game Play Analysis V,['Database'],53.5%,Hard,10.4038%;
1098,1098. Unpopular Books,['Database'],44.3%,Medium,19.9398%;
1099,1099. Two Sum Less Than K,"['Array', 'Two Pointers', '2+']",61.0%,Easy,40.6798%;
1100,1100. Find K-Length Substrings With No Repeated Characters,"['Hash Table', 'String', 'Sliding Window']",74.7%,Medium,36.222%;
1101,1101. The Earliest Moment When Everyone Become Friends,"['Array', 'Union Find']",64.7%,Medium,55.0967%;
1102,1102. Path With Maximum Minimum Value,"['Array', 'Depth-First Search', '4+']",53.3%,Medium,39.441%;
1103,1103. Distribute Candies to People,"['Math', 'Simulation']",64.2%,Easy,13.9223%;
1104,1104. Path In Zigzag Labelled Binary Tree,"['Math', 'Tree', 'Binary Tree']",75.0%,Medium,21.0813%;
1105,1105. Filling Bookcase Shelves,"['Array', 'Dynamic Programming']",59.3%,Medium,41.1838%;
1106,1106. Parsing A Boolean Expression,"['String', 'Stack', 'Recursion']",58.4%,Hard,34.3739%;
1107,1107. New Users Daily Count,['Database'],45.3%,Medium,0%;
1108,1108. Defanging an IP Address,['String'],89.1%,Easy,36.2978%;
1109,1109. Corporate Flight Bookings,"['Array', 'Prefix Sum']",60.6%,Medium,18.3648%;
1110,1110. Delete Nodes And Return Forest,"['Tree', 'Depth-First Search', 'Binary Tree']",69.3%,Medium,47.8436%;
1111,1111. Maximum Nesting Depth of Two Valid Parentheses Strings,"['String', 'Stack']",73.0%,Medium,40.9451%;
1112,1112. Highest Grade For Each Student,['Database'],72.4%,Medium,10.907%;
1113,1113. Reported Posts,['Database'],65.4%,Easy,11.5958%;
1114,1114. Print in Order,['Concurrency'],68.4%,Easy,15.0338%;
1115,1115. Print FooBar Alternately,['Concurrency'],62.4%,Medium,24.1016%;
1116,1116. Print Zero Even Odd,['Concurrency'],60.5%,Medium,17.5771%;
1117,1117. Building H2O,['Concurrency'],55.9%,Medium,12.0454%;
1118,1118. Number of Days in a Month,['Math'],57.1%,Easy,0%;
1119,1119. Remove Vowels from a String,['String'],90.8%,Easy,0%;
1120,1120. Maximum Average Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",65.6%,Medium,26.561%;
1121,1121. Divide Array Into Increasing Sequences,"['Array', 'Greedy']",60.6%,Hard,0%;
1122,1122. Relative Sort Array,"['Array', 'Hash Table', 'Sorting', '1+']",68.6%,Easy,40.1366%;
1123,1123. Lowest Common Ancestor of Deepest Leaves,"['Hash Table', 'Tree', '3+']",70.9%,Medium,33.075%;
1124,1124. Longest Well-Performing Interval,"['Array', 'Hash Table', 'Stack', '2+']",34.7%,Medium,39.1672%;
1125,1125. Smallest Sufficient Team,"['Array', 'Dynamic Programming', '2+']",46.8%,Hard,40.9451%;
1126,1126. Active Businesses,['Database'],67.0%,Medium,15.0708%;
1127,1127. User Purchase Platform,['Database'],50.1%,Hard,15.5482%;
1128,1128. Number of Equivalent Domino Pairs,"['Array', 'Hash Table', 'Counting']",47.1%,Easy,16.0551%;
1129,1129. Shortest Path with Alternating Colors,"['Breadth-First Search', 'Graph']",48.5%,Medium,72.2908%;
1130,1130. Minimum Cost Tree From Leaf Values,"['Dynamic Programming', 'Stack', '2+']",68.3%,Medium,39.0043%;
1131,1131. Maximum of Absolute Value Expression,"['Array', 'Math']",49.1%,Medium,29.3886%;
1132,1132. Reported Posts II,['Database'],33.2%,Medium,0%;
1133,1133. Largest Unique Number,"['Array', 'Hash Table', 'Sorting']",67.6%,Easy,0%;
1134,1134. Armstrong Number,['Math'],77.8%,Easy,0%;
1135,1135. Connecting Cities With Minimum Cost,"['Union Find', 'Graph', '2+']",61.3%,Medium,33.3729%;
1136,1136. Parallel Courses,"['Graph', 'Topological Sort']",61.6%,Medium,56.2307%;
1137,1137. N-th Tribonacci Number,"['Math', 'Dynamic Programming', '1+']",63.8%,Easy,50.2178%;
1138,1138. Alphabet Board Path,"['Hash Table', 'String']",52.0%,Medium,43.0099%;
1139,1139. Largest 1-Bordered Square,"['Array', 'Dynamic Programming', 'Matrix']",50.2%,Medium,54.915%;
1140,1140. Stone Game II,"['Array', 'Math', '2+']",64.8%,Medium,21.0813%;
1141,1141. User Activity for the Past 30 Days I,['Database'],48.7%,Easy,24.4512%;
1142,1142. User Activity for the Past 30 Days II,['Database'],35.8%,Easy,18.9207%;
1143,1143. Longest Common Subsequence,"['String', 'Dynamic Programming']",58.4%,Medium,71.1199%;
1144,1144. Decrease Elements To Make Array Zigzag,"['Array', 'Greedy']",47.3%,Medium,18.1128%;
1145,1145. Binary Tree Coloring Game,"['Tree', 'Depth-First Search', 'Binary Tree']",51.7%,Medium,28.6705%;
1146,1146. Snapshot Array,"['Array', 'Hash Table', '2+']",37.2%,Medium,61.5992%;
1147,1147. Longest Chunked Palindrome Decomposition,"['Two Pointers', 'String', '4+']",59.4%,Hard,27.6365%;
1148,1148. Article Views I,['Database'],76.3%,Easy,12.6515%;
1149,1149. Article Views II,['Database'],47.3%,Medium,0%;
1150,1150. Check If a Number Is Majority Element in a Sorted Array,"['Array', 'Binary Search']",57.2%,Easy,11.5958%;
1151,1151. Minimum Swaps to Group All 1's Together,"['Array', 'Sliding Window']",60.9%,Medium,29.3886%;
1152,1152. Analyze User Website Visit Pattern,"['Array', 'Hash Table', 'Sorting']",43.1%,Medium,83.3791%;
1153,1153. String Transforms Into Another String,"['Hash Table', 'String']",35.3%,Hard,27.3577%;
1154,1154. Day of the Year,"['Math', 'String']",49.7%,Easy,13.1611%;
1155,1155. Number of Dice Rolls With Target Sum,['Dynamic Programming'],53.8%,Medium,79.9653%;
1156,1156. Swap For Longest Repeated Character Substring,"['String', 'Sliding Window']",45.2%,Medium,27.3577%;
1157,1157. Online Majority Element In Subarray,"['Array', 'Binary Search', 'Design', '2+']",41.7%,Hard,0%;
1158,1158. Market Analysis I,['Database'],60.6%,Medium,1.70445%;
1159,1159. Market Analysis II,['Database'],58.1%,Hard,0%;
1160,1160. Find Words That Can Be Formed by Characters,"['Array', 'Hash Table', 'String']",67.6%,Easy,42.1439%;
1161,1161. Maximum Level Sum of a Binary Tree,"['Tree', 'Depth-First Search', '2+']",66.0%,Medium,39.0324%;
1162,1162. As Far from Land as Possible,"['Array', 'Dynamic Programming', '2+']",51.9%,Medium,66.2546%;
1163,1163. Last Substring in Lexicographical Order,"['Two Pointers', 'String']",34.8%,Hard,30.1546%;
1164,1164. Product Price at a Given Date,['Database'],67.3%,Medium,0%;
1165,1165. Single-Row Keyboard,"['Hash Table', 'String']",86.5%,Easy,13.0414%;
1166,1166. Design File System,"['Hash Table', 'String', 'Design', '1+']",62.1%,Medium,72.715%;
1167,1167. Minimum Cost to Connect Sticks,"['Array', 'Greedy', 'Heap (Priority Queue)']",68.4%,Medium,40.5994%;
1168,1168. Optimize Water Distribution in a Village,"['Union Find', 'Graph', '1+']",64.5%,Hard,55.5894%;
1169,1169. Invalid Transactions,"['Array', 'Hash Table', 'String', '1+']",31.2%,Medium,74.4647%;
1170,1170. Compare Strings by Frequency of the Smallest Character,"['Array', 'Hash Table', 'String', '2+']",61.5%,Medium,22.0761%;
1171,1171. Remove Zero Sum Consecutive Nodes from Linked List,"['Hash Table', 'Linked List']",43.2%,Medium,36.8958%;
1172,1172. Dinner Plate Stacks,"['Hash Table', 'Stack', 'Design', '1+']",33.1%,Hard,23.2741%;
1173,1173. Immediate Food Delivery I,['Database'],82.7%,Easy,0%;
1174,1174. Immediate Food Delivery II,['Database'],63.0%,Medium,0%;
1175,1175. Prime Arrangements,['Math'],54.5%,Easy,28.6705%;
1176,1176. Diet Plan Performance,"['Array', 'Sliding Window']",52.7%,Easy,0%;
1177,1177. Can Make Palindrome from Substring,"['Hash Table', 'String', '2+']",38.0%,Medium,52.4167%;
1178,1178. Number of Valid Words for Each Puzzle,"['Array', 'Hash Table', 'String', '2+']",46.3%,Hard,0%;
1179,1179. Reformat Department Table,['Database'],80.9%,Easy,23.3805%;
1180,1180. Count Substrings with Only One Distinct Letter,"['Math', 'String']",79.0%,Easy,16.3206%;
1181,1181. Before and After Puzzle,"['Array', 'Hash Table', 'String', '1+']",45.3%,Medium,0%;
1182,1182. Shortest Distance to Target Color,"['Array', 'Binary Search', '1+']",55.3%,Medium,11.5958%;
1183,1183. Maximum Number of Ones,"['Greedy', 'Heap (Priority Queue)']",61.3%,Hard,0%;
1184,1184. Distance Between Bus Stops,['Array'],54.0%,Easy,0%;
1185,1185. Day of the Week,['Math'],57.5%,Easy,35.8707%;
1186,1186. Maximum Subarray Sum with One Deletion,"['Array', 'Dynamic Programming']",41.4%,Medium,30.9747%;
1187,1187. Make Array Strictly Increasing,"['Array', 'Binary Search', '1+']",45.3%,Hard,0%;
1188,1188. Design Bounded Blocking Queue,['Concurrency'],72.9%,Medium,49.0664%;
1189,1189. Maximum Number of Balloons,"['Hash Table', 'String', 'Counting']",61.1%,Easy,29.2251%;
1190,1190. Reverse Substrings Between Each Pair of Parentheses,"['String', 'Stack']",65.9%,Medium,40.5691%;
1191,1191. K-Concatenation Maximum Sum,"['Array', 'Dynamic Programming']",23.8%,Medium,30.1546%;
1192,1192. Critical Connections in a Network,"['Depth-First Search', 'Graph', '1+']",54.6%,Hard,38.2529%;
1193,1193. Monthly Transactions I,['Database'],66.0%,Medium,8.03578%;
1194,1194. Tournament Winners,['Database'],50.9%,Hard,29.3886%;
1195,1195. Fizz Buzz Multithreaded,['Concurrency'],72.9%,Medium,46.5127%;
1196,1196. How Many Apples Can You Put into the Basket,"['Array', 'Greedy', 'Sorting']",66.9%,Easy,8.28335%;
1197,1197. Minimum Knight Moves,['Breadth-First Search'],39.7%,Medium,65.4902%;
1198,1198. Find Smallest Common Element in All Rows,"['Array', 'Hash Table', '3+']",76.6%,Medium,0%;
1199,1199. Minimum Time to Build Blocks,"['Math', 'Greedy', 'Heap (Priority Queue)']",40.8%,Hard,0%;
1200,1200. Minimum Absolute Difference,"['Array', 'Sorting']",69.6%,Easy,63.8201%;
1201,1201. Ugly Number III,"['Math', 'Binary Search', 'Number Theory']",28.8%,Medium,15.9254%;
1202,1202. Smallest String With Swaps,"['Hash Table', 'String', '3+']",57.6%,Medium,42.5375%;
1203,1203. Sort Items by Groups Respecting Dependencies,"['Depth-First Search', '3+']",51.1%,Hard,37.6083%;
1204,1204. Last Person to Fit in the Bus,['Database'],73.4%,Medium,13.0414%;
1205,1205. Monthly Transactions II,['Database'],43.0%,Medium,0%;
1206,1206. Design Skiplist,"['Linked List', 'Design']",60.4%,Hard,33.3729%;
1207,1207. Unique Number of Occurrences,"['Array', 'Hash Table']",73.5%,Easy,98.1556%;
1208,1208. Get Equal Substrings Within Budget,"['String', 'Binary Search', '2+']",48.4%,Medium,23.4795%;
1209,1209. Remove All Adjacent Duplicates in String II,"['String', 'Stack']",56.2%,Medium,85.6111%;
1210,1210. Minimum Moves to Reach Target with Rotations,"['Array', 'Breadth-First Search', 'Matrix']",49.2%,Hard,33.8438%;
1211,1211. Queries Quality and Percentage,['Database'],71.4%,Easy,0%;
1212,1212. Team Scores in Football Tournament,['Database'],57.1%,Medium,0%;
1213,1213. Intersection of Three Sorted Arrays,"['Array', 'Hash Table', '2+']",79.9%,Easy,7.79914%;
1214,1214. Two Sum BSTs,"['Two Pointers', 'Binary Search', '5+']",66.1%,Medium,0%;
1215,1215. Stepping Numbers,"['Backtracking', 'Breadth-First Search']",46.2%,Medium,0%;
1216,1216. Valid Palindrome III,"['String', 'Dynamic Programming']",50.5%,Hard,14.194%;
1217,1217. Minimum Cost to Move Chips to The Same Position,"['Array', 'Math', 'Greedy']",71.9%,Easy,42.6699%;
1218,1218. Longest Arithmetic Subsequence of Given Difference,"['Array', 'Hash Table', '1+']",51.9%,Medium,37.9803%;
1219,1219. Path with Maximum Gold,"['Array', 'Backtracking', 'Matrix']",63.7%,Medium,54.9626%;
1220,1220. Count Vowels Permutation,['Dynamic Programming'],60.3%,Hard,54.8471%;
1221,1221. Split a String in Balanced Strings,"['String', 'Greedy', 'Counting']",85.1%,Easy,30.1546%;
1222,1222. Queens That Can Attack the King,"['Array', 'Matrix', 'Simulation']",71.8%,Medium,40.869%;
1223,1223. Dice Roll Simulation,"['Array', 'Dynamic Programming']",48.6%,Hard,28.8262%;
1224,1224. Maximum Equal Frequency,"['Array', 'Hash Table']",37.0%,Hard,21.7064%;
1225,1225. Report Contiguous Dates,['Database'],61.9%,Hard,0%;
1226,1226. The Dining Philosophers,['Concurrency'],56.0%,Medium,31.2614%;
1227,1227. Airplane Seat Assignment Probability,"['Math', 'Dynamic Programming', '2+']",65.6%,Medium,21.3499%;
1228,1228. Missing Number In Arithmetic Progression,"['Array', 'Math']",51.4%,Easy,0%;
1229,1229. Meeting Scheduler,"['Array', 'Two Pointers', 'Sorting']",55.3%,Medium,41.8981%;
1230,1230. Toss Strange Coins,"['Math', 'Dynamic Programming', '1+']",53.9%,Medium,23.2741%;
1231,1231. Divide Chocolate,"['Array', 'Binary Search']",57.4%,Hard,21.7064%;
1232,1232. Check If It Is a Straight Line,"['Array', 'Math', 'Geometry']",40.4%,Easy,31.8191%;
1233,1233. Remove Sub-Folders from the Filesystem,"['Array', 'String', 'Trie']",65.6%,Medium,30.9747%;
1234,1234. Replace the Substring for Balanced String,"['String', 'Sliding Window']",37.2%,Medium,43.5587%;
1235,1235. Maximum Profit in Job Scheduling,"['Array', 'Binary Search', '2+']",53.4%,Hard,76.7484%;
1236,1236. Web Crawler,"['String', 'Depth-First Search', '2+']",66.5%,Medium,56.3747%;
1237,1237. Find Positive Integer Solution for a Given Equation,"['Math', 'Two Pointers', '2+']",69.2%,Medium,22.46%;
1238,1238. Circular Permutation in Binary Representation,"['Math', 'Backtracking', 'Bit Manipulation']",68.8%,Medium,32.809%;
1239,1239. Maximum Length of a Concatenated String with Unique Characters,"['Array', 'String', 'Backtracking', '1+']",52.2%,Medium,75.327%;
1240,1240. Tiling a Rectangle with the Fewest Squares,"['Dynamic Programming', 'Backtracking']",54.0%,Hard,45.1464%;
1241,1241. Number of Comments per Post,['Database'],66.5%,Easy,13.0414%;
1242,1242. Web Crawler Multithreaded,"['Depth-First Search', '2+']",49.0%,Medium,31.6547%;
1243,1243. Array Transformation,"['Array', 'Simulation']",51.1%,Easy,31.6547%;
1244,1244. Design A Leaderboard,"['Hash Table', 'Design', 'Sorting']",68.7%,Medium,78.5424%;
1245,1245. Tree Diameter,"['Tree', 'Depth-First Search', '3+']",61.5%,Medium,17.1707%;
1246,1246. Palindrome Removal,"['Array', 'Dynamic Programming']",46.2%,Hard,0%;
1247,1247. Minimum Swaps to Make Strings Equal,"['Math', 'String', 'Greedy']",64.1%,Medium,23.0875%;
1248,1248. Count Number of Nice Subarrays,"['Array', 'Hash Table', 'Math', '1+']",60.8%,Medium,38.4095%;
1249,1249. Minimum Remove to Make Valid Parentheses,"['String', 'Stack']",65.8%,Medium,67.937%;
1250,1250. Check If It Is a Good Array,"['Array', 'Math', 'Number Theory']",58.9%,Hard,51.3224%;
1251,1251. Average Selling Price,['Database'],81.6%,Easy,15.1876%;
1252,1252. Cells with Odd Values in a Matrix,"['Array', 'Math', 'Simulation']",78.5%,Easy,16.7351%;
1253,1253. Reconstruct a 2-Row Binary Matrix,"['Array', 'Greedy', 'Matrix']",44.2%,Medium,19.1652%;
1254,1254. Number of Closed Islands,"['Array', 'Depth-First Search', '3+']",64.1%,Medium,33.4889%;
1255,1255. Maximum Score Words Formed by Letters,"['Array', 'String', '4+']",72.4%,Hard,21.7064%;
1256,1256. Encode Number,"['Math', 'String', 'Bit Manipulation']",69.9%,Medium,0%;
1257,1257. Smallest Common Region,"['Array', 'Hash Table', 'String', '3+']",64.3%,Medium,45.7707%;
1258,1258. Synonymous Sentences,"['Array', 'Hash Table', 'String', '2+']",56.7%,Medium,32.3805%;
1259,1259. Handshakes That Don't Cross,"['Math', 'Dynamic Programming']",60.3%,Hard,0%;
1260,1260. Shift 2D Grid,"['Array', 'Matrix', 'Simulation']",67.8%,Easy,25.6189%;
1261,1261. Find Elements in a Contaminated Binary Tree,"['Hash Table', 'Tree', '4+']",76.3%,Medium,35.9339%;
1262,1262. Greatest Sum Divisible by Three,"['Array', 'Dynamic Programming', 'Greedy']",50.8%,Medium,26.1833%;
1263,1263. Minimum Moves to Move a Box to Their Target Location,"['Array', 'Breadth-First Search', '2+']",49.0%,Hard,44.5955%;
1264,1264. Page Recommendations,['Database'],66.7%,Medium,0%;
1265,1265. Print Immutable Linked List in Reverse,"['Linked List', 'Two Pointers', 'Stack', '1+']",94.3%,Medium,0%;
1266,1266. Minimum Time Visiting All Points,"['Array', 'Math', 'Geometry']",79.1%,Easy,30.1546%;
1267,1267. Count Servers that Communicate,"['Array', 'Depth-First Search', '4+']",59.4%,Medium,18.4503%;
1268,1268. Search Suggestions System,"['Array', 'String', 'Trie']",66.3%,Medium,67.1307%;
1269,1269. Number of Ways to Stay in the Same Place After Some Steps,['Dynamic Programming'],43.5%,Hard,14.8423%;
1270,1270. All People Report to the Given Manager,['Database'],87.1%,Medium,0%;
1271,1271. Hexspeak,"['Math', 'String']",57.1%,Easy,33.3729%;
1272,1272. Remove Interval,['Array'],63.5%,Medium,30.1546%;
1273,1273. Delete Tree Nodes,"['Tree', 'Depth-First Search', '1+']",61.1%,Medium,0%;
1274,1274. Number of Ships in a Rectangle,"['Array', 'Divide and Conquer', 'Interactive']",69.2%,Hard,63.393%;
1275,1275. Find Winner on a Tic Tac Toe Game,"['Array', 'Hash Table', 'Matrix', '1+']",54.2%,Easy,53.5583%;
1276,1276. Number of Burgers with No Waste of Ingredients,['Math'],50.7%,Medium,33.8438%;
1277,1277. Count Square Submatrices with All Ones,"['Array', 'Dynamic Programming', 'Matrix']",74.5%,Medium,37.7566%;
1278,1278. Palindrome Partitioning III,"['String', 'Dynamic Programming']",60.8%,Hard,26.561%;
1279,1279. Traffic Light Controlled Intersection,['Concurrency'],74.4%,Easy,30.1546%;
1280,1280. Students and Examinations,['Database'],71.9%,Easy,5.59747%;
1281,1281. Subtract the Product and Sum of Digits of an Integer,['Math'],86.7%,Easy,42.8635%;
1282,1282. Group the People Given the Group Size They Belong To,"['Array', 'Hash Table']",85.6%,Medium,39.9269%;
1283,1283. Find the Smallest Divisor Given a Threshold,"['Array', 'Binary Search']",56.0%,Medium,24.6832%;
1284,1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix,"['Array', 'Bit Manipulation', '2+']",71.9%,Hard,55.646%;
1285,1285. Find the Start and End Number of Continuous Ranges,['Database'],86.2%,Medium,27.8646%;
1286,1286. Iterator for Combination,"['String', 'Backtracking', 'Design', '1+']",73.3%,Medium,23.0875%;
1287,1287. Element Appearing More Than 25% In Sorted Array,['Array'],59.5%,Easy,28.2157%;
1288,1288. Remove Covered Intervals,"['Array', 'Sorting']",57.0%,Medium,8.81463%;
1289,1289. Minimum Falling Path Sum II,"['Array', 'Dynamic Programming', 'Matrix']",58.5%,Hard,40.0252%;
1290,1290. Convert Binary Number in a Linked List to Integer,"['Linked List', 'Math']",82.2%,Easy,46.0895%;
1291,1291. Sequential Digits,['Enumeration'],61.3%,Medium,50.8679%;
1292,1292. Maximum Side Length of a Square with Sum Less than or Equal to Threshold,"['Array', 'Binary Search', 'Matrix', '1+']",53.3%,Medium,42.5608%;
1293,1293. Shortest Path in a Grid with Obstacles Elimination,"['Array', 'Breadth-First Search', 'Matrix']",45.4%,Hard,78.5252%;
1294,1294. Weather Type in Each Country,['Database'],67.3%,Easy,0%;
1295,1295. Find Numbers with Even Number of Digits,['Array'],77.0%,Easy,26.5398%;
1296,1296. Divide Array in Sets of K Consecutive Numbers,"['Array', 'Hash Table', 'Greedy', '1+']",56.5%,Medium,19.7401%;
1297,1297. Maximum Number of Occurrences of a Substring,"['Hash Table', 'String', 'Sliding Window']",51.9%,Medium,0%;
1298,1298. Maximum Candies You Can Get from Boxes,"['Array', 'Breadth-First Search', 'Graph']",60.2%,Hard,47.0615%;
1299,1299. Replace Elements with Greatest Element on Right Side,['Array'],73.6%,Easy,31.2614%;
1300,1300. Sum of Mutated Array Closest to Target,"['Array', 'Binary Search', 'Sorting']",43.5%,Medium,32.9197%;
1301,1301. Number of Paths with Max Score,"['Array', 'Dynamic Programming', 'Matrix']",38.8%,Hard,0%;
1302,1302. Deepest Leaves Sum,"['Tree', 'Depth-First Search', '2+']",86.7%,Medium,30.2194%;
1303,1303. Find the Team Size,['Database'],90.1%,Easy,0%;
1304,1304. Find N Unique Integers Sum up to Zero,"['Array', 'Math']",77.0%,Easy,40.4598%;
1305,1305. All Elements in Two Binary Search Trees,"['Tree', 'Depth-First Search', '3+']",79.8%,Medium,19.29%;
1306,1306. Jump Game III,"['Array', 'Depth-First Search', '1+']",63.5%,Medium,43.3077%;
1307,1307. Verbal Arithmetic Puzzle,"['Array', 'Math', 'String', '1+']",34.2%,Hard,75.3814%;
1308,1308. Running Total for Different Genders,['Database'],87.2%,Medium,0%;
1309,1309. Decrypt String from Alphabet to Integer Mapping,['String'],79.7%,Easy,22.6575%;
1310,1310. XOR Queries of a Subarray,"['Array', 'Bit Manipulation', 'Prefix Sum']",72.3%,Medium,22.9042%;
1311,1311. Get Watched Videos by Your Friends,"['Array', 'Hash Table', '3+']",45.9%,Medium,27.6365%;
1312,1312. Minimum Insertion Steps to Make a String Palindrome,"['String', 'Dynamic Programming']",66.3%,Hard,33.7166%;
1313,1313. Decompress Run-Length Encoded List,['Array'],85.8%,Easy,36.5543%;
1314,1314. Matrix Block Sum,"['Array', 'Matrix', 'Prefix Sum']",75.4%,Medium,45.3024%;
1315,1315. Sum of Nodes with Even-Valued Grandparent,"['Tree', 'Depth-First Search', '2+']",85.5%,Medium,28.2819%;
1316,1316. Distinct Echo Substrings,"['String', 'Trie', 'Rolling Hash', '1+']",49.6%,Hard,23.2741%;
1317,1317. Convert Integer to the Sum of Two No-Zero Integers,['Math'],55.5%,Easy,23.7066%;
1318,1318. Minimum Flips to Make a OR b Equal to c,['Bit Manipulation'],66.0%,Medium,13.0414%;
1319,1319. Number of Operations to Make Network Connected,"['Depth-First Search', '3+']",58.9%,Medium,37.2834%;
1320,1320. Minimum Distance to Type a Word Using Two Fingers,"['String', 'Dynamic Programming']",59.5%,Hard,0%;
1321,1321. Restaurant Growth,['Database'],70.7%,Medium,0%;
1322,1322. Ads Performance,['Database'],60.4%,Easy,17.1707%;
1323,1323. Maximum 69 Number,"['Math', 'Greedy']",82.1%,Easy,74.3368%;
1324,1324. Print Words Vertically,"['Array', 'String', 'Simulation']",61.4%,Medium,37.4005%;
1325,1325. Delete Leaves With a Given Value,"['Tree', 'Depth-First Search', 'Binary Tree']",74.7%,Medium,15.5482%;
1326,1326. Minimum Number of Taps to Open to Water a Garden,"['Array', 'Dynamic Programming', 'Greedy']",47.7%,Hard,52.6003%;
1327,1327. List the Products Ordered in a Period,['Database'],76.3%,Easy,0%;
1328,1328. Break a Palindrome,"['String', 'Greedy']",52.7%,Medium,92.7086%;
1329,1329. Sort the Matrix Diagonally,"['Array', 'Sorting', 'Matrix']",83.4%,Medium,52.4167%;
1330,1330. Reverse Subarray To Maximize Array Value,"['Array', 'Math', 'Greedy']",40.2%,Hard,39.1672%;
1331,1331. Rank Transform of an Array,"['Array', 'Hash Table', 'Sorting']",59.2%,Easy,42.0649%;
1332,1332. Remove Palindromic Subsequences,"['Two Pointers', 'String']",76.2%,Easy,15.7347%;
1333,"1333. Filter Restaurants by Vegan-Friendly, Price and Distance","['Array', 'Sorting']",60.0%,Medium,37.6083%;
1334,1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance,"['Dynamic Programming', 'Graph', '1+']",54.4%,Medium,53.3923%;
1335,1335. Minimum Difficulty of a Job Schedule,"['Array', 'Dynamic Programming']",58.6%,Hard,79.1231%;
1336,1336. Number of Transactions per Visit,['Database'],49.9%,Hard,0%;
1337,1337. The K Weakest Rows in a Matrix,"['Array', 'Binary Search', 'Sorting', '2+']",72.1%,Easy,60.9842%;
1338,1338. Reduce Array Size to The Half,"['Array', 'Hash Table', 'Greedy', '2+']",69.4%,Medium,50.0695%;
1339,1339. Maximum Product of Splitted Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",47.8%,Medium,82.8499%;
1340,1340. Jump Game V,"['Array', 'Dynamic Programming', 'Sorting']",62.6%,Hard,33.6722%;
1341,1341. Movie Rating,['Database'],57.3%,Medium,0%;
1342,1342. Number of Steps to Reduce a Number to Zero,"['Math', 'Bit Manipulation']",85.2%,Easy,50.8759%;
1343,1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold,"['Array', 'Sliding Window']",67.6%,Medium,23.8177%;
1344,1344. Angle Between Hands of a Clock,['Math'],63.3%,Medium,53.5314%;
1345,1345. Jump Game IV,"['Array', 'Hash Table', '1+']",47.0%,Hard,48.4499%;
1346,1346. Check If N and Its Double Exist,"['Array', 'Hash Table', 'Two Pointers', '2+']",36.5%,Easy,26.2379%;
1347,1347. Minimum Number of Steps to Make Two Strings Anagram,"['Hash Table', 'String', 'Counting']",77.8%,Medium,67.219%;
1348,1348. Tweet Counts Per Frequency,"['Hash Table', 'Binary Search', '3+']",43.9%,Medium,39.1672%;
1349,1349. Maximum Students Taking Exam,"['Array', 'Dynamic Programming', '3+']",48.9%,Hard,34.9753%;
1350,1350. Students With Invalid Departments,['Database'],90.3%,Easy,0%;
1351,1351. Count Negative Numbers in a Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",75.5%,Easy,35.6579%;
1352,1352. Product of the Last K Numbers,"['Array', 'Math', 'Design', '2+']",50.0%,Medium,50.3054%;
1353,1353. Maximum Number of Events That Can Be Attended,"['Array', 'Greedy', 'Sorting', '1+']",32.6%,Medium,74.6511%;
1354,1354. Construct Target Array With Multiple Sums,"['Array', 'Heap (Priority Queue)']",36.3%,Hard,0%;
1355,1355. Activity Participants,['Database'],73.8%,Medium,0%;
1356,1356. Sort Integers by The Number of 1 Bits,"['Array', 'Bit Manipulation', 'Sorting', '1+']",72.9%,Easy,75.3474%;
1357,1357. Apply Discount Every n Orders,"['Array', 'Hash Table', 'Design']",69.9%,Medium,0%;
1358,1358. Number of Substrings Containing All Three Characters,"['Hash Table', 'String', 'Sliding Window']",63.3%,Medium,37.6083%;
1359,1359. Count All Valid Pickup and Delivery Options,"['Math', 'Dynamic Programming', '1+']",62.8%,Hard,31.8564%;
1360,1360. Number of Days Between Two Dates,"['Math', 'String']",48.1%,Easy,68.4492%;
1361,1361. Validate Binary Tree Nodes,"['Tree', 'Depth-First Search', '4+']",39.9%,Medium,18.6239%;
1362,1362. Closest Divisors,['Math'],59.8%,Medium,15.5482%;
1363,1363. Largest Multiple of Three,"['Array', 'Dynamic Programming', 'Greedy']",33.3%,Hard,42.1439%;
1364,1364. Number of Trusted Contacts of a Customer,['Database'],77.8%,Medium,15.5482%;
1365,1365. How Many Numbers Are Smaller Than the Current Number,"['Array', 'Hash Table', 'Sorting', '1+']",86.7%,Easy,46.2977%;
1366,1366. Rank Teams by Votes,"['Array', 'Hash Table', 'String', '2+']",58.0%,Medium,66.4702%;
1367,1367. Linked List in Binary Tree,"['Linked List', 'Tree', '3+']",43.7%,Medium,9.23186%;
1368,1368. Minimum Cost to Make at Least One Valid Path in a Grid,"['Array', 'Breadth-First Search', '4+']",61.5%,Hard,41.9362%;
1369,1369. Get the Second Most Recent Activity,['Database'],69.1%,Hard,0%;
1370,1370. Increasing Decreasing String,"['Hash Table', 'String', 'Counting']",77.2%,Easy,34.9753%;
1371,1371. Find the Longest Substring Containing Vowels in Even Counts,"['Hash Table', 'String', '2+']",63.2%,Medium,43.287%;
1372,1372. Longest ZigZag Path in a Binary Tree,"['Dynamic Programming', 'Tree', '2+']",60.2%,Medium,11.842%;
1373,1373. Maximum Sum BST in Binary Tree,"['Dynamic Programming', 'Tree', '3+']",39.5%,Hard,26.3234%;
1374,1374. Generate a String With Characters That Have Odd Counts,['String'],77.6%,Easy,13.3134%;
1375,1375. Number of Times Binary String Is Prefix-Aligned,['Array'],65.8%,Medium,47.0615%;
1376,1376. Time Needed to Inform All Employees,"['Tree', 'Depth-First Search', '1+']",58.3%,Medium,45.6648%;
1377,1377. Frog Position After T Seconds,"['Tree', 'Depth-First Search', '2+']",35.7%,Hard,9.71707%;
1378,1378. Replace Employee ID With The Unique Identifier,['Database'],91.1%,Easy,6.22312%;
1379,1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree,"['Tree', 'Depth-First Search', '2+']",86.7%,Easy,28.682%;
1380,1380. Lucky Numbers in a Matrix,"['Array', 'Matrix']",70.6%,Easy,47.8046%;
1381,1381. Design a Stack With Increment Operation,"['Array', 'Stack', 'Design']",77.1%,Medium,42.2552%;
1382,1382. Balance a Binary Search Tree,"['Divide and Conquer', 'Greedy', '4+']",80.7%,Medium,15.4894%;
1383,1383. Maximum Performance of a Team,"['Array', 'Greedy', 'Sorting', '1+']",48.5%,Hard,67.8425%;
1384,1384. Total Sales Amount by Year,['Database'],65.4%,Hard,17.1707%;
1385,1385. Find the Distance Value Between Two Arrays,"['Array', 'Two Pointers', '2+']",66.4%,Easy,37.4593%;
1386,1386. Cinema Seat Allocation,"['Array', 'Hash Table', 'Greedy', '1+']",40.9%,Medium,75.402%;
1387,1387. Sort Integers by The Power Value,"['Dynamic Programming', '2+']",70.1%,Medium,54.8137%;
1388,1388. Pizza With 3n Slices,"['Array', 'Dynamic Programming', '2+']",50.2%,Hard,9.71707%;
1389,1389. Create Target Array in the Given Order,"['Array', 'Simulation']",85.8%,Easy,43.3096%;
1390,1390. Four Divisors,"['Array', 'Math']",41.2%,Medium,5.89925%;
1391,1391. Check if There is a Valid Path in a Grid,"['Array', 'Depth-First Search', '3+']",47.3%,Medium,16.3206%;
1392,1392. Longest Happy Prefix,"['String', 'Rolling Hash', '2+']",44.9%,Hard,43.5587%;
1393,1393. Capital Gain/Loss,['Database'],87.7%,Medium,27.9282%;
1394,1394. Find Lucky Integer in an Array,"['Array', 'Hash Table', 'Counting']",64.3%,Easy,33.336%;
1395,1395. Count Number of Teams,"['Array', 'Dynamic Programming', '1+']",67.4%,Medium,50.921%;
1396,1396. Design Underground System,"['Hash Table', 'String', 'Design']",73.6%,Medium,71.5576%;
1397,1397. Find All Good Strings,"['String', 'Dynamic Programming', '1+']",42.3%,Hard,37.7722%;
1398,1398. Customers Who Bought Products A and B but Not C,['Database'],76.1%,Medium,18.6239%;
1399,1399. Count Largest Group,"['Hash Table', 'Math']",67.0%,Easy,17.5771%;
1400,1400. Construct K Palindrome Strings,"['Hash Table', 'String', 'Greedy', '1+']",62.9%,Medium,10.4038%;
1401,1401. Circle and Rectangle Overlapping,"['Math', 'Geometry']",44.1%,Medium,58.5443%;
1402,1402. Reducing Dishes,"['Array', 'Dynamic Programming', '2+']",72.0%,Hard,42.4834%;
1403,1403. Minimum Subsequence in Non-Increasing Order,"['Array', 'Greedy', 'Sorting']",72.3%,Easy,0%;
1404,1404. Number of Steps to Reduce a Number in Binary Representation to One,"['String', 'Bit Manipulation']",52.5%,Medium,52.5867%;
1405,1405. Longest Happy String,"['String', 'Greedy', 'Heap (Priority Queue)']",57.4%,Medium,61.2293%;
1406,1406. Stone Game III,"['Array', 'Math', '2+']",59.5%,Hard,29.3886%;
1407,1407. Top Travellers,['Database'],62.3%,Easy,4.06851%;
1408,1408. String Matching in an Array,"['Array', 'String', 'String Matching']",63.8%,Easy,32.0875%;
1409,1409. Queries on a Permutation With Key,"['Array', 'Binary Indexed Tree', 'Simulation']",83.4%,Medium,13.5957%;
1410,1410. HTML Entity Parser,"['Hash Table', 'String']",51.7%,Medium,50.0961%;
1411,1411. Number of Ways to Paint N × 3 Grid,['Dynamic Programming'],62.4%,Hard,43.5587%;
1412,1412. Find the Quiet Students in All Exams,['Database'],62.1%,Hard,0%;
1413,1413. Minimum Value to Get Positive Step by Step Sum,"['Array', 'Prefix Sum']",67.4%,Easy,50.7565%;
1414,1414. Find the Minimum Number of Fibonacci Numbers Whose Sum Is K,"['Math', 'Greedy']",65.4%,Medium,9.71707%;
1415,1415. The k-th Lexicographical String of All Happy Strings of Length n,"['String', 'Backtracking']",72.4%,Medium,16.3206%;
1416,1416. Restore The Array,"['String', 'Dynamic Programming']",38.7%,Hard,43.5587%;
1417,1417. Reformat The String,['String'],54.9%,Easy,8.28335%;
1418,1418. Display Table of Food Orders in a Restaurant,"['Array', 'Hash Table', 'String', '2+']",74.1%,Medium,34.3739%;
1419,1419. Minimum Number of Frogs Croaking,"['String', 'Counting']",50.2%,Medium,79.5628%;
1420,1420. Build Array Where You Can Find The Maximum Exactly K Comparisons,['Dynamic Programming'],63.1%,Hard,0%;
1421,1421. NPV Queries,['Database'],83.3%,Easy,0%;
1422,1422. Maximum Score After Splitting a String,['String'],58.0%,Easy,15.7137%;
1423,1423. Maximum Points You Can Obtain from Cards,"['Array', 'Sliding Window', 'Prefix Sum']",52.3%,Medium,53.4082%;
1424,1424. Diagonal Traverse II,"['Array', 'Sorting', 'Heap (Priority Queue)']",50.5%,Medium,31.215%;
1425,1425. Constrained Subsequence Sum,"['Array', 'Dynamic Programming', '4+']",47.5%,Hard,23.8549%;
1426,1426. Counting Elements,"['Array', 'Hash Table']",59.7%,Easy,3.3367%;
1427,1427. Perform String Shifts,"['Array', 'Math', 'String']",54.3%,Easy,0%;
1428,1428. Leftmost Column with at Least a One,"['Array', 'Binary Search', 'Matrix', '1+']",53.4%,Medium,49.6272%;
1429,1429. First Unique Number,"['Array', 'Hash Table', 'Design', '2+']",52.9%,Medium,30.1546%;
1430,1430. Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree,"['Tree', 'Depth-First Search', '2+']",46.4%,Medium,30.1546%;
1431,1431. Kids With the Greatest Number of Candies,['Array'],87.3%,Easy,43.0298%;
1432,1432. Max Difference You Can Get From Changing an Integer,"['Math', 'Greedy']",42.3%,Medium,23.8549%;
1433,1433. Check If a String Can Break Another String,"['String', 'Greedy', 'Sorting']",68.9%,Medium,0%;
1434,1434. Number of Ways to Wear Different Hats to Each Other,"['Array', 'Dynamic Programming', '2+']",43.1%,Hard,0%;
1435,1435. Create a Session Bar Chart,['Database'],77.1%,Easy,0%;
1436,1436. Destination City,"['Hash Table', 'String']",77.5%,Easy,27.0262%;
1437,1437. Check If All 1's Are at Least Length K Places Away,['Array'],58.8%,Easy,15.7137%;
1438,1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit,"['Array', 'Queue', 'Sliding Window', '3+']",48.3%,Medium,52.5867%;
1439,1439. Find the Kth Smallest Sum of a Matrix With Sorted Rows,"['Array', 'Binary Search', '2+']",61.4%,Hard,31.6547%;
1440,1440. Evaluate Boolean Expression,['Database'],75.3%,Medium,0%;
1441,1441. Build an Array With Stack Operations,"['Array', 'Stack', 'Simulation']",71.8%,Medium,37.6083%;
1442,1442. Count Triplets That Can Form Two Arrays of Equal XOR,"['Array', 'Hash Table', 'Math', '2+']",76.0%,Medium,26.1833%;
1443,1443. Minimum Time to Collect All Apples in a Tree,"['Hash Table', 'Tree', '2+']",62.8%,Medium,84.138%;
1444,1444. Number of Ways of Cutting a Pizza,"['Array', 'Dynamic Programming', '2+']",56.1%,Hard,99.0778%;
1445,1445. Apples & Oranges,['Database'],89.9%,Medium,0%;
1446,1446. Consecutive Characters,['String'],61.3%,Easy,19.1652%;
1447,1447. Simplified Fractions,"['Math', 'String', 'Number Theory']",65.1%,Medium,23.0875%;
1448,1448. Count Good Nodes in Binary Tree,"['Tree', 'Depth-First Search', '2+']",74.3%,Medium,39.5646%;
1449,1449. Form Largest Integer With Digits That Add up to Target,"['Array', 'Dynamic Programming']",47.7%,Hard,40.9451%;
1450,1450. Number of Students Doing Homework at a Given Time,['Array'],75.9%,Easy,10.7775%;
1451,1451. Rearrange Words in a Sentence,"['String', 'Sorting']",63.0%,Medium,30.8807%;
1452,1452. People Whose List of Favorite Companies Is Not a Subset of Another List,"['Array', 'Hash Table', 'String']",56.8%,Medium,0%;
1453,1453. Maximum Number of Darts Inside of a Circular Dartboard,"['Array', 'Math', 'Geometry']",36.9%,Hard,33.8438%;
1454,1454. Active Users,['Database'],37.8%,Medium,18.0031%;
1455,1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence,"['String', 'String Matching']",64.2%,Easy,0%;
1456,1456. Maximum Number of Vowels in a Substring of Given Length,"['String', 'Sliding Window']",58.2%,Medium,12.7792%;
1457,1457. Pseudo-Palindromic Paths in a Binary Tree,"['Bit Manipulation', 'Tree', '3+']",67.9%,Medium,52.2824%;
1458,1458. Max Dot Product of Two Subsequences,"['Array', 'Dynamic Programming']",46.6%,Hard,20.3521%;
1459,1459. Rectangles Area,['Database'],69.4%,Medium,14.8423%;
1460,1460. Make Two Arrays Equal by Reversing Subarrays,"['Array', 'Hash Table', 'Sorting']",72.2%,Easy,4.24561%;
1461,1461. Check If a String Contains All Binary Codes of Size K,"['Hash Table', 'String', '3+']",56.6%,Medium,7.82491%;
1462,1462. Course Schedule IV,"['Depth-First Search', '3+']",49.0%,Medium,0%;
1463,1463. Cherry Pickup II,"['Array', 'Dynamic Programming', 'Matrix']",69.7%,Hard,32.9824%;
1464,1464. Maximum Product of Two Elements in an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",79.8%,Easy,24.0478%;
1465,1465. Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts,"['Array', 'Greedy', 'Sorting']",40.9%,Medium,46.7635%;
1466,1466. Reorder Routes to Make All Paths Lead to the City Zero,"['Depth-First Search', '2+']",61.7%,Medium,36.3686%;
1467,1467. Probability of a Two Boxes Having The Same Number of Distinct Balls,"['Array', 'Math', '4+']",60.8%,Hard,0%;
1468,1468. Calculate Salaries,['Database'],80.8%,Medium,0%;
1469,1469. Find All The Lonely Nodes,"['Tree', 'Depth-First Search', '2+']",82.1%,Easy,0%;
1470,1470. Shuffle the Array,['Array'],89.0%,Easy,68.5822%;
1471,1471. The k Strongest Values in an Array,"['Array', 'Two Pointers', 'Sorting']",60.4%,Medium,12.5261%;
1472,1472. Design Browser History,"['Array', 'Linked List', 'Stack', '3+']",76.2%,Medium,77.6053%;
1473,1473. Paint House III,"['Array', 'Dynamic Programming']",61.6%,Hard,42.5608%;
1474,1474. Delete N Nodes After M Nodes of a Linked List,['Linked List'],73.4%,Easy,0%;
1475,1475. Final Prices With a Special Discount in a Shop,"['Array', 'Stack', 'Monotonic Stack']",76.0%,Easy,27.3883%;
1476,1476. Subrectangle Queries,"['Array', 'Design', 'Matrix']",88.3%,Medium,19.6222%;
1477,1477. Find Two Non-overlapping Sub-arrays Each With Target Sum,"['Array', 'Hash Table', '3+']",36.8%,Medium,29.3886%;
1478,1478. Allocate Mailboxes,"['Array', 'Math', '2+']",55.5%,Hard,29.3886%;
1479,1479. Sales by Day of the Week,['Database'],81.1%,Hard,0%;
1480,1480. Running Sum of 1d Array,"['Array', 'Prefix Sum']",87.7%,Easy,88.2466%;
1481,1481. Least Number of Unique Integers after K Removals,"['Array', 'Hash Table', 'Greedy', '2+']",55.7%,Medium,67.0532%;
1482,1482. Minimum Number of Days to Make m Bouquets,"['Array', 'Binary Search']",54.2%,Medium,52.6725%;
1483,1483. Kth Ancestor of a Tree Node,"['Binary Search', '5+']",33.8%,Hard,35.5829%;
1484,1484. Group Sold Products By The Date,['Database'],80.0%,Easy,24.8118%;
1485,1485. Clone Binary Tree With Random Pointer,"['Hash Table', 'Tree', '3+']",79.3%,Medium,16.3206%;
1486,1486. XOR Operation in an Array,"['Math', 'Bit Manipulation']",84.6%,Easy,20.1954%;
1487,1487. Making File Names Unique,"['Array', 'Hash Table', 'String']",36.2%,Medium,55.5894%;
1488,1488. Avoid Flood in The City,"['Array', 'Hash Table', '3+']",26.4%,Medium,51.4536%;
1489,1489. Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree,"['Union Find', 'Graph', 'Sorting', '2+']",52.5%,Hard,37.6083%;
1490,1490. Clone N-ary Tree,"['Hash Table', 'Tree', '2+']",83.5%,Medium,0%;
1491,1491. Average Salary Excluding the Minimum and Maximum Salary,"['Array', 'Sorting']",61.4%,Easy,43.4032%;
1492,1492. The kth Factor of n,['Math'],62.7%,Medium,22.0761%;
1493,1493. Longest Subarray of 1's After Deleting One Element,"['Array', 'Dynamic Programming', '1+']",60.3%,Medium,63.2375%;
1494,1494. Parallel Courses II,"['Dynamic Programming', '3+']",30.4%,Hard,57.9822%;
1495,1495. Friendly Movies Streamed Last Month,['Database'],49.3%,Easy,0%;
1496,1496. Path Crossing,"['Hash Table', 'String']",56.0%,Easy,36.0624%;
1497,1497. Check If Array Pairs Are Divisible by k,"['Array', 'Hash Table', 'Counting']",39.2%,Medium,41.9789%;
1498,1498. Number of Subsequences That Satisfy the Given Sum Condition,"['Array', 'Two Pointers', '2+']",37.5%,Medium,51.024%;
1499,1499. Max Value of Equation,"['Array', 'Queue', 'Sliding Window', '2+']",45.8%,Hard,48.4923%;
1500,1500. Design a File Sharing System,"['Hash Table', 'Design', '2+']",44.6%,Medium,33.8438%;
1501,1501. Countries You Can Safely Invest In,['Database'],54.5%,Medium,17.1707%;
1502,1502. Can Make Arithmetic Progression From Sequence,"['Array', 'Sorting']",67.8%,Easy,19.3767%;
1503,1503. Last Moment Before All Ants Fall Out of a Plank,"['Array', 'Brainteaser', 'Simulation']",55.7%,Medium,33.3729%;
1504,1504. Count Submatrices With All Ones,"['Array', 'Dynamic Programming', '3+']",57.6%,Medium,43.0099%;
1505,1505. Minimum Possible Integer After at Most K Adjacent Swaps On Digits,"['String', 'Greedy', '2+']",38.4%,Hard,47.0615%;
1506,1506. Find Root of N-Ary Tree,"['Hash Table', 'Bit Manipulation', '2+']",78.5%,Medium,53.608%;
1507,1507. Reformat Date,['String'],63.2%,Easy,31.5248%;
1508,1508. Range Sum of Sorted Subarray Sums,"['Array', 'Two Pointers', '2+']",59.1%,Medium,17.6292%;
1509,1509. Minimum Difference Between Largest and Smallest Value in Three Moves,"['Array', 'Greedy', 'Sorting']",54.6%,Medium,49.0476%;
1510,1510. Stone Game IV,"['Math', 'Dynamic Programming', '1+']",60.4%,Hard,17.397%;
1511,1511. Customer Order Frequency,['Database'],71.6%,Easy,0%;
1512,1512. Number of Good Pairs,"['Array', 'Hash Table', 'Math', '1+']",88.2%,Easy,55.5057%;
1513,1513. Number of Substrings With Only 1s,"['Math', 'String']",45.4%,Medium,9.10025%;
1514,1514. Path with Maximum Probability,"['Array', 'Graph', '2+']",48.6%,Medium,12.6515%;
1515,1515. Best Position for a Service Centre,"['Math', 'Geometry', 'Randomized']",37.3%,Hard,34.9753%;
1516,1516. Move Sub-Tree of N-Ary Tree,"['Tree', 'Depth-First Search']",63.4%,Hard,0%;
1517,1517. Find Users With Valid E-Mails,['Database'],54.1%,Easy,0%;
1518,1518. Water Bottles,"['Math', 'Simulation']",60.4%,Easy,26.3078%;
1519,1519. Number of Nodes in the Sub-Tree With the Same Label,"['Hash Table', 'Tree', '3+']",55.3%,Medium,75.8069%;
1520,1520. Maximum Number of Non-Overlapping Substrings,"['String', 'Greedy']",38.2%,Hard,67.5569%;
1521,1521. Find a Value of a Mysterious Function Closest to Target,"['Array', 'Binary Search', '2+']",43.6%,Hard,23.2741%;
1522,1522. Diameter of N-Ary Tree,"['Tree', 'Depth-First Search']",73.5%,Medium,0%;
1523,1523. Count Odd Numbers in an Interval Range,['Math'],49.7%,Easy,88.1188%;
1524,1524. Number of Sub-arrays With Odd Sum,"['Array', 'Math', '2+']",43.3%,Medium,39.1672%;
1525,1525. Number of Good Ways to Split a String,"['String', 'Dynamic Programming', '1+']",69.0%,Medium,28.2157%;
1526,1526. Minimum Number of Increments on Subarrays to Form a Target Array,"['Array', 'Dynamic Programming', '3+']",68.5%,Hard,35.1184%;
1527,1527. Patients With a Condition,['Database'],40.8%,Easy,13.0628%;
1528,1528. Shuffle String,"['Array', 'String']",85.2%,Easy,37.5271%;
1529,1529. Minimum Suffix Flips,"['String', 'Greedy']",72.6%,Medium,54.1111%;
1530,1530. Number of Good Leaf Nodes Pairs,"['Tree', 'Depth-First Search', 'Binary Tree']",61.1%,Medium,26.1833%;
1531,1531. String Compression II,"['String', 'Dynamic Programming']",49.6%,Hard,84.5586%;
1532,1532. The Most Recent Three Orders,['Database'],70.0%,Medium,0%;
1533,1533. Find the Index of the Large Integer,"['Array', 'Binary Search', 'Interactive']",56.0%,Medium,33.8438%;
1534,1534. Count Good Triplets,"['Array', 'Enumeration']",80.9%,Easy,41.1155%;
1535,1535. Find the Winner of an Array Game,"['Array', 'Simulation']",48.6%,Medium,40.869%;
1536,1536. Minimum Swaps to Arrange a Binary Grid,"['Array', 'Greedy', 'Matrix']",46.5%,Medium,50.0961%;
1537,1537. Get the Maximum Score,"['Array', 'Two Pointers', '2+']",39.3%,Hard,56.5328%;
1538,1538. Guess the Majority in a Hidden Array,"['Array', 'Math', 'Interactive']",63.5%,Medium,0%;
1539,1539. Kth Missing Positive Number,"['Array', 'Binary Search']",58.5%,Easy,55.9067%;
1540,1540. Can Convert String in K Moves,"['Hash Table', 'String']",33.4%,Medium,17.1707%;
1541,1541. Minimum Insertions to Balance a Parentheses String,"['String', 'Stack', 'Greedy']",49.8%,Medium,21.3499%;
1542,1542. Find Longest Awesome Substring,"['Hash Table', 'String', 'Bit Manipulation']",41.5%,Hard,35.1184%;
1543,1543. Fix Product Name Format,['Database'],60.9%,Easy,0%;
1544,1544. Make The String Great,"['String', 'Stack']",63.3%,Easy,63.7046%;
1545,1545. Find Kth Bit in Nth Binary String,"['String', 'Recursion']",58.4%,Medium,50.5291%;
1546,1546. Maximum Number of Non-Overlapping Subarrays With Sum Equals Target,"['Array', 'Hash Table', 'Greedy', '1+']",47.3%,Medium,15.5482%;
1547,1547. Minimum Cost to Cut a Stick,"['Array', 'Dynamic Programming']",57.1%,Hard,48.0843%;
1548,1548. The Most Similar Path in a Graph,"['Dynamic Programming', 'Graph']",57.1%,Hard,39.1672%;
1549,1549. The Most Recent Orders for Each Product,['Database'],67.4%,Medium,8.81463%;
1550,1550. Three Consecutive Odds,['Array'],63.5%,Easy,9.3665%;
1551,1551. Minimum Operations to Make Array Equal,['Math'],81.5%,Medium,30.1546%;
1552,1552. Magnetic Force Between Two Balls,"['Array', 'Binary Search', 'Sorting']",57.9%,Medium,30.6836%;
1553,1553. Minimum Number of Days to Eat N Oranges,"['Dynamic Programming', 'Memoization']",34.7%,Hard,27.8646%;
1554,1554. Strings Differ by One Character,"['Hash Table', 'String', 'Rolling Hash', '1+']",42.6%,Medium,44.5955%;
1555,1555. Bank Account Summary,['Database'],52.4%,Medium,0%;
1556,1556. Thousand Separator,['String'],54.6%,Easy,37.6083%;
1557,1557. Minimum Number of Vertices to Reach All Nodes,['Graph'],79.4%,Medium,10.3137%;
1558,1558. Minimum Numbers of Function Calls to Make Target Array,"['Array', 'Greedy', 'Bit Manipulation']",63.9%,Medium,27.6365%;
1559,1559. Detect Cycles in 2D Grid,"['Array', 'Depth-First Search', '3+']",48.0%,Medium,31.6547%;
1560,1560. Most Visited Sector in a Circular Track,"['Array', 'Simulation']",58.6%,Easy,63.576%;
1561,1561. Maximum Number of Coins You Can Get,"['Array', 'Math', 'Greedy', '2+']",79.1%,Medium,22.2025%;
1562,1562. Find Latest Group of Size M,"['Array', 'Binary Search', 'Simulation']",42.8%,Medium,14.8423%;
1563,1563. Stone Game V,"['Array', 'Math', '2+']",40.3%,Hard,38.4504%;
1564,1564. Put Boxes Into the Warehouse I,"['Array', 'Greedy', 'Sorting']",67.0%,Medium,0%;
1565,1565. Unique Orders and Customers Per Month,['Database'],82.9%,Easy,0%;
1566,1566. Detect Pattern of Length M Repeated K or More Times,"['Array', 'Enumeration']",43.4%,Easy,0%;
1567,1567. Maximum Length of Subarray With Positive Product,"['Array', 'Dynamic Programming', 'Greedy']",44.0%,Medium,45.4669%;
1568,1568. Minimum Number of Days to Disconnect Island,"['Array', 'Depth-First Search', '3+']",46.5%,Hard,35.377%;
1569,1569. Number of Ways to Reorder Array to Get Same BST,"['Array', 'Math', '8+']",47.8%,Hard,0%;
1570,1570. Dot Product of Two Sparse Vectors,"['Array', 'Hash Table', 'Two Pointers', '1+']",90.3%,Medium,66.9948%;
1571,1571. Warehouse Manager,['Database'],89.0%,Easy,10.907%;
1572,1572. Matrix Diagonal Sum,"['Array', 'Matrix']",80.2%,Easy,27.2372%;
1573,1573. Number of Ways to Split a String,"['Math', 'String']",32.5%,Medium,47.0615%;
1574,1574. Shortest Subarray to be Removed to Make Array Sorted,"['Array', 'Two Pointers', '3+']",37.0%,Medium,44.1052%;
1575,1575. Count All Possible Routes,"['Array', 'Dynamic Programming', '1+']",56.8%,Hard,27.6365%;
1576,1576. Replace All ?'s to Avoid Consecutive Repeating Characters,['String'],48.3%,Easy,46.0189%;
1577,1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers,"['Array', 'Hash Table', 'Math', '1+']",40.1%,Medium,33.3729%;
1578,1578. Minimum Time to Make Rope Colorful,"['Array', 'String', '2+']",63.5%,Medium,76.4536%;
1579,1579. Remove Max Number of Edges to Keep Graph Fully Traversable,"['Union Find', 'Graph']",53.2%,Hard,40.869%;
1580,1580. Put Boxes Into the Warehouse II,"['Array', 'Greedy', 'Sorting']",63.7%,Medium,0%;
1581,1581. Customer Who Visited but Did Not Make Any Transactions,['Database'],85.2%,Easy,7.82491%;
1582,1582. Special Positions in a Binary Matrix,"['Array', 'Matrix']",65.4%,Easy,35.377%;
1583,1583. Count Unhappy Friends,"['Array', 'Simulation']",60.9%,Medium,57.9822%;
1584,1584. Min Cost to Connect All Points,"['Array', 'Union Find', 'Graph', '1+']",64.0%,Medium,33.7482%;
1585,1585. Check If String Is Transformable With Substring Sort Operations,"['String', 'Greedy', 'Sorting']",47.9%,Hard,0%;
1586,1586. Binary Search Tree Iterator II,"['Stack', 'Tree', 'Design', '3+']",70.9%,Medium,39.1672%;
1587,1587. Bank Account Summary II,['Database'],86.3%,Easy,8.23292%;
1588,1588. Sum of All Odd Length Subarrays,"['Array', 'Math', 'Prefix Sum']",83.4%,Easy,53.3491%;
1589,1589. Maximum Sum Obtained of Any Permutation,"['Array', 'Greedy', 'Sorting', '1+']",37.2%,Medium,0%;
1590,1590. Make Sum Divisible by P,"['Array', 'Hash Table', 'Prefix Sum']",28.1%,Medium,37.4005%;
1591,1591. Strange Printer II,"['Array', 'Graph', 'Topological Sort', '1+']",58.6%,Hard,45.1464%;
1592,1592. Rearrange Spaces Between Words,['String'],43.5%,Easy,35.5829%;
1593,1593. Split a String Into the Max Number of Unique Substrings,"['Hash Table', 'String', 'Backtracking']",55.3%,Medium,26.7549%;
1594,1594. Maximum Non Negative Product in a Matrix,"['Array', 'Dynamic Programming', 'Matrix']",33.1%,Medium,25.1229%;
1595,1595. Minimum Cost to Connect Two Groups of Points,"['Array', 'Dynamic Programming', '3+']",46.5%,Hard,40.7349%;
1596,1596. The Most Frequently Ordered Products for Each Customer,['Database'],83.5%,Medium,14.7676%;
1597,1597. Build Binary Expression Tree From Infix Expression,"['String', 'Stack', 'Tree', '1+']",62.7%,Hard,33.8438%;
1598,1598. Crawler Log Folder,"['Array', 'String', 'Stack']",64.5%,Easy,30.9747%;
1599,1599. Maximum Profit of Operating a Centennial Wheel,"['Array', 'Simulation']",43.8%,Medium,0%;
1600,1600. Throne Inheritance,"['Hash Table', 'Tree', '2+']",63.6%,Medium,33.3729%;
1601,1601. Maximum Number of Achievable Transfer Requests,"['Array', 'Backtracking', '2+']",51.1%,Hard,23.2741%;
1602,1602. Find Nearest Right Node in Binary Tree,"['Tree', 'Breadth-First Search', '1+']",75.5%,Medium,0%;
1603,1603. Design Parking System,"['Design', 'Simulation', 'Counting']",87.9%,Easy,45.6179%;
1604,1604. Alert Using Same Key-Card Three or More Times in a One Hour Period,"['Array', 'Hash Table', 'String', '1+']",47.0%,Medium,47.4468%;
1605,1605. Find Valid Matrix Given Row and Column Sums,"['Array', 'Greedy', 'Matrix']",78.0%,Medium,3.41738%;
1606,1606. Find Servers That Handled Most Number of Requests,"['Array', 'Greedy', '2+']",43.1%,Hard,53.7583%;
1607,1607. Sellers With No Sales,['Database'],54.9%,Easy,6.05827%;
1608,1608. Special Array With X Elements Greater Than or Equal X,"['Array', 'Binary Search', 'Sorting']",60.5%,Easy,36.0524%;
1609,1609. Even Odd Tree,"['Tree', 'Breadth-First Search', '1+']",54.2%,Medium,23.4795%;
1610,1610. Maximum Number of Visible Points,"['Array', 'Math', 'Geometry', '2+']",37.3%,Hard,71.4317%;
1611,1611. Minimum One Bit Operations to Make Integers Zero,"['Dynamic Programming', '2+']",63.3%,Hard,50.0961%;
1612,1612. Check If Two Expression Trees are Equivalent,"['Tree', 'Depth-First Search', 'Binary Tree']",70.3%,Medium,0%;
1613,1613. Find the Missing IDs,['Database'],75.1%,Medium,0%;
1614,1614. Maximum Nesting Depth of the Parentheses,"['String', 'Stack']",82.3%,Easy,39.8402%;
1615,1615. Maximal Network Rank,['Graph'],58.5%,Medium,44.3174%;
1616,1616. Split Two Strings to Make Palindrome,"['Two Pointers', 'String']",31.2%,Medium,0%;
1617,1617. Count Subtrees With Max Distance Between Cities,"['Dynamic Programming', '4+']",66.1%,Hard,0%;
1618,1618. Maximum Font to Fit a Sentence in a Screen,"['Array', 'String', 'Binary Search', '1+']",59.7%,Medium,33.8438%;
1619,1619. Mean of Array After Removing Some Elements,"['Array', 'Sorting']",65.6%,Easy,14.4755%;
1620,1620. Coordinate With Maximum Network Quality,"['Array', 'Enumeration']",37.7%,Medium,0%;
1621,1621. Number of Sets of K Non-Overlapping Line Segments,"['Math', 'Dynamic Programming']",42.3%,Medium,33.8438%;
1622,1622. Fancy Sequence,"['Math', 'Design', 'Segment Tree']",16.1%,Hard,33.6722%;
1623,1623. All Valid Triplets That Can Represent a Country,['Database'],86.8%,Easy,0%;
1624,1624. Largest Substring Between Two Equal Characters,"['Hash Table', 'String']",59.1%,Easy,20.0412%;
1625,1625. Lexicographically Smallest String After Applying Operations,"['String', 'Breadth-First Search']",65.5%,Medium,30.1546%;
1626,1626. Best Team With No Conflicts,"['Array', 'Dynamic Programming', 'Sorting']",51.2%,Medium,84.509%;
1627,1627. Graph Connectivity With Threshold,"['Array', 'Math', 'Union Find']",46.2%,Hard,24.6832%;
1628,1628. Design an Expression Tree With Evaluate Function,"['Math', 'Stack', 'Tree', '2+']",82.8%,Medium,42.1439%;
1629,1629. Slowest Key,"['Array', 'String']",59.2%,Easy,26.3178%;
1630,1630. Arithmetic Subarrays,"['Array', 'Sorting']",80.3%,Medium,22.6815%;
1631,1631. Path With Minimum Effort,"['Array', 'Binary Search', '5+']",55.6%,Medium,25.8983%;
1632,1632. Rank Transform of a Matrix,"['Array', 'Greedy', 'Union Find', '3+']",40.9%,Hard,0%;
1633,1633. Percentage of Users Attended a Contest,['Database'],66.9%,Easy,0%;
1634,1634. Add Two Polynomials Represented as Linked Lists,"['Linked List', 'Math', 'Two Pointers']",54.4%,Medium,21.7064%;
1635,1635. Hopper Company Queries I,['Database'],51.0%,Hard,0%;
1636,1636. Sort Array by Increasing Frequency,"['Array', 'Hash Table', 'Sorting']",69.5%,Easy,61.2479%;
1637,1637. Widest Vertical Area Between Two Points Containing No Points,"['Array', 'Sorting']",84.4%,Medium,21.7064%;
1638,1638. Count Substrings That Differ by One Character,"['Hash Table', 'String', '1+']",71.4%,Medium,27.995%;
1639,1639. Number of Ways to Form a Target String Given a Dictionary,"['Array', 'String', 'Dynamic Programming']",43.3%,Hard,78.6478%;
1640,1640. Check Array Formation Through Concatenation,"['Array', 'Hash Table']",56.2%,Easy,10.7775%;
1641,1641. Count Sorted Vowel Strings,"['Math', 'Dynamic Programming', '1+']",77.4%,Medium,39.7209%;
1642,1642. Furthest Building You Can Reach,"['Array', 'Greedy', 'Heap (Priority Queue)']",48.3%,Medium,55.646%;
1643,1643. Kth Smallest Instructions,"['Array', 'Math', '2+']",47.0%,Hard,37.6083%;
1644,1644. Lowest Common Ancestor of a Binary Tree II,"['Tree', 'Depth-First Search', 'Binary Tree']",59.9%,Medium,18.1128%;
1645,1645. Hopper Company Queries II,['Database'],38.9%,Hard,0%;
1646,1646. Get Maximum in Generated Array,"['Array', 'Dynamic Programming', '1+']",50.2%,Easy,23.5191%;
1647,1647. Minimum Deletions to Make Character Frequencies Unique,"['Hash Table', 'String', 'Greedy', '1+']",59.1%,Medium,59.6047%;
1648,1648. Sell Diminishing-Valued Colored Balls,"['Array', 'Math', 'Binary Search', '3+']",30.4%,Medium,35.377%;
1649,1649. Create Sorted Array through Instructions,"['Array', 'Binary Search', '5+']",37.3%,Hard,33.3729%;
1650,1650. Lowest Common Ancestor of a Binary Tree III,"['Hash Table', 'Tree', 'Binary Tree']",77.4%,Medium,50.921%;
1651,1651. Hopper Company Queries III,['Database'],68.1%,Hard,0%;
1652,1652. Defuse the Bomb,['Array'],62.2%,Easy,7.14772%;
1653,1653. Minimum Deletions to Make String Balanced,"['String', 'Dynamic Programming', 'Stack']",59.1%,Medium,53.1658%;
1654,1654. Minimum Jumps to Reach Home,"['Array', 'Dynamic Programming', '1+']",29.0%,Medium,46.76%;
1655,1655. Distribute Repeating Integers,"['Array', 'Dynamic Programming', '3+']",38.9%,Hard,12.5261%;
1656,1656. Design an Ordered Stream,"['Array', 'Hash Table', 'Design', '1+']",85.3%,Easy,75.7727%;
1657,1657. Determine if Two Strings Are Close,"['Hash Table', 'String', 'Sorting']",56.3%,Medium,73.4387%;
1658,1658. Minimum Operations to Reduce X to Zero,"['Array', 'Hash Table', '3+']",37.6%,Medium,17.6292%;
1659,1659. Maximize Grid Happiness,"['Dynamic Programming', '3+']",38.2%,Hard,0%;
1660,1660. Correct a Binary Tree,"['Hash Table', 'Tree', '3+']",72.5%,Medium,30.1546%;
1661,1661. Average Time of Process per Machine,['Database'],78.5%,Easy,0%;
1662,1662. Check If Two String Arrays are Equivalent,"['Array', 'String']",83.4%,Easy,47.0389%;
1663,1663. Smallest String With A Given Numeric Value,"['String', 'Greedy']",66.8%,Medium,19.4164%;
1664,1664. Ways to Make a Fair Array,"['Array', 'Dynamic Programming']",63.5%,Medium,37.9803%;
1665,1665. Minimum Initial Energy to Finish Tasks,"['Array', 'Greedy', 'Sorting']",56.3%,Hard,26.561%;
1666,1666. Change the Root of a Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",73.1%,Medium,0%;
1667,1667. Fix Names in a Table,['Database'],65.3%,Easy,20.7471%;
1668,1668. Maximum Repeating Substring,"['String', 'String Matching']",39.5%,Easy,26.561%;
1669,1669. Merge In Between Linked Lists,['Linked List'],73.8%,Medium,28.4978%;
1670,1670. Design Front Middle Back Queue,"['Array', 'Linked List', 'Design', '2+']",57.3%,Medium,17.1707%;
1671,1671. Minimum Number of Removals to Make Mountain Array,"['Array', 'Binary Search', '2+']",42.5%,Hard,37.7722%;
1672,1672. Richest Customer Wealth,"['Array', 'Matrix']",87.9%,Easy,72.5963%;
1673,1673. Find the Most Competitive Subsequence,"['Array', 'Stack', 'Greedy', '1+']",49.3%,Medium,39.0043%;
1674,1674. Minimum Moves to Make Array Complementary,"['Array', 'Hash Table', 'Prefix Sum']",38.6%,Medium,33.3729%;
1675,1675. Minimize Deviation in Array,"['Array', 'Greedy', '2+']",54.8%,Hard,66.9224%;
1676,1676. Lowest Common Ancestor of a Binary Tree IV,"['Tree', 'Depth-First Search', 'Binary Tree']",79.5%,Medium,0%;
1677,1677. Product's Worth Over Invoices,['Database'],38.4%,Easy,0%;
1678,1678. Goal Parser Interpretation,['String'],86.6%,Easy,21.7064%;
1679,1679. Max Number of K-Sum Pairs,"['Array', 'Hash Table', 'Two Pointers', '1+']",57.3%,Medium,35.8707%;
1680,1680. Concatenation of Consecutive Binary Numbers,"['Math', 'Bit Manipulation', 'Simulation']",57.0%,Medium,84.416%;
1681,1681. Minimum Incompatibility,"['Array', 'Dynamic Programming', '2+']",37.4%,Hard,0%;
1682,1682. Longest Palindromic Subsequence II,"['String', 'Dynamic Programming']",49.6%,Medium,0%;
1683,1683. Invalid Tweets,['Database'],90.7%,Easy,0%;
1684,1684. Count the Number of Consistent Strings,"['Array', 'Hash Table', 'String', '1+']",82.2%,Easy,2.43658%;
1685,1685. Sum of Absolute Differences in a Sorted Array,"['Array', 'Math', 'Prefix Sum']",63.8%,Medium,33.4107%;
1686,1686. Stone Game VI,"['Array', 'Math', 'Greedy', '3+']",54.8%,Medium,32.809%;
1687,1687. Delivering Boxes from Storage to Ports,"['Array', 'Dynamic Programming', '4+']",38.8%,Hard,45.1464%;
1688,1688. Count of Matches in Tournament,"['Math', 'Simulation']",83.2%,Easy,27.8817%;
1689,1689. Partitioning Into Minimum Number Of Deci-Binary Numbers,"['String', 'Greedy']",89.3%,Medium,35.9111%;
1690,1690. Stone Game VII,"['Array', 'Math', '2+']",58.2%,Medium,14.194%;
1691,1691. Maximum Height by Stacking Cuboids,"['Array', 'Dynamic Programming', 'Sorting']",54.3%,Hard,31.215%;
1692,1692. Count Ways to Distribute Candies,['Dynamic Programming'],62.2%,Hard,39.1672%;
1693,1693. Daily Leads and Partners,['Database'],88.4%,Easy,6.28396%;
1694,1694. Reformat Phone Number,['String'],65.0%,Easy,0%;
1695,1695. Maximum Erasure Value,"['Array', 'Hash Table', 'Sliding Window']",57.6%,Medium,26.0602%;
1696,1696. Jump Game VI,"['Array', 'Dynamic Programming', '4+']",46.1%,Medium,56.5328%;
1697,1697. Checking Existence of Edge Length Limited Paths,"['Array', 'Union Find', 'Graph', '1+']",50.7%,Hard,0%;
1698,1698. Number of Distinct Substrings in a String,"['String', 'Trie', 'Rolling Hash', '2+']",63.5%,Medium,39.1672%;
1699,1699. Number of Calls Between Two Persons,['Database'],83.1%,Medium,11.2655%;
1700,1700. Number of Students Unable to Eat Lunch,"['Array', 'Stack', 'Queue', '1+']",68.6%,Easy,26.0449%;
1701,1701. Average Waiting Time,"['Array', 'Simulation']",62.6%,Medium,23.8549%;
1702,1702. Maximum Binary String After Change,"['String', 'Greedy']",46.3%,Medium,23.8549%;
1703,1703. Minimum Adjacent Swaps for K Consecutive Ones,"['Array', 'Greedy', 'Sliding Window', '1+']",42.3%,Hard,60.7791%;
1704,1704. Determine if String Halves Are Alike,"['String', 'Counting']",77.8%,Easy,64.2123%;
1705,1705. Maximum Number of Eaten Apples,"['Array', 'Greedy', 'Heap (Priority Queue)']",38.0%,Medium,40.7349%;
1706,1706. Where Will the Ball Fall,"['Array', 'Dynamic Programming', '3+']",71.5%,Medium,64.0149%;
1707,1707. Maximum XOR With an Element From Array,"['Array', 'Bit Manipulation', 'Trie']",44.8%,Hard,14.194%;
1708,1708. Largest Subarray Length K,"['Array', 'Greedy']",63.9%,Easy,0%;
1709,1709. Biggest Window Between Visits,['Database'],75.8%,Medium,12.0454%;
1710,1710. Maximum Units on a Truck,"['Array', 'Greedy', 'Sorting']",73.8%,Easy,56.8671%;
1711,1711. Count Good Meals,"['Array', 'Hash Table']",29.2%,Medium,8.81463%;
1712,1712. Ways to Split Array Into Three Subarrays,"['Array', 'Two Pointers', '2+']",32.6%,Medium,35.8983%;
1713,1713. Minimum Operations to Make a Subsequence,"['Array', 'Hash Table', '2+']",48.9%,Hard,48.4923%;
1714,1714. Sum Of Special Evenly-Spaced Elements In Array,"['Array', 'Dynamic Programming']",49.1%,Hard,0%;
1715,1715. Count Apples and Oranges,['Database'],76.3%,Medium,0%;
1716,1716. Calculate Money in Leetcode Bank,['Math'],66.1%,Easy,13.4063%;
1717,1717. Maximum Score From Removing Substrings,"['String', 'Stack', 'Greedy']",46.2%,Medium,14.194%;
1718,1718. Construct the Lexicographically Largest Valid Sequence,"['Array', 'Backtracking']",52.0%,Medium,63.576%;
1719,1719. Number Of Ways To Reconstruct A Tree,"['Tree', 'Graph']",43.7%,Hard,48.4923%;
1720,1720. Decode XORed Array,"['Array', 'Bit Manipulation']",85.8%,Easy,35.204%;
1721,1721. Swapping Nodes in a Linked List,"['Linked List', 'Two Pointers']",67.2%,Medium,49.5615%;
1722,1722. Minimize Hamming Distance After Swap Operations,"['Array', 'Depth-First Search', 'Union Find']",48.7%,Medium,37.6083%;
1723,1723. Find Minimum Time to Finish All Jobs,"['Array', 'Dynamic Programming', '3+']",42.5%,Hard,57.4424%;
1724,1724. Checking Existence of Edge Length Limited Paths II,"['Union Find', 'Graph', '1+']",52.5%,Hard,0%;
1725,1725. Number Of Rectangles That Can Form The Largest Square,['Array'],78.7%,Easy,5.31554%;
1726,1726. Tuple with Same Product,"['Array', 'Hash Table']",60.8%,Medium,34.9753%;
1727,1727. Largest Submatrix With Rearrangements,"['Array', 'Greedy', 'Sorting', '1+']",61.2%,Medium,29.3886%;
1728,1728. Cat and Mouse II,"['Array', 'Math', '6+']",39.9%,Hard,39.1672%;
1729,1729. Find Followers Count,['Database'],71.2%,Easy,0.795423%;
1730,1730. Shortest Path to Get Food,"['Array', 'Breadth-First Search', 'Matrix']",54.1%,Medium,44.1052%;
1731,1731. The Number of Employees Which Report to Each Employee,['Database'],49.5%,Easy,16.7825%;
1732,1732. Find the Highest Altitude,"['Array', 'Prefix Sum']",78.9%,Easy,29.9799%;
1733,1733. Minimum Number of People to Teach,"['Array', 'Greedy']",41.9%,Medium,25.1229%;
1734,1734. Decode XORed Permutation,"['Array', 'Bit Manipulation']",63.0%,Medium,0%;
1735,1735. Count Ways to Make Array With Product,"['Array', 'Math', '3+']",50.3%,Hard,0%;
1736,1736. Latest Time by Replacing Hidden Digits,"['String', 'Greedy']",42.4%,Easy,0%;
1737,1737. Change Minimum Characters to Satisfy One of Three Conditions,"['Hash Table', 'String', 'Counting', '1+']",35.3%,Medium,0%;
1738,1738. Find Kth Largest XOR Coordinate Value,"['Array', 'Divide and Conquer', '5+']",61.0%,Medium,0%;
1739,1739. Building Boxes,"['Math', 'Binary Search', 'Greedy']",52.0%,Hard,0%;
1740,1740. Find Distance in a Binary Tree,"['Hash Table', 'Tree', '3+']",69.1%,Medium,44.5955%;
1741,1741. Find Total Time Spent by Each Employee,['Database'],89.8%,Easy,31.4516%;
1742,1742. Maximum Number of Balls in a Box,"['Hash Table', 'Math', 'Counting']",73.7%,Easy,0%;
1743,1743. Restore the Array From Adjacent Pairs,"['Array', 'Hash Table']",68.6%,Medium,44.3744%;
1744,1744. Can You Eat Your Favorite Candy on Your Favorite Day?,"['Array', 'Prefix Sum']",33.0%,Medium,25.1229%;
1745,1745. Palindrome Partitioning IV,"['String', 'Dynamic Programming']",45.4%,Hard,0%;
1746,1746. Maximum Subarray Sum After One Operation,"['Array', 'Dynamic Programming']",62.3%,Medium,0%;
1747,1747. Leetflex Banned Accounts,['Database'],67.3%,Medium,16.411%;
1748,1748. Sum of Unique Elements,"['Array', 'Hash Table', 'Counting']",76.2%,Easy,34.755%;
1749,1749. Maximum Absolute Sum of Any Subarray,"['Array', 'Dynamic Programming']",58.5%,Medium,21.7064%;
1750,1750. Minimum Length of String After Deleting Similar Ends,"['Two Pointers', 'String']",43.9%,Medium,26.1833%;
1751,1751. Maximum Number of Events That Can Be Attended II,"['Array', 'Binary Search', '1+']",56.9%,Hard,23.7066%;
1752,1752. Check if Array Is Sorted and Rotated,['Array'],50.0%,Easy,60.2815%;
1753,1753. Maximum Score From Removing Stones,"['Math', 'Greedy', 'Heap (Priority Queue)']",66.6%,Medium,12.255%;
1754,1754. Largest Merge Of Two Strings,"['Two Pointers', 'String', 'Greedy']",45.8%,Medium,14.8423%;
1755,1755. Closest Subsequence Sum,"['Array', 'Two Pointers', '3+']",36.7%,Hard,22.3734%;
1756,1756. Design Most Recently Used Queue,"['Array', 'Hash Table', 'Stack', '3+']",78.5%,Medium,30.1546%;
1757,1757. Recyclable and Low Fat Products,['Database'],92.7%,Easy,43.7661%;
1758,1758. Minimum Changes To Make Alternating Binary String,['String'],58.3%,Easy,35.377%;
1759,1759. Count Number of Homogenous Substrings,"['Math', 'String']",48.4%,Medium,26.1833%;
1760,1760. Minimum Limit of Balls in a Bag,"['Array', 'Binary Search']",60.4%,Medium,28.0352%;
1761,1761. Minimum Degree of a Connected Trio in a Graph,['Graph'],41.5%,Hard,45.4669%;
1762,1762. Buildings With an Ocean View,"['Array', 'Stack', 'Monotonic Stack']",79.1%,Medium,69.0258%;
1763,1763. Longest Nice Substring,"['Hash Table', 'String', '3+']",61.6%,Easy,36.9792%;
1764,1764. Form Array by Concatenating Subarrays of Another Array,"['Array', 'Greedy', 'String Matching']",52.9%,Medium,0%;
1765,1765. Map of Highest Peak,"['Array', 'Breadth-First Search', 'Matrix']",60.2%,Medium,19.1652%;
1766,1766. Tree of Coprimes,"['Math', 'Tree', 'Depth-First Search', '1+']",39.3%,Hard,0%;
1767,1767. Find the Subtasks That Did Not Execute,['Database'],81.7%,Hard,0%;
1768,1768. Merge Strings Alternately,"['Two Pointers', 'String']",77.3%,Easy,8.87063%;
1769,1769. Minimum Number of Operations to Move All Balls to Each Box,"['Array', 'String']",85.2%,Medium,30.4717%;
1770,1770. Maximum Score from Performing Multiplication Operations,"['Array', 'Dynamic Programming']",37.3%,Hard,69.657%;
1771,1771. Maximize Palindrome Length From Subsequences,"['String', 'Dynamic Programming']",35.3%,Hard,0%;
1772,1772. Sort Features by Popularity,"['Array', 'Hash Table', 'String', '1+']",65.1%,Medium,0%;
1773,1773. Count Items Matching a Rule,"['Array', 'String']",84.4%,Easy,37.4188%;
1774,1774. Closest Dessert Cost,"['Array', 'Dynamic Programming', '1+']",47.4%,Medium,39.9269%;
1775,1775. Equal Sum Arrays With Minimum Number of Operations,"['Array', 'Hash Table', 'Greedy', '1+']",53.0%,Medium,61.0579%;
1776,1776. Car Fleet II,"['Array', 'Math', 'Stack', '2+']",53.5%,Hard,43.0099%;
1777,1777. Product's Price for Each Store,['Database'],84.2%,Easy,16.3206%;
1778,1778. Shortest Path in a Hidden Grid,"['Depth-First Search', '3+']",39.1%,Medium,0%;
1779,1779. Find Nearest Point That Has the Same X or Y Coordinate,['Array'],67.3%,Easy,22.6177%;
1780,1780. Check if Number is a Sum of Powers of Three,['Math'],65.8%,Medium,28.2872%;
1781,1781. Sum of Beauty of All Substrings,"['Hash Table', 'String', 'Counting']",60.7%,Medium,31.8191%;
1782,1782. Count Pairs Of Nodes,"['Two Pointers', 'Binary Search', 'Graph']",38.5%,Hard,0%;
1783,1783. Grand Slam Titles,['Database'],86.9%,Medium,11.5958%;
1784,1784. Check if Binary String Has at Most One Segment of Ones,['String'],40.2%,Easy,5.31554%;
1785,1785. Minimum Elements to Add to Form a Given Sum,"['Array', 'Greedy']",42.6%,Medium,0%;
1786,1786. Number of Restricted Paths From First to Last Node,"['Dynamic Programming', 'Graph', '3+']",39.3%,Medium,23.8549%;
1787,1787. Make the XOR of All Segments Equal to Zero,"['Array', 'Dynamic Programming', '1+']",39.4%,Hard,39.1672%;
1788,1788. Maximize the Beauty of the Garden,"['Array', 'Greedy', 'Prefix Sum']",66.6%,Hard,0%;
1789,1789. Primary Department for Each Employee,['Database'],79.3%,Easy,16.3206%;
1790,1790. Check if One String Swap Can Make Strings Equal,"['Hash Table', 'String', 'Counting']",45.4%,Easy,20.3678%;
1791,1791. Find Center of Star Graph,['Graph'],83.5%,Easy,19.2352%;
1792,1792. Maximum Average Pass Ratio,"['Array', 'Greedy', 'Heap (Priority Queue)']",52.3%,Medium,0%;
1793,1793. Maximum Score of a Good Subarray,"['Array', 'Two Pointers', '3+']",53.5%,Hard,48.4923%;
1794,1794. Count Pairs of Equal Substrings With Minimum Difference,"['Hash Table', 'String', 'Greedy']",65.1%,Medium,0%;
1795,1795. Rearrange Products Table,['Database'],86.9%,Easy,38.2246%;
1796,1796. Second Largest Digit in a String,"['Hash Table', 'String']",49.3%,Easy,25.8182%;
1797,1797. Design Authentication Manager,"['Hash Table', 'Design']",56.9%,Medium,29.3886%;
1798,1798. Maximum Number of Consecutive Values You Can Make,"['Array', 'Greedy']",55.6%,Medium,0%;
1799,1799. Maximize Score After N Operations,"['Array', 'Math', '5+']",46.0%,Hard,51.5342%;
1800,1800. Maximum Ascending Subarray Sum,['Array'],63.2%,Easy,5.59747%;
1801,1801. Number of Orders in the Backlog,"['Array', 'Heap (Priority Queue)', '1+']",48.2%,Medium,60.0682%;
1802,1802. Maximum Value at a Given Index in a Bounded Array,"['Binary Search', 'Greedy']",32.4%,Medium,23.7066%;
1803,1803. Count Pairs With XOR in a Range,"['Array', 'Bit Manipulation', 'Trie']",47.0%,Hard,37.6083%;
1804,1804. Implement Trie II (Prefix Tree),"['Hash Table', 'String', 'Design', '1+']",59.7%,Medium,25.5814%;
1805,1805. Number of Different Integers in a String,"['Hash Table', 'String']",36.6%,Easy,16.5253%;
1806,1806. Minimum Number of Operations to Reinitialize a Permutation,"['Array', 'Math', 'Simulation']",72.0%,Medium,0%;
1807,1807. Evaluate the Bracket Pairs of a String,"['Array', 'Hash Table', 'String']",66.6%,Medium,24.6832%;
1808,1808. Maximize Number of Nice Divisors,"['Math', 'Recursion']",31.7%,Hard,48.4923%;
1809,1809. Ad-Free Sessions,['Database'],59.1%,Easy,0%;
1810,1810. Minimum Path Cost in a Hidden Grid,"['Depth-First Search', '4+']",54.5%,Medium,0%;
1811,1811. Find Interview Candidates,['Database'],63.5%,Medium,0%;
1812,1812. Determine Color of a Chessboard Square,"['Math', 'String']",77.7%,Easy,2.56432%;
1813,1813. Sentence Similarity III,"['Array', 'Two Pointers', 'String']",33.3%,Medium,26.561%;
1814,1814. Count Nice Pairs in an Array,"['Array', 'Hash Table', 'Math', '1+']",42.0%,Medium,34.4775%;
1815,1815. Maximum Number of Groups Getting Fresh Donuts,"['Array', 'Dynamic Programming', '3+']",40.1%,Hard,39.1672%;
1816,1816. Truncate Sentence,"['Array', 'String']",82.9%,Easy,5.59747%;
1817,1817. Finding the Users Active Minutes,"['Array', 'Hash Table']",80.4%,Medium,27.3577%;
1818,1818. Minimum Absolute Sum Difference,"['Array', 'Binary Search', 'Sorting', '1+']",30.3%,Medium,14.194%;
1819,1819. Number of Different Subsequences GCDs,"['Array', 'Math', 'Counting', '1+']",39.0%,Hard,48.4923%;
1820,1820. Maximum Number of Accepted Invitations,"['Array', 'Backtracking', 'Matrix']",49.5%,Medium,0%;
1821,1821. Find Customers With Positive Revenue this Year,['Database'],89.2%,Easy,11.5958%;
1822,1822. Sign of the Product of an Array,"['Array', 'Math']",65.3%,Easy,13.5139%;
1823,1823. Find the Winner of the Circular Game,"['Array', 'Math', 'Recursion', '2+']",78.2%,Medium,67.2177%;
1824,1824. Minimum Sideway Jumps,"['Array', 'Dynamic Programming', 'Greedy']",49.4%,Medium,14.194%;
1825,1825. Finding MK Average,"['Design', 'Queue', '3+']",35.6%,Hard,35.377%;
1826,1826. Faulty Sensor,"['Array', 'Two Pointers']",49.7%,Easy,0%;
1827,1827. Minimum Operations to Make the Array Increasing,"['Array', 'Greedy']",78.3%,Easy,24.7184%;
1828,1828. Queries on Number of Points Inside a Circle,"['Array', 'Math', 'Geometry']",86.3%,Medium,18.561%;
1829,1829. Maximum XOR for Each Query,"['Array', 'Bit Manipulation', 'Prefix Sum']",76.7%,Medium,7.52368%;
1830,1830. Minimum Number of Operations to Make String Sorted,"['Math', 'String', 'Combinatorics']",49.1%,Hard,27.3577%;
1831,1831. Maximum Transaction Each Day,['Database'],83.3%,Medium,0%;
1832,1832. Check if the Sentence Is Pangram,"['Hash Table', 'String']",83.6%,Easy,55.5923%;
1833,1833. Maximum Ice Cream Bars,"['Array', 'Greedy', 'Sorting']",74.0%,Medium,78.4786%;
1834,1834. Single-Threaded CPU,"['Array', 'Sorting', 'Heap (Priority Queue)']",45.8%,Medium,73.3642%;
1835,1835. Find XOR Sum of All Pairs Bitwise AND,"['Array', 'Math', 'Bit Manipulation']",60.7%,Hard,51.3224%;
1836,1836. Remove Duplicates From an Unsorted Linked List,"['Hash Table', 'Linked List']",70.5%,Medium,52.5867%;
1837,1837. Sum of Digits in Base K,['Math'],77.0%,Easy,19.8115%;
1838,1838. Frequency of the Most Frequent Element,"['Array', 'Binary Search', 'Greedy', '3+']",39.2%,Medium,43.287%;
1839,1839. Longest Substring Of All Vowels in Order,"['String', 'Sliding Window']",48.6%,Medium,36.517%;
1840,1840. Maximum Building Height,"['Array', 'Math']",35.5%,Hard,43.0099%;
1841,1841. League Statistics,['Database'],55.5%,Medium,27.6365%;
1842,1842. Next Palindrome Using Same Digits,"['Two Pointers', 'String']",53.1%,Hard,37.7722%;
1843,1843. Suspicious Bank Accounts,['Database'],47.3%,Medium,0%;
1844,1844. Replace All Digits with Characters,['String'],80.2%,Easy,10.9728%;
1845,1845. Seat Reservation Manager,"['Design', 'Heap (Priority Queue)']",65.6%,Medium,17.6292%;
1846,1846. Maximum Element After Decreasing and Rearranging,"['Array', 'Greedy', 'Sorting']",58.9%,Medium,31.6547%;
1847,1847. Closest Room,"['Array', 'Binary Search', 'Sorting']",35.6%,Hard,0%;
1848,1848. Minimum Distance to the Target Element,['Array'],57.9%,Easy,13.1611%;
1849,1849. Splitting a String Into Descending Consecutive Values,"['String', 'Backtracking']",33.1%,Medium,0%;
1850,1850. Minimum Adjacent Swaps to Reach the Kth Smallest Number,"['Two Pointers', 'String', 'Greedy']",71.8%,Medium,23.0875%;
1851,1851. Minimum Interval to Include Each Query,"['Array', 'Binary Search', '3+']",48.2%,Hard,40.4769%;
1852,1852. Distinct Numbers in Each Subarray,"['Array', 'Hash Table', 'Sliding Window']",71.2%,Medium,31.6547%;
1853,1853. Convert Date Format,['Database'],86.7%,Easy,0%;
1854,1854. Maximum Population Year,"['Array', 'Counting']",60.0%,Easy,52.4167%;
1855,1855. Maximum Distance Between a Pair of Values,"['Array', 'Two Pointers', '2+']",53.1%,Medium,3.94715%;
1856,1856. Maximum Subarray Min-Product,"['Array', 'Stack', 'Monotonic Stack', '1+']",37.9%,Medium,41.2206%;
1857,1857. Largest Color Value in a Directed Graph,"['Hash Table', '5+']",40.8%,Hard,36.222%;
1858,1858. Longest Word With All Prefixes,"['Depth-First Search', 'Trie']",67.0%,Medium,0%;
1859,1859. Sorting the Sentence,"['String', 'Sorting']",84.1%,Easy,22.2213%;
1860,1860. Incremental Memory Leak,['Simulation'],71.6%,Medium,20.3521%;
1861,1861. Rotating the Box,"['Array', 'Two Pointers', 'Matrix']",65.3%,Medium,49.5817%;
1862,1862. Sum of Floored Pairs,"['Array', 'Math', 'Binary Search', '1+']",28.1%,Hard,39.1672%;
1863,1863. Sum of All Subset XOR Totals,"['Array', 'Math', 'Backtracking', '2+']",79.9%,Easy,30.1546%;
1864,1864. Minimum Number of Swaps to Make the Binary String Alternating,"['String', 'Greedy']",42.8%,Medium,35.9339%;
1865,1865. Finding Pairs With a Certain Sum,"['Array', 'Hash Table', 'Design']",50.3%,Medium,56.3747%;
1866,1866. Number of Ways to Rearrange Sticks With K Sticks Visible,"['Math', 'Dynamic Programming', '1+']",55.6%,Hard,26.561%;
1867,1867. Orders With Maximum Quantity Above Average,['Database'],73.8%,Medium,0%;
1868,1868. Product of Two Run-Length Encoded Arrays,"['Array', 'Two Pointers']",57.7%,Medium,14.194%;
1869,1869. Longer Contiguous Segments of Ones than Zeros,['String'],60.4%,Easy,7.79914%;
1870,1870. Minimum Speed to Arrive on Time,"['Array', 'Binary Search']",38.3%,Medium,16.5253%;
1871,1871. Jump Game VII,"['Two Pointers', 'String', 'Prefix Sum']",25.1%,Medium,30.9747%;
1872,1872. Stone Game VIII,"['Array', 'Math', '3+']",52.7%,Hard,0%;
1873,1873. Calculate Special Bonus,['Database'],59.9%,Easy,37.038%;
1874,1874. Minimize Product Sum of Two Arrays,"['Array', 'Greedy', 'Sorting']",90.1%,Medium,0%;
1875,1875. Group Employees of the Same Salary,['Database'],73.5%,Medium,13.0414%;
1876,1876. Substrings of Size Three with Distinct Characters,"['Hash Table', 'String', '2+']",71.1%,Easy,18.6777%;
1877,1877. Minimize Maximum Pair Sum in Array,"['Array', 'Two Pointers', 'Greedy', '1+']",79.9%,Medium,40.9451%;
1878,1878. Get Biggest Three Rhombus Sums in a Grid,"['Array', 'Math', 'Sorting', '3+']",47.1%,Medium,39.1672%;
1879,1879. Minimum XOR Sum of Two Arrays,"['Array', 'Dynamic Programming', '2+']",45.0%,Hard,37.6083%;
1880,1880. Check if Word Equals Summation of Two Words,['String'],73.9%,Easy,13.4532%;
1881,1881. Maximum Value after Insertion,"['String', 'Greedy']",36.8%,Medium,18.4503%;
1882,1882. Process Tasks Using Servers,"['Array', 'Heap (Priority Queue)']",39.5%,Medium,25.1229%;
1883,1883. Minimum Skips to Arrive at Meeting On Time,"['Array', 'Dynamic Programming']",38.2%,Hard,0%;
1884,1884. Egg Drop With 2 Eggs and N Floors,"['Math', 'Dynamic Programming']",70.8%,Medium,59.6525%;
1885,1885. Count Pairs in Two Arrays,"['Array', 'Binary Search', 'Sorting']",59.4%,Medium,0%;
1886,1886. Determine Whether Matrix Can Be Obtained By Rotation,"['Array', 'Matrix']",55.8%,Easy,22.9675%;
1887,1887. Reduction Operations to Make the Array Elements Equal,"['Array', 'Sorting']",62.5%,Medium,30.1546%;
1888,1888. Minimum Number of Flips to Make the Binary String Alternating,"['String', 'Dynamic Programming', '2+']",38.8%,Medium,33.6722%;
1889,1889. Minimum Space Wasted From Packaging,"['Array', 'Binary Search', 'Sorting', '1+']",31.2%,Hard,36.7581%;
1890,1890. The Latest Login in 2020,['Database'],79.0%,Easy,4.24561%;
1891,1891. Cutting Ribbons,"['Array', 'Binary Search']",48.3%,Medium,34.9753%;
1892,1892. Page Recommendations II,['Database'],43.6%,Hard,0%;
1893,1893. Check if All the Integers in a Range Are Covered,"['Array', 'Hash Table', 'Prefix Sum']",50.4%,Easy,26.561%;
1894,1894. Find the Student that Will Replace the Chalk,"['Array', 'Binary Search', 'Simulation', '1+']",44.3%,Medium,3.94715%;
1895,1895. Largest Magic Square,"['Array', 'Matrix', 'Prefix Sum']",52.0%,Medium,40.7349%;
1896,1896. Minimum Cost to Change the Final Value of Expression,"['Math', 'String', '2+']",54.7%,Hard,0%;
1897,1897. Redistribute Characters to Make All Strings Equal,"['Hash Table', 'String', 'Counting']",59.6%,Easy,0%;
1898,1898. Maximum Number of Removable Characters,"['Array', 'String', 'Binary Search']",40.5%,Medium,22.46%;
1899,1899. Merge Triplets to Form Target Triplet,"['Array', 'Greedy']",64.6%,Medium,21.7064%;
1900,1900. The Earliest and Latest Rounds Where Players Compete,"['Dynamic Programming', 'Memoization']",51.7%,Hard,0%;
1901,1901. Find a Peak Element II,"['Array', 'Binary Search', 'Matrix']",52.4%,Medium,33.7906%;
1902,1902. Depth of BST Given Insertion Order,"['Tree', 'Binary Search Tree', '2+']",44.5%,Medium,0%;
1903,1903. Largest Odd Number in String,"['Math', 'String', 'Greedy']",56.0%,Easy,20.6735%;
1904,1904. The Number of Full Rounds You Have Played,"['Math', 'String']",44.9%,Medium,28.8262%;
1905,1905. Count Sub Islands,"['Array', 'Depth-First Search', '3+']",67.6%,Medium,25.1229%;
1906,1906. Minimum Absolute Difference Queries,"['Array', 'Hash Table']",43.9%,Medium,26.561%;
1907,1907. Count Salary Categories,['Database'],63.6%,Medium,0%;
1908,1908. Game of Nim,"['Array', 'Math', '4+']",64.5%,Medium,40.7349%;
1909,1909. Remove One Element to Make the Array Strictly Increasing,['Array'],26.0%,Easy,50.6864%;
1910,1910. Remove All Occurrences of a Substring,['String'],74.5%,Medium,44.504%;
1911,1911. Maximum Alternating Subsequence Sum,"['Array', 'Dynamic Programming']",59.3%,Medium,33.8438%;
1912,1912. Design Movie Rental System,"['Array', 'Hash Table', 'Design', '2+']",39.9%,Hard,17.1707%;
1913,1913. Maximum Product Difference Between Two Pairs,"['Array', 'Sorting']",81.3%,Easy,36.2756%;
1914,1914. Cyclically Rotating a Grid,"['Array', 'Matrix', 'Simulation']",48.3%,Medium,43.0099%;
1915,1915. Number of Wonderful Substrings,"['Hash Table', 'String', '2+']",45.4%,Medium,30.1546%;
1916,1916. Count Ways to Build Rooms in an Ant Colony,"['Math', 'Dynamic Programming', '4+']",49.4%,Hard,56.3621%;
1917,1917. Leetcodify Friends Recommendations,['Database'],28.2%,Hard,0%;
1918,1918. Kth Smallest Subarray Sum,"['Array', 'Binary Search', 'Sliding Window']",52.6%,Medium,44.5955%;
1919,1919. Leetcodify Similar Friends,['Database'],43.0%,Hard,0%;
1920,1920. Build Array from Permutation,"['Array', 'Simulation']",90.3%,Easy,59.6429%;
1921,1921. Eliminate Maximum Number of Monsters,"['Array', 'Greedy', 'Sorting']",37.4%,Medium,27.8646%;
1922,1922. Count Good Numbers,"['Math', 'Recursion']",39.7%,Medium,52.9754%;
1923,1923. Longest Common Subpath,"['Array', 'Binary Search', '3+']",27.7%,Hard,49.0476%;
1924,1924. Erect the Fence II,"['Array', 'Math', 'Geometry']",53.1%,Hard,0%;
1925,1925. Count Square Sum Triples,"['Math', 'Enumeration']",68.1%,Easy,15.386%;
1926,1926. Nearest Exit from Entrance in Maze,"['Array', 'Breadth-First Search', 'Matrix']",48.8%,Medium,59.7883%;
1927,1927. Sum Game,"['Math', 'Greedy', 'Game Theory']",46.8%,Medium,37.7722%;
1928,1928. Minimum Cost to Reach Destination in Time,"['Dynamic Programming', 'Graph']",37.8%,Hard,0%;
1929,1929. Concatenation of Array,['Array'],90.3%,Easy,56.0621%;
1930,1930. Unique Length-3 Palindromic Subsequences,"['Hash Table', 'String', 'Prefix Sum']",52.0%,Medium,27.6365%;
1931,1931. Painting a Grid With Three Different Colors,['Dynamic Programming'],57.1%,Hard,0%;
1932,1932. Merge BSTs to Create Single BST,"['Hash Table', 'Binary Search', 'Tree', '2+']",35.5%,Hard,63.8611%;
1933,1933. Check if String Is Decomposable Into Value-Equal Substrings,['String'],50.4%,Easy,0%;
1934,1934. Confirmation Rate,['Database'],76.5%,Medium,19.4164%;
1935,1935. Maximum Number of Words You Can Type,"['Hash Table', 'String']",71.5%,Easy,0%;
1936,1936. Add Minimum Number of Rungs,"['Array', 'Greedy']",42.7%,Medium,0%;
1937,1937. Maximum Number of Points with Cost,"['Array', 'Dynamic Programming']",36.1%,Medium,54.5896%;
1938,1938. Maximum Genetic Difference Query,"['Array', 'Bit Manipulation', 'Trie']",39.6%,Hard,0%;
1939,1939. Users That Actively Request Confirmation Messages,['Database'],59.3%,Easy,16.3206%;
1940,1940. Longest Common Subsequence Between Sorted Arrays,"['Array', 'Hash Table', 'Counting']",79.1%,Medium,0%;
1941,1941. Check if All Characters Have Equal Number of Occurrences,"['Hash Table', 'String', 'Counting']",76.8%,Easy,19.1198%;
1942,1942. The Number of the Smallest Unoccupied Chair,"['Array', 'Heap (Priority Queue)', '1+']",40.6%,Medium,23.2741%;
1943,1943. Describe the Painting,"['Array', 'Prefix Sum']",48.2%,Medium,0%;
1944,1944. Number of Visible People in a Queue,"['Array', 'Stack', 'Monotonic Stack']",69.2%,Hard,53.8482%;
1945,1945. Sum of Digits of String After Convert,"['String', 'Simulation']",61.3%,Easy,22.7242%;
1946,1946. Largest Number After Mutating Substring,"['Array', 'String', 'Greedy']",34.9%,Medium,0%;
1947,1947. Maximum Compatibility Score Sum,"['Array', 'Dynamic Programming', '3+']",61.0%,Medium,32.809%;
1948,1948. Delete Duplicate Folders in System,"['Array', 'Hash Table', 'String', '2+']",56.7%,Hard,36.222%;
1949,1949. Strong Friendship,['Database'],56.5%,Medium,0%;
1950,1950. Maximum of Minimum Values in All Subarrays,"['Array', 'Stack', 'Monotonic Stack']",49.8%,Medium,0%;
1951,1951. All the Pairs With the Maximum Number of Common Followers,['Database'],71.2%,Medium,10.4038%;
1952,1952. Three Divisors,['Math'],58.1%,Easy,12.5261%;
1953,1953. Maximum Number of Weeks for Which You Can Work,"['Array', 'Greedy']",39.3%,Medium,15.5482%;
1954,1954. Minimum Garden Perimeter to Collect Enough Apples,"['Math', 'Binary Search']",53.3%,Medium,14.194%;
1955,1955. Count Number of Special Subsequences,"['Array', 'Dynamic Programming']",51.3%,Hard,30.1546%;
1956,1956. Minimum Time For K Virus Variants to Spread,"['Array', 'Math', 'Binary Search', '2+']",48.0%,Hard,0%;
1957,1957. Delete Characters to Make Fancy String,['String'],57.0%,Easy,12.255%;
1958,1958. Check if Move is Legal,"['Array', 'Matrix', 'Enumeration']",45.4%,Medium,51.5342%;
1959,1959. Minimum Total Space Wasted With K Resizing Operations,"['Array', 'Dynamic Programming']",42.3%,Medium,25.1229%;
1960,1960. Maximum Product of the Length of Two Palindromic Substrings,"['String', 'Rolling Hash', 'Hash Function']",29.8%,Hard,74.8145%;
1961,1961. Check If String Is a Prefix of Array,"['Array', 'String']",53.5%,Easy,32.3232%;
1962,1962. Remove Stones to Minimize the Total,"['Array', 'Heap (Priority Queue)']",60.2%,Medium,69.0482%;
1963,1963. Minimum Number of Swaps to Make the String Balanced,"['Two Pointers', 'String', 'Stack', '1+']",69.2%,Medium,56.2988%;
1964,1964. Find the Longest Valid Obstacle Course at Each Position,"['Array', 'Binary Search', '1+']",47.2%,Hard,0%;
1965,1965. Employees With Missing Information,['Database'],75.7%,Easy,27.0522%;
1966,1966. Binary Searchable Numbers in an Unsorted Array,"['Array', 'Binary Search']",65.4%,Medium,0%;
1967,1967. Number of Strings That Appear as Substrings in Word,['String'],80.1%,Easy,9.88172%;
1968,1968. Array With Elements Not Equal to Average of Neighbors,"['Array', 'Greedy', 'Sorting']",49.5%,Medium,16.7825%;
1969,1969. Minimum Non-Zero Product of the Array Elements,"['Math', 'Greedy', 'Recursion']",34.2%,Medium,37.6083%;
1970,1970. Last Day Where You Can Still Cross,"['Array', 'Binary Search', '4+']",49.6%,Hard,51.5342%;
1971,1971. Find if Path Exists in Graph,"['Depth-First Search', '3+']",52.1%,Easy,56.3242%;
1972,1972. First and Last Call On the Same Day,['Database'],52.3%,Hard,25.1229%;
1973,1973. Count Nodes Equal to Sum of Descendants,"['Tree', 'Depth-First Search', '2+']",75.1%,Medium,0%;
1974,1974. Minimum Time to Type Word Using Special Typewriter,"['String', 'Greedy']",72.3%,Easy,25.9627%;
1975,1975. Maximum Matrix Sum,"['Array', 'Greedy', 'Matrix']",48.3%,Medium,34.9753%;
1976,1976. Number of Ways to Arrive at Destination,"['Dynamic Programming', 'Graph', '2+']",31.0%,Medium,41.6812%;
1977,1977. Number of Ways to Separate Numbers,"['String', 'Dynamic Programming', '1+']",21.0%,Hard,53.5314%;
1978,1978. Employees Whose Manager Left the Company,['Database'],50.0%,Easy,0%;
1979,1979. Find Greatest Common Divisor of Array,"['Array', 'Math', 'Number Theory']",76.9%,Easy,18.7563%;
1980,1980. Find Unique Binary String,"['Array', 'String', 'Backtracking']",65.1%,Medium,30.6836%;
1981,1981. Minimize the Difference Between Target and Chosen Elements,"['Array', 'Dynamic Programming', 'Matrix']",32.4%,Medium,23.8549%;
1982,1982. Find Array Given Subset Sums,"['Array', 'Divide and Conquer']",48.5%,Hard,67.8425%;
1983,1983. Widest Pair of Indices With Equal Range Sum,"['Array', 'Hash Table', 'Prefix Sum']",54.2%,Medium,0%;
1984,1984. Minimum Difference Between Highest and Lowest of K Scores,"['Array', 'Sliding Window', 'Sorting']",54.4%,Easy,24.2738%;
1985,1985. Find the Kth Largest Integer in the Array,"['Array', 'String', '4+']",44.5%,Medium,34.928%;
1986,1986. Minimum Number of Work Sessions to Finish the Tasks,"['Array', 'Dynamic Programming', '3+']",32.7%,Medium,38.3795%;
1987,1987. Number of Unique Good Subsequences,"['String', 'Dynamic Programming']",52.2%,Hard,33.8438%;
1988,1988. Find Cutoff Score for Each School,['Database'],68.7%,Medium,0%;
1989,1989. Maximum Number of People That Can Be Caught in Tag,"['Array', 'Greedy']",52.3%,Medium,0%;
1990,1990. Count the Number of Experiments,['Database'],51.2%,Medium,14.194%;
1991,1991. Find the Middle Index in Array,"['Array', 'Prefix Sum']",67.4%,Easy,23.0875%;
1992,1992. Find All Groups of Farmland,"['Array', 'Depth-First Search', '2+']",68.7%,Medium,15.7137%;
1993,1993. Operations on Tree,"['Hash Table', 'Tree', '3+']",44.1%,Medium,52.4167%;
1994,1994. The Number of Good Subsets,"['Array', 'Math', '3+']",34.7%,Hard,60.7791%;
1995,1995. Count Special Quadruplets,"['Array', 'Enumeration']",59.7%,Easy,32.0616%;
1996,1996. The Number of Weak Characters in the Game,"['Array', 'Stack', 'Greedy', '2+']",44.0%,Medium,32.483%;
1997,1997. First Day Where You Have Been in All the Rooms,"['Array', 'Dynamic Programming']",36.9%,Medium,0%;
1998,1998. GCD Sort of an Array,"['Array', 'Math', 'Union Find', '1+']",45.6%,Hard,49.0476%;
1999,1999. Smallest Greater Multiple Made of Two Digits,"['Math', 'Enumeration']",49.5%,Medium,0%;
2000,2000. Reverse Prefix of Word,"['Two Pointers', 'String']",78.5%,Easy,10.701%;
2001,2001. Number of Pairs of Interchangeable Rectangles,"['Array', 'Hash Table', 'Math', '2+']",46.0%,Medium,16.0551%;
2002,2002. Maximum Product of the Length of Two Palindromic Subsequences,"['String', 'Dynamic Programming', '3+']",54.4%,Medium,48.4923%;
2003,2003. Smallest Missing Genetic Value in Each Subtree,"['Dynamic Programming', 'Tree', '2+']",44.6%,Hard,33.8438%;
2004,2004. The Number of Seniors and Juniors to Join the Company,['Database'],40.2%,Hard,36.222%;
2005,2005. Subtree Removal Game with Fibonacci Tree,"['Math', 'Dynamic Programming', '3+']",63.5%,Hard,0%;
2006,2006. Count Number of Pairs With Absolute Difference K,"['Array', 'Hash Table', 'Counting']",82.7%,Easy,27.4962%;
2007,2007. Find Original Array From Doubled Array,"['Array', 'Hash Table', 'Greedy', '1+']",40.7%,Medium,75.6001%;
2008,2008. Maximum Earnings From Taxi,"['Array', 'Binary Search', '2+']",43.5%,Medium,43.287%;
2009,2009. Minimum Number of Operations to Make Array Continuous,"['Array', 'Binary Search']",45.6%,Hard,58.2661%;
2010,2010. The Number of Seniors and Juniors to Join the Company II,['Database'],59.7%,Hard,0%;
2011,2011. Final Value of Variable After Performing Operations,"['Array', 'String', 'Simulation']",88.7%,Easy,15.5893%;
2012,2012. Sum of Beauty in the Array,['Array'],46.9%,Medium,50.8759%;
2013,2013. Detect Squares,"['Array', 'Hash Table', 'Design', '1+']",50.3%,Medium,53.4703%;
2014,2014. Longest Subsequence Repeated k Times,"['String', 'Backtracking', 'Greedy', '2+']",55.6%,Hard,40.7349%;
2015,2015. Average Height of Buildings in Each Segment,"['Array', 'Greedy', 'Sorting', '1+']",58.9%,Medium,0%;
2016,2016. Maximum Difference Between Increasing Elements,['Array'],54.2%,Easy,47.5214%;
2017,2017. Grid Game,"['Array', 'Matrix', 'Prefix Sum']",43.6%,Medium,9.40064%;
2018,2018. Check if Word Can Be Placed In Crossword,"['Array', 'Matrix', 'Enumeration']",49.4%,Medium,45.1464%;
2019,2019. The Score of Students Solving Math Expression,"['Array', 'Math', 'String', '3+']",33.8%,Hard,0%;
2020,2020. Number of Accounts That Did Not Stream,['Database'],73.4%,Medium,16.3206%;
2021,2021. Brightest Position on Street,"['Array', 'Prefix Sum', 'Ordered Set']",62.3%,Medium,59.7433%;
2022,2022. Convert 1D Array Into 2D Array,"['Array', 'Matrix', 'Simulation']",59.0%,Easy,11.3816%;
2023,2023. Number of Pairs of Strings With Concatenation Equal to Target,"['Array', 'String']",73.3%,Medium,48.9008%;
2024,2024. Maximize the Confusion of an Exam,"['String', 'Binary Search', '2+']",60.3%,Medium,25.6189%;
2025,2025. Maximum Number of Ways to Partition an Array,"['Array', 'Hash Table', 'Counting', '2+']",32.8%,Hard,64.1404%;
2026,2026. Low-Quality Problems,['Database'],84.9%,Easy,0%;
2027,2027. Minimum Moves to Convert String,"['String', 'Greedy']",53.9%,Easy,0%;
2028,2028. Find Missing Observations,"['Array', 'Math', 'Simulation']",44.5%,Medium,52.2824%;
2029,2029. Stone Game IX,"['Array', 'Math', 'Greedy', '2+']",26.6%,Medium,40.9451%;
2030,2030. Smallest K-Length Subsequence With Occurrences of a Letter,"['String', 'Stack', 'Greedy', '1+']",38.8%,Hard,23.2741%;
2031,2031. Count Subarrays With More Ones Than Zeros,"['Array', 'Binary Search', '5+']",51.8%,Medium,0%;
2032,2032. Two Out of Three,"['Array', 'Hash Table']",73.5%,Easy,19.4368%;
2033,2033. Minimum Operations to Make a Uni-Value Grid,"['Array', 'Math', 'Sorting', '1+']",52.4%,Medium,0%;
2034,2034. Stock Price Fluctuation,"['Hash Table', 'Design', '3+']",48.9%,Medium,56.4344%;
2035,2035. Partition Array Into Two Arrays to Minimize Sum Difference,"['Array', 'Two Pointers', '5+']",18.8%,Hard,77.3836%;
2036,2036. Maximum Alternating Subarray Sum,"['Array', 'Dynamic Programming']",40.9%,Medium,0%;
2037,2037. Minimum Number of Moves to Seat Everyone,"['Array', 'Sorting']",82.1%,Easy,26.6092%;
2038,2038. Remove Colored Pieces if Both Neighbors are the Same Color,"['Math', 'String', 'Greedy', '1+']",58.0%,Medium,64.4193%;
2039,2039. The Time When the Network Becomes Idle,"['Array', 'Breadth-First Search', 'Graph']",51.0%,Medium,0%;
2040,2040. Kth Smallest Product of Two Sorted Arrays,"['Array', 'Binary Search']",28.9%,Hard,35.9111%;
2041,2041. Accepted Candidates From the Interviews,['Database'],79.2%,Medium,0%;
2042,2042. Check if Numbers Are Ascending in a Sentence,['String'],67.2%,Easy,3.03287%;
2043,2043. Simple Bank System,"['Array', 'Hash Table', 'Design', '1+']",65.3%,Medium,16.0551%;
2044,2044. Count Number of Maximum Bitwise-OR Subsets,"['Array', 'Backtracking', 'Bit Manipulation']",75.5%,Medium,0%;
2045,2045. Second Minimum Time to Reach Destination,"['Breadth-First Search', 'Graph', '1+']",39.2%,Hard,52.4167%;
2046,2046. Sort Linked List Already Sorted Using Absolute Values,"['Linked List', 'Two Pointers', 'Sorting']",68.7%,Medium,25.1229%;
2047,2047. Number of Valid Words in a Sentence,['String'],29.4%,Easy,23.2741%;
2048,2048. Next Greater Numerically Balanced Number,"['Math', 'Backtracking', 'Enumeration']",47.3%,Medium,0%;
2049,2049. Count Nodes With the Highest Score,"['Array', 'Tree', 'Depth-First Search', '1+']",47.6%,Medium,43.287%;
2050,2050. Parallel Courses III,"['Dynamic Programming', 'Graph', '1+']",59.2%,Hard,37.8805%;
2051,2051. The Category of Each Member in the Store,['Database'],71.6%,Medium,0%;
2052,2052. Minimum Cost to Separate Sentence Into Rows,"['Array', 'Dynamic Programming']",50.1%,Medium,0%;
2053,2053. Kth Distinct String in an Array,"['Array', 'Hash Table', 'String', '1+']",72.1%,Easy,6.31735%;
2054,2054. Two Best Non-Overlapping Events,"['Array', 'Binary Search', '3+']",45.2%,Medium,19.9398%;
2055,2055. Plates Between Candles,"['Array', 'String', 'Binary Search', '1+']",44.6%,Medium,56.8418%;
2056,2056. Number of Valid Move Combinations On Chessboard,"['Array', 'String', 'Backtracking', '1+']",58.1%,Hard,39.1672%;
2057,2057. Smallest Index With Equal Value,['Array'],71.5%,Easy,8.60197%;
2058,2058. Find the Minimum and Maximum Number of Nodes Between Critical Points,['Linked List'],57.1%,Medium,15.386%;
2059,2059. Minimum Operations to Convert Number,"['Array', 'Breadth-First Search']",47.7%,Medium,19.1652%;
2060,2060. Check if an Original String Exists Given Two Encoded Strings,"['String', 'Dynamic Programming']",40.9%,Hard,0%;
2061,2061. Number of Spaces Cleaning Robot Cleaned,"['Array', 'Matrix', 'Simulation']",54.6%,Medium,25.1229%;
2062,2062. Count Vowel Substrings of a String,"['Hash Table', 'String']",66.0%,Easy,56.5805%;
2063,2063. Vowels of All Substrings,"['Math', 'String', '2+']",54.7%,Medium,0%;
2064,2064. Minimized Maximum of Products Distributed to Any Store,"['Array', 'Binary Search']",50.7%,Medium,18.3648%;
2065,2065. Maximum Path Quality of a Graph,"['Array', 'Backtracking', 'Graph']",57.3%,Hard,62.5126%;
2066,2066. Account Balance,['Database'],84.7%,Medium,0%;
2067,2067. Number of Equal Count Substrings,"['String', 'Counting', 'Prefix Sum']",48.4%,Medium,0%;
2068,2068. Check Whether Two Strings are Almost Equivalent,"['Hash Table', 'String', 'Counting']",64.4%,Easy,75.7727%;
2069,2069. Walking Robot Simulation II,"['Design', 'Simulation']",23.1%,Medium,27.6365%;
2070,2070. Most Beautiful Item for Each Query,"['Array', 'Binary Search', 'Sorting']",49.5%,Medium,0%;
2071,2071. Maximum Number of Tasks You Can Assign,"['Array', 'Binary Search', 'Greedy', '3+']",34.0%,Hard,19.1652%;
2072,2072. The Winner University,['Database'],72.6%,Easy,0%;
2073,2073. Time Needed to Buy Tickets,"['Array', 'Queue', 'Simulation']",62.3%,Easy,24.8733%;
2074,2074. Reverse Nodes in Even Length Groups,['Linked List'],53.4%,Medium,13.6599%;
2075,2075. Decode the Slanted Ciphertext,"['String', 'Simulation']",50.3%,Medium,43.0099%;
2076,2076. Process Restricted Friend Requests,"['Union Find', 'Graph']",53.3%,Hard,21.7064%;
2077,2077. Paths in Maze That Lead to Same Room,['Graph'],55.4%,Medium,0%;
2078,2078. Two Furthest Houses With Different Colors,"['Array', 'Greedy']",67.1%,Easy,15.7137%;
2079,2079. Watering Plants,['Array'],80.0%,Medium,17.1707%;
2080,2080. Range Frequency Queries,"['Array', 'Hash Table', '3+']",38.6%,Medium,28.6705%;
2081,2081. Sum of k-Mirror Numbers,"['Math', 'Enumeration']",42.0%,Hard,25.1229%;
2082,2082. The Number of Rich Customers,['Database'],79.8%,Easy,0%;
2083,2083. Substrings That Begin and End With the Same Letter,"['Hash Table', 'Math', 'String', '2+']",67.8%,Medium,0%;
2084,2084. Drop Type 1 Orders for Customers With Type 0 Orders,['Database'],88.8%,Medium,0%;
2085,2085. Count Common Words With One Occurrence,"['Array', 'Hash Table', 'String', '1+']",70.0%,Easy,18.7296%;
2086,2086. Minimum Number of Food Buckets to Feed the Hamsters,"['String', 'Dynamic Programming', 'Greedy']",44.9%,Medium,0%;
2087,2087. Minimum Cost Homecoming of a Robot in a Grid,"['Array', 'Greedy', 'Matrix']",51.1%,Medium,43.287%;
2088,2088. Count Fertile Pyramids in a Land,"['Array', 'Dynamic Programming', 'Matrix']",63.7%,Hard,27.3577%;
2089,2089. Find Target Indices After Sorting Array,"['Array', 'Binary Search', 'Sorting']",76.4%,Easy,19.8115%;
2090,2090. K Radius Subarray Averages,"['Array', 'Sliding Window']",42.7%,Medium,18.4503%;
2091,2091. Removing Minimum and Maximum From Array,"['Array', 'Greedy']",56.0%,Medium,38.3732%;
2092,2092. Find All People With Secret,"['Depth-First Search', '4+']",34.2%,Hard,27.3577%;
2093,2093. Minimum Cost to Reach City With Discounts,"['Graph', 'Shortest Path']",56.2%,Medium,0%;
2094,2094. Finding 3-Digit Even Numbers,"['Array', 'Hash Table', 'Sorting', '1+']",57.7%,Easy,25.6401%;
2095,2095. Delete the Middle Node of a Linked List,"['Linked List', 'Two Pointers']",59.6%,Medium,58.7036%;
2096,2096. Step-By-Step Directions From a Binary Tree Node to Another,"['String', 'Tree', 'Depth-First Search', '1+']",48.5%,Medium,60.3062%;
2097,2097. Valid Arrangement of Pairs,"['Depth-First Search', 'Graph', '1+']",41.2%,Hard,37.6083%;
2098,2098. Subsequence of Size K With the Largest Even Sum,"['Array', 'Greedy', 'Sorting']",38.3%,Medium,0%;
2099,2099. Find Subsequence of Length K With the Largest Sum,"['Array', 'Hash Table', 'Sorting', '1+']",42.9%,Easy,26.0702%;
2100,2100. Find Good Days to Rob the Bank,"['Array', 'Dynamic Programming', '1+']",49.2%,Medium,31.6547%;
2101,2101. Detonate the Maximum Bombs,"['Array', 'Math', 'Depth-First Search', '3+']",42.0%,Medium,48.9226%;
2102,2102. Sequentially Ordinal Rank Tracker,"['Design', 'Heap (Priority Queue)', '2+']",65.9%,Hard,37.6083%;
2103,2103. Rings and Rods,"['Hash Table', 'String']",81.4%,Easy,2.21553%;
2104,2104. Sum of Subarray Ranges,"['Array', 'Stack', 'Monotonic Stack']",60.3%,Medium,50.3716%;
2105,2105. Watering Plants II,"['Array', 'Two Pointers', 'Simulation']",49.6%,Medium,7.57268%;
2106,2106. Maximum Fruits Harvested After at Most K Steps,"['Array', 'Binary Search', '2+']",35.3%,Hard,39.1672%;
2107,2107. Number of Unique Flavors After Sharing K Candies,"['Array', 'Hash Table', 'Sliding Window']",56.2%,Medium,27.3577%;
2108,2108. Find First Palindromic String in the Array,"['Array', 'Two Pointers', 'String']",78.7%,Easy,17.7477%;
2109,2109. Adding Spaces to a String,"['Array', 'String', 'Simulation']",56.5%,Medium,18.3648%;
2110,2110. Number of Smooth Descent Periods of a Stock,"['Array', 'Math', 'Dynamic Programming']",57.7%,Medium,18.9207%;
2111,2111. Minimum Operations to Make the Array K-Increasing,"['Array', 'Binary Search']",37.6%,Hard,23.2741%;
2112,2112. The Airport With the Most Traffic,['Database'],70.9%,Medium,0%;
2113,2113. Elements in Array After Removing and Replacing Elements,['Array'],73.2%,Medium,0%;
2114,2114. Maximum Number of Words Found in Sentences,"['Array', 'String']",87.3%,Easy,26.3503%;
2115,2115. Find All Possible Recipes from Given Supplies,"['Array', 'Hash Table', 'String', '2+']",48.5%,Medium,52.0342%;
2116,2116. Check if a Parentheses String Can Be Valid,"['String', 'Stack', 'Greedy']",31.1%,Medium,23.2741%;
2117,2117. Abbreviating the Product of a Range,['Math'],27.2%,Hard,0%;
2118,2118. Build the Equation,['Database'],57.1%,Hard,0%;
2119,2119. A Number After a Double Reversal,['Math'],76.9%,Easy,20.2127%;
2120,2120. Execution of All Suffix Instructions Staying in a Grid,"['String', 'Simulation']",83.3%,Medium,9.71707%;
2121,2121. Intervals Between Identical Elements,"['Array', 'Hash Table', 'Prefix Sum']",43.2%,Medium,20.4936%;
2122,2122. Recover the Original Array,"['Array', 'Hash Table', 'Sorting', '1+']",38.5%,Hard,20.3521%;
2123,2123. Minimum Operations to Remove Adjacent Ones in Matrix,"['Array', 'Graph', 'Matrix']",41.2%,Hard,48.4923%;
2124,2124. Check if All A's Appears Before All B's,['String'],71.4%,Easy,29.2522%;
2125,2125. Number of Laser Beams in a Bank,"['Array', 'Math', 'String', '1+']",82.2%,Medium,26.8203%;
2126,2126. Destroying Asteroids,"['Array', 'Greedy', 'Sorting']",49.9%,Medium,8.28335%;
2127,2127. Maximum Employees to Be Invited to a Meeting,"['Depth-First Search', 'Graph', '1+']",34.6%,Hard,72.1166%;
2128,2128. Remove All Ones With Row and Column Flips,"['Array', 'Math', 'Bit Manipulation', '1+']",76.3%,Medium,35.377%;
2129,2129. Capitalize the Title,['String'],62.0%,Easy,15.1876%;
2130,2130. Maximum Twin Sum of a Linked List,"['Linked List', 'Two Pointers', 'Stack']",80.7%,Medium,36.0944%;
2131,2131. Longest Palindrome by Concatenating Two Letter Words,"['Array', 'Hash Table', 'String', '2+']",48.5%,Medium,42.4634%;
2132,2132. Stamping the Grid,"['Array', 'Greedy', 'Matrix', '1+']",31.8%,Hard,61.2293%;
2133,2133. Check if Every Row and Column Contains All Numbers,"['Array', 'Hash Table', 'Matrix']",52.5%,Easy,31.7834%;
2134,2134. Minimum Swaps to Group All 1's Together II,"['Array', 'Sliding Window']",51.3%,Medium,45.4669%;
2135,2135. Count Words Obtained After Adding a Letter,"['Array', 'Hash Table', 'String', '2+']",42.8%,Medium,28.6705%;
2136,2136. Earliest Possible Day of Full Bloom,"['Array', 'Greedy', 'Sorting']",73.6%,Hard,58.5018%;
2137,2137. Pour Water Between Buckets to Make Water Levels Equal,"['Array', 'Binary Search']",67.1%,Medium,0%;
2138,2138. Divide a String Into Groups of Size k,"['String', 'Simulation']",65.4%,Easy,0%;
2139,2139. Minimum Moves to Reach Target Score,"['Math', 'Greedy']",48.8%,Medium,16.411%;
2140,2140. Solving Questions With Brainpower,"['Array', 'Dynamic Programming']",46.3%,Medium,28.6705%;
2141,2141. Maximum Running Time of N Computers,"['Array', 'Binary Search', 'Greedy', '1+']",39.2%,Hard,0%;
2142,2142. The Number of Passengers in Each Bus I,['Database'],49.9%,Medium,0%;
2143,2143. Choose Numbers From Two Arrays in Range,"['Array', 'Dynamic Programming']",52.3%,Hard,0%;
2144,2144. Minimum Cost of Buying Candies With Discount,"['Array', 'Greedy', 'Sorting']",61.0%,Easy,18.8906%;
2145,2145. Count the Hidden Sequences,"['Array', 'Prefix Sum']",36.8%,Medium,35.9111%;
2146,2146. K Highest Ranked Items Within a Price Range,"['Array', 'Breadth-First Search', '3+']",41.3%,Medium,21.0813%;
2147,2147. Number of Ways to Divide a Long Corridor,"['Math', 'String', 'Dynamic Programming']",39.9%,Hard,0%;
2148,2148. Count Elements With Strictly Smaller and Greater Elements,"['Array', 'Sorting']",59.7%,Easy,17.6292%;
2149,2149. Rearrange Array Elements by Sign,"['Array', 'Two Pointers', 'Simulation']",80.8%,Medium,45.5746%;
2150,2150. Find All Lonely Numbers in the Array,"['Array', 'Hash Table', 'Counting']",60.6%,Medium,30.1546%;
2151,2151. Maximum Good People Based on Statements,"['Array', 'Backtracking', '2+']",49.2%,Hard,0%;
2152,2152. Minimum Number of Lines to Cover Points,"['Array', 'Hash Table', 'Math', '5+']",46.7%,Medium,0%;
2153,2153. The Number of Passengers in Each Bus II,['Database'],46.9%,Hard,42.1439%;
2154,2154. Keep Multiplying Found Values by Two,"['Array', 'Hash Table', 'Sorting', '1+']",72.7%,Easy,15.8486%;
2155,2155. All Divisions With the Highest Score of a Binary Array,['Array'],63.5%,Medium,14.8423%;
2156,2156. Find Substring With Given Hash Value,"['String', 'Sliding Window', '2+']",22.3%,Hard,0%;
2157,2157. Groups of Strings,"['String', 'Bit Manipulation', 'Union Find']",25.7%,Hard,30.1546%;
2158,2158. Amount of New Area Painted Each Day,"['Array', 'Segment Tree', 'Ordered Set']",54.6%,Hard,16.3206%;
2159,2159. Order Two Columns Independently,['Database'],61.1%,Medium,23.2741%;
2160,2160. Minimum Sum of Four Digit Number After Splitting Digits,"['Math', 'Greedy', 'Sorting']",87.0%,Easy,46.9614%;
2161,2161. Partition Array According to Given Pivot,"['Array', 'Two Pointers', 'Simulation']",84.7%,Medium,34.8486%;
2162,2162. Minimum Cost to Set Cooking Time,"['Math', 'Enumeration']",39.9%,Medium,25.1229%;
2163,2163. Minimum Difference in Sums After Removal of Elements,"['Array', 'Dynamic Programming', '1+']",47.6%,Hard,73.4655%;
2164,2164. Sort Even and Odd Indices Independently,"['Array', 'Sorting']",65.1%,Easy,18.7296%;
2165,2165. Smallest Value of the Rearranged Number,"['Math', 'Sorting']",51.4%,Medium,34.3739%;
2166,2166. Design Bitset,"['Array', 'Hash Table', 'Design']",31.7%,Medium,24.6832%;
2167,2167. Minimum Time to Remove All Cars Containing Illegal Goods,"['String', 'Dynamic Programming']",40.7%,Hard,0%;
2168,2168. Unique Substrings With Equal Digit Frequency,"['Hash Table', 'String', 'Rolling Hash', '2+']",59.3%,Medium,48.4923%;
2169,2169. Count Operations to Obtain Zero,"['Math', 'Simulation']",75.1%,Easy,7.9293%;
2170,2170. Minimum Operations to Make the Array Alternating,"['Array', 'Hash Table', 'Greedy', '1+']",33.2%,Medium,19.1652%;
2171,2171. Removing Minimum Number of Magic Beans,"['Array', 'Sorting', 'Prefix Sum']",42.1%,Medium,27.995%;
2172,2172. Maximum AND Sum of Array,"['Array', 'Dynamic Programming', '2+']",48.3%,Hard,39.7096%;
2173,2173. Longest Winning Streak,['Database'],54.1%,Hard,0%;
2174,2174. Remove All Ones With Row and Column Flips II,"['Array', 'Bit Manipulation', '2+']",68.2%,Medium,0%;
2175,2175. The Change in Global Rankings,['Database'],65.1%,Medium,0%;
2176,2176. Count Equal and Divisible Pairs in an Array,['Array'],79.7%,Easy,6.55163%;
2177,2177. Find Three Consecutive Integers That Sum to a Given Number,"['Math', 'Simulation']",63.9%,Medium,14.7676%;
2178,2178. Maximum Split of Positive Even Integers,"['Math', 'Backtracking', 'Greedy']",59.3%,Medium,26.6847%;
2179,2179. Count Good Triplets in an Array,"['Array', 'Binary Search', '5+']",38.4%,Hard,58.2661%;
2180,2180. Count Integers With Even Digit Sum,"['Math', 'Simulation']",65.4%,Easy,13.7409%;
2181,2181. Merge Nodes in Between Zeros,"['Linked List', 'Simulation']",86.4%,Medium,14.4042%;
2182,2182. Construct String With Repeat Limit,"['String', 'Greedy', '2+']",52.4%,Medium,30.1546%;
2183,2183. Count Array Pairs Divisible by K,"['Array', 'Math', 'Number Theory']",28.4%,Hard,52.4167%;
2184,2184. Number of Ways to Build Sturdy Brick Wall,"['Array', 'Dynamic Programming', '2+']",50.1%,Medium,46.9534%;
2185,2185. Counting Words With a Given Prefix,"['Array', 'String']",77.3%,Easy,18.9404%;
2186,2186. Minimum Number of Steps to Make Two Strings Anagram II,"['Hash Table', 'String', 'Counting']",72.0%,Medium,0%;
2187,2187. Minimum Time to Complete Trips,"['Array', 'Binary Search']",39.2%,Medium,62.2591%;
2188,2188. Minimum Time to Finish the Race,"['Array', 'Dynamic Programming']",41.7%,Hard,45.4669%;
2189,2189. Number of Ways to Build House of Cards,"['Math', 'Dynamic Programming']",62.6%,Medium,0%;
2190,2190. Most Frequent Number Following Key In an Array,"['Array', 'Hash Table', 'Counting']",60.1%,Easy,18.6239%;
2191,2191. Sort the Jumbled Numbers,"['Array', 'Sorting']",45.8%,Medium,0%;
2192,2192. All Ancestors of a Node in a Directed Acyclic Graph,"['Depth-First Search', '3+']",50.7%,Medium,28.6989%;
2193,2193. Minimum Number of Moves to Make Palindrome,"['Two Pointers', 'String', 'Greedy', '1+']",51.3%,Hard,66.8528%;
2194,2194. Cells in a Range on an Excel Sheet,['String'],85.1%,Easy,32.2284%;
2195,2195. Append K Integers With Minimal Sum,"['Array', 'Math', 'Greedy', '1+']",25.0%,Medium,16.9502%;
2196,2196. Create Binary Tree From Descriptions,"['Array', 'Hash Table', 'Tree', '3+']",72.3%,Medium,37.9803%;
2197,2197. Replace Non-Coprime Numbers in Array,"['Array', 'Math', 'Stack', '1+']",38.6%,Hard,48.7727%;
2198,2198. Number of Single Divisor Triplets,['Math'],56.1%,Medium,0%;
2199,2199. Finding the Topic of Each Post,['Database'],49.1%,Hard,0%;
2200,2200. Find All K-Distant Indices in an Array,['Array'],65.0%,Easy,16.3206%;
2201,2201. Count Artifacts That Can Be Extracted,"['Array', 'Hash Table', 'Simulation']",55.3%,Medium,0%;
2202,2202. Maximize the Topmost Element After K Moves,"['Array', 'Greedy']",22.8%,Medium,21.7064%;
2203,2203. Minimum Weighted Subgraph With the Required Paths,"['Graph', 'Shortest Path']",35.9%,Hard,37.7722%;
2204,2204. Distance to a Cycle in Undirected Graph,"['Depth-First Search', '3+']",70.3%,Hard,0%;
2205,2205. The Number of Users That Are Eligible for Discount,['Database'],50.2%,Easy,0%;
2206,2206. Divide Array Into Equal Pairs,"['Array', 'Hash Table', '2+']",73.9%,Easy,16.3206%;
2207,2207. Maximize Number of Subsequences in a String,"['String', 'Greedy', 'Prefix Sum']",33.3%,Medium,29.3886%;
2208,2208. Minimum Operations to Halve Array Sum,"['Array', 'Greedy', 'Heap (Priority Queue)']",45.4%,Medium,23.7066%;
2209,2209. Minimum White Tiles After Covering With Carpets,"['String', 'Dynamic Programming', '1+']",34.2%,Hard,45.7707%;
2210,2210. Count Hills and Valleys in an Array,['Array'],58.3%,Easy,51.9193%;
2211,2211. Count Collisions on a Road,"['String', 'Stack']",42.3%,Medium,0%;
2212,2212. Maximum Points in an Archery Competition,"['Array', 'Bit Manipulation', '2+']",49.5%,Medium,54.0298%;
2213,2213. Longest Substring of One Repeating Character,"['Array', 'String', 'Segment Tree', '1+']",30.9%,Hard,0%;
2214,2214. Minimum Health to Beat Game,"['Array', 'Greedy', 'Prefix Sum']",58.0%,Medium,59.6047%;
2215,2215. Find the Difference of Two Arrays,"['Array', 'Hash Table']",70.5%,Easy,40.6021%;
2216,2216. Minimum Deletions to Make Array Beautiful,"['Array', 'Stack', 'Greedy']",46.8%,Medium,33.6722%;
2217,2217. Find Palindrome With Fixed Length,"['Array', 'Math']",34.1%,Medium,33.8438%;
2218,2218. Maximum Value of K Coins From Piles,"['Array', 'Dynamic Programming', '1+']",48.2%,Hard,10.7775%;
2219,2219. Maximum Sum Score of Array,"['Array', 'Prefix Sum']",60.7%,Medium,0%;
2220,2220. Minimum Bit Flips to Convert Number,['Bit Manipulation'],82.3%,Easy,21.9463%;
2221,2221. Find Triangular Sum of an Array,"['Array', 'Math', 'Simulation', '1+']",78.5%,Medium,39.7293%;
2222,2222. Number of Ways to Select Buildings,"['String', 'Dynamic Programming', '1+']",51.3%,Medium,60.1793%;
2223,2223. Sum of Scores of Built Strings,"['String', 'Binary Search', '4+']",37.4%,Hard,0%;
2224,2224. Minimum Number of Operations to Convert Time,"['String', 'Greedy']",65.4%,Easy,0%;
2225,2225. Find Players With Zero or One Losses,"['Array', 'Hash Table', 'Sorting', '1+']",72.7%,Medium,58.4103%;
2226,2226. Maximum Candies Allocated to K Children,"['Array', 'Binary Search']",36.7%,Medium,20.6084%;
2227,2227. Encrypt and Decrypt Strings,"['Array', 'Hash Table', 'String', '2+']",39.4%,Hard,48.4923%;
2228,2228. Users With Two Purchases Within Seven Days,['Database'],44.0%,Medium,0%;
2229,2229. Check if an Array Is Consecutive,['Array'],61.1%,Easy,0%;
2230,2230. The Users That Are Eligible for Discount,['Database'],49.5%,Easy,0%;
2231,2231. Largest Number After Digit Swaps by Parity,"['Sorting', 'Heap (Priority Queue)']",61.0%,Easy,42.832%;
2232,2232. Minimize Result by Adding Parentheses to Expression,"['String', 'Enumeration']",65.8%,Medium,72.3221%;
2233,2233. Maximum Product After K Increments,"['Array', 'Greedy', 'Heap (Priority Queue)']",41.1%,Medium,0%;
2234,2234. Maximum Total Beauty of the Gardens,"['Array', 'Two Pointers', '3+']",28.5%,Hard,43.0099%;
2235,2235. Add Two Integers,['Math'],88.6%,Easy,85.1966%;
2236,2236. Root Equals Sum of Children,"['Tree', 'Binary Tree']",84.9%,Easy,44.8064%;
2237,2237. Count Positions on Street With Required Brightness,"['Array', 'Prefix Sum']",64.6%,Medium,30.1546%;
2238,2238. Number of Times a Driver Was a Passenger,['Database'],73.7%,Medium,0%;
2239,2239. Find Closest Number to Zero,['Array'],45.5%,Easy,43.5173%;
2240,2240. Number of Ways to Buy Pens and Pencils,"['Math', 'Enumeration']",56.9%,Medium,14.8423%;
2241,2241. Design an ATM Machine,"['Array', 'Greedy', 'Design']",38.9%,Medium,15.5482%;
2242,2242. Maximum Score of a Node Sequence,"['Array', 'Graph', 'Sorting', '1+']",37.9%,Hard,42.1439%;
2243,2243. Calculate Digit Sum of a String,"['String', 'Simulation']",66.3%,Easy,24.344%;
2244,2244. Minimum Rounds to Complete All Tasks,"['Array', 'Hash Table', 'Greedy', '1+']",62.9%,Medium,89.6678%;
2245,2245. Maximum Trailing Zeros in a Cornered Path,"['Array', 'Matrix', 'Prefix Sum']",35.1%,Medium,27.3577%;
2246,2246. Longest Path With Different Adjacent Characters,"['Array', 'String', 'Tree', '3+']",55.9%,Hard,79.1034%;
2247,2247. Maximum Cost of Trip With K Highways,"['Dynamic Programming', '3+']",50.8%,Hard,48.4923%;
2248,2248. Intersection of Multiple Arrays,"['Array', 'Hash Table', 'Counting']",68.7%,Easy,32.8501%;
2249,2249. Count Lattice Points Inside a Circle,"['Array', 'Hash Table', 'Math', '2+']",50.5%,Medium,16.3206%;
2250,2250. Count Number of Rectangles Containing Each Point,"['Array', 'Binary Search', '2+']",34.1%,Medium,13.5957%;
2251,2251. Number of Flowers in Full Bloom,"['Array', 'Hash Table', '4+']",51.3%,Hard,36.7581%;
2252,2252. Dynamic Pivoting of a Table,['Database'],58.9%,Hard,0%;
2253,2253. Dynamic Unpivoting of a Table,['Database'],68.4%,Hard,0%;
2254,2254. Design Video Sharing Platform,"['Hash Table', 'Stack', 'Design', '1+']",65.2%,Hard,0%;
2255,2255. Count Prefixes of a Given String,"['Array', 'String']",72.9%,Easy,6.79816%;
2256,2256. Minimum Average Difference,"['Array', 'Prefix Sum']",43.1%,Medium,74.0065%;
2257,2257. Count Unguarded Cells in the Grid,"['Array', 'Matrix', 'Simulation']",52.2%,Medium,0%;
2258,2258. Escape the Spreading Fire,"['Array', 'Binary Search', '2+']",35.1%,Hard,67.8425%;
2259,2259. Remove Digit From Number to Maximize Result,"['String', 'Greedy', 'Enumeration']",46.3%,Easy,26.4477%;
2260,2260. Minimum Consecutive Cards to Pick Up,"['Array', 'Hash Table', 'Sliding Window']",51.3%,Medium,22.3734%;
2261,2261. K Divisible Elements Subarrays,"['Array', 'Hash Table', 'Trie', '3+']",48.0%,Medium,0%;
2262,2262. Total Appeal of A String,"['Hash Table', 'String', '1+']",56.8%,Hard,23.7066%;
2263,2263. Make Array Non-decreasing or Non-increasing,"['Dynamic Programming', 'Greedy']",67.2%,Hard,0%;
2264,2264. Largest 3-Same-Digit Number in String,['String'],59.5%,Easy,12.255%;
2265,2265. Count Nodes Equal to Average of Subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",85.2%,Medium,25.0407%;
2266,2266. Count Number of Texts,"['Hash Table', 'Math', 'String', '1+']",47.1%,Medium,12.5261%;
2267,2267. Check if There Is a Valid Parentheses String Path,"['Array', 'Dynamic Programming', 'Matrix']",38.1%,Hard,49.9577%;
2268,2268. Minimum Number of Keypresses,"['Array', 'String', 'Greedy', '2+']",73.2%,Medium,56.2272%;
2269,2269. Find the K-Beauty of a Number,"['Math', 'String', 'Sliding Window']",57.7%,Easy,25.5432%;
2270,2270. Number of Ways to Split Array,"['Array', 'Prefix Sum']",45.6%,Medium,21.0059%;
2271,2271. Maximum White Tiles Covered by a Carpet,"['Array', 'Binary Search', 'Greedy', '2+']",33.0%,Medium,20.3521%;
2272,2272. Substring With Largest Variance,"['Array', 'Dynamic Programming']",37.0%,Hard,98.6167%;
2273,2273. Find Resultant Array After Removing Anagrams,"['Array', 'Hash Table', 'String', '1+']",58.4%,Easy,47.2791%;
2274,2274. Maximum Consecutive Floors Without Special Floors,"['Array', 'Sorting']",52.1%,Medium,29.3886%;
2275,2275. Largest Combination With Bitwise AND Greater Than Zero,"['Array', 'Hash Table', '2+']",72.4%,Medium,35.9339%;
2276,2276. Count Integers in Intervals,"['Design', 'Segment Tree', 'Ordered Set']",34.4%,Hard,55.646%;
2277,2277. Closest Node to Path in Tree,"['Array', 'Tree', 'Depth-First Search', '1+']",63.7%,Hard,0%;
2278,2278. Percentage of Letter in String,['String'],73.9%,Easy,6.24181%;
2279,2279. Maximum Bags With Full Capacity of Rocks,"['Array', 'Greedy', 'Sorting']",67.7%,Medium,70.6497%;
2280,2280. Minimum Lines to Represent a Line Chart,"['Array', 'Math', 'Geometry', '2+']",24.3%,Medium,30.1546%;
2281,2281. Sum of Total Strength of Wizards,"['Array', 'Stack', 'Monotonic Stack', '1+']",27.4%,Hard,94.8675%;
2282,2282. Number of People That Can Be Seen in a Grid,"['Array', 'Stack', 'Matrix', '1+']",49.6%,Medium,0%;
2283,2283. Check if Number Has Equal Digit Count and Digit Value,"['Hash Table', 'String', 'Counting']",73.3%,Easy,3.10613%;
2284,2284. Sender With Largest Word Count,"['Array', 'Hash Table', 'String', '1+']",56.1%,Medium,18.0031%;
2285,2285. Maximum Total Importance of Roads,"['Greedy', 'Graph', 'Sorting', '1+']",60.7%,Medium,27.8646%;
2286,2286. Booking Concert Tickets in Groups,"['Binary Search', 'Design', '2+']",15.4%,Hard,0%;
2287,2287. Rearrange Characters to Make Target String,"['Hash Table', 'String', 'Counting']",58.1%,Easy,41.7083%;
2288,2288. Apply Discount to Prices,['String'],27.9%,Medium,42.5217%;
2289,2289. Steps to Make Array Non-decreasing,"['Array', 'Linked List', 'Stack', '1+']",21.1%,Medium,44.6755%;
2290,2290. Minimum Obstacle Removal to Reach Corner,"['Array', 'Breadth-First Search', '4+']",49.5%,Hard,31.8564%;
2291,2291. Maximum Profit From Trading Stocks,"['Array', 'Dynamic Programming']",45.5%,Medium,54.915%;
2292,2292. Products With Three or More Orders in Two Consecutive Years,['Database'],39.3%,Medium,15.5482%;
2293,2293. Min Max Game,"['Array', 'Simulation']",63.8%,Easy,19.4482%;
2294,2294. Partition Array Such That Maximum Difference Is K,"['Array', 'Greedy', 'Sorting']",72.7%,Medium,28.5168%;
2295,2295. Replace Elements in an Array,"['Array', 'Hash Table', 'Simulation']",57.6%,Medium,14.4755%;
2296,2296. Design a Text Editor,"['Linked List', 'String', 'Stack', '3+']",40.7%,Hard,60.9765%;
2297,2297. Jump Game VIII,"['Array', 'Dynamic Programming', '4+']",56.1%,Medium,25.1229%;
2298,2298. Tasks Count in the Weekend,['Database'],84.7%,Medium,0%;
2299,2299. Strong Password Checker II,['String'],56.3%,Easy,9.93761%;
2300,2300. Successful Pairs of Spells and Potions,"['Array', 'Two Pointers', '2+']",32.4%,Medium,6.94803%;
2301,2301. Match Substring After Replacement,"['Array', 'Hash Table', 'String', '1+']",39.4%,Hard,35.377%;
2302,2302. Count Subarrays With Score Less Than K,"['Array', 'Binary Search', '2+']",52.2%,Hard,25.1229%;
2303,2303. Calculate Amount Paid in Taxes,"['Array', 'Simulation']",64.1%,Easy,51.09%;
2304,2304. Minimum Path Cost in a Grid,"['Array', 'Dynamic Programming', 'Matrix']",65.7%,Medium,39.1672%;
2305,2305. Fair Distribution of Cookies,"['Array', 'Dynamic Programming', '3+']",61.9%,Medium,18.6239%;
2306,2306. Naming a Company,"['Array', 'Hash Table', 'String', '2+']",47.1%,Hard,85.9203%;
2307,2307. Check for Contradictions in Equations,"['Array', 'Depth-First Search', '2+']",43.4%,Hard,0%;
2308,2308. Arrange Table by Gender,['Database'],72.8%,Medium,14.8423%;
2309,2309. Greatest English Letter in Upper and Lower Case,"['Hash Table', 'String', 'Enumeration']",68.8%,Easy,7.62216%;
2310,2310. Sum of Numbers With Units Digit K,"['Math', 'Dynamic Programming', '2+']",25.8%,Medium,10.0509%;
2311,2311. Longest Binary Subsequence Less Than or Equal to K,"['String', 'Dynamic Programming', '2+']",37.1%,Medium,30.9747%;
2312,2312. Selling Pieces of Wood,"['Array', 'Dynamic Programming', '1+']",48.4%,Hard,40.7349%;
2313,2313. Minimum Flips in Binary Tree to Get Result,"['Dynamic Programming', 'Tree', '2+']",63.6%,Hard,0%;
2314,2314. The First Day of the Maximum Recorded Degree in Each City,['Database'],72.9%,Medium,0%;
2315,2315. Count Asterisks,['String'],82.1%,Easy,28.5508%;
2316,2316. Count Unreachable Pairs of Nodes in an Undirected Graph,"['Depth-First Search', '3+']",38.9%,Medium,23.4795%;
2317,2317. Maximum XOR After Operations,"['Array', 'Math', 'Bit Manipulation']",79.1%,Medium,16.411%;
2318,2318. Number of Distinct Roll Sequences,"['Dynamic Programming', 'Memoization']",56.3%,Hard,23.2741%;
2319,2319. Check if Matrix Is X-Matrix,"['Array', 'Matrix']",66.8%,Easy,28.4733%;
2320,2320. Count Number of Ways to Place Houses,['Dynamic Programming'],40.6%,Medium,14.8423%;
2321,2321. Maximum Score Of Spliced Array,"['Array', 'Dynamic Programming']",55.7%,Hard,32.809%;
2322,2322. Minimum Score After Removals on a Tree,"['Array', 'Bit Manipulation', 'Tree', '1+']",50.8%,Hard,48.4923%;
2323,2323. Find Minimum Time to Finish All Jobs II,"['Array', 'Greedy', 'Sorting']",73.8%,Medium,0%;
2324,2324. Product Sales Analysis IV,['Database'],77.9%,Medium,0%;
2325,2325. Decode the Message,"['Hash Table', 'String']",84.7%,Easy,24.8045%;
2326,2326. Spiral Matrix IV,"['Array', 'Linked List', 'Matrix', '1+']",74.7%,Medium,26.3178%;
2327,2327. Number of People Aware of a Secret,"['Dynamic Programming', 'Queue', '1+']",44.8%,Medium,40.7349%;
2328,2328. Number of Increasing Paths in a Grid,"['Array', 'Dynamic Programming', '6+']",47.6%,Hard,36.517%;
2329,2329. Product Sales Analysis V,['Database'],68.5%,Easy,0%;
2330,2330. Valid Palindrome IV,"['Two Pointers', 'String']",75.7%,Medium,0%;
2331,2331. Evaluate Boolean Binary Tree,"['Tree', 'Depth-First Search', 'Binary Tree']",78.5%,Easy,19.4164%;
2332,2332. The Latest Time to Catch a Bus,"['Array', 'Two Pointers', '2+']",23.4%,Medium,41.8981%;
2333,2333. Minimum Sum of Squared Difference,"['Array', 'Math', 'Sorting', '1+']",25.5%,Medium,14.194%;
2334,2334. Subarray With Elements Greater Than Varying Threshold,"['Array', 'Stack', 'Union Find', '1+']",41.1%,Hard,37.6083%;
2335,2335. Minimum Amount of Time to Fill Cups,"['Array', 'Greedy', 'Sorting', '1+']",56.3%,Easy,17.8678%;
2336,2336. Smallest Number in Infinite Set,"['Hash Table', 'Design', '1+']",71.3%,Medium,17.1707%;
2337,2337. Move Pieces to Obtain a String,"['Two Pointers', 'String']",48.0%,Medium,50.0961%;
2338,2338. Count the Number of Ideal Arrays,"['Math', 'Dynamic Programming', '2+']",26.3%,Hard,0%;
2339,2339. All the Matches of the League,['Database'],88.1%,Easy,0%;
2340,2340. Minimum Adjacent Swaps to Make a Valid Array,"['Array', 'Greedy']",75.1%,Medium,59.3381%;
2341,2341. Maximum Number of Pairs in Array,"['Array', 'Hash Table', 'Counting']",76.0%,Easy,20.4936%;
2342,2342. Max Sum of a Pair With Equal Sum of Digits,"['Array', 'Hash Table', 'Sorting', '1+']",53.4%,Medium,42.4834%;
2343,2343. Query Kth Smallest Trimmed Number,"['Array', 'String', '5+']",41.3%,Medium,11.174%;
2344,2344. Minimum Deletions to Make Array Divisible,"['Array', 'Math', 'Sorting', '2+']",56.8%,Hard,29.1829%;
2345,2345. Finding the Number of Visible Mountains,"['Array', 'Stack', 'Sorting', '1+']",42.5%,Medium,35.1184%;
2346,2346. Compute the Rank as a Percentage,['Database'],32.8%,Medium,0%;
2347,2347. Best Poker Hand,"['Array', 'Hash Table', 'Counting']",60.7%,Easy,32.483%;
2348,2348. Number of Zero-Filled Subarrays,"['Array', 'Math']",57.8%,Medium,6.94803%;
2349,2349. Design a Number Container System,"['Hash Table', 'Design', '2+']",45.9%,Medium,27.6365%;
2350,2350. Shortest Impossible Sequence of Rolls,"['Array', 'Hash Table', 'Greedy']",68.3%,Hard,40.7349%;
2351,2351. First Letter to Appear Twice,"['Hash Table', 'String', 'Counting']",75.0%,Easy,35.0334%;
2352,2352. Equal Row and Column Pairs,"['Array', 'Hash Table', 'Matrix', '1+']",70.7%,Medium,12.9237%;
2353,2353. Design a Food Rating System,"['Hash Table', 'Design', '2+']",34.7%,Medium,24.6832%;
2354,2354. Number of Excellent Pairs,"['Array', 'Hash Table', '2+']",46.0%,Hard,37.7722%;
2355,2355. Maximum Number of Books You Can Take,"['Array', 'Dynamic Programming', '2+']",44.0%,Hard,75.241%;
2356,2356. Number of Unique Subjects Taught by Each Teacher,['Database'],90.2%,Easy,12.5261%;
2357,2357. Make Array Zero by Subtracting Equal Amounts,"['Array', 'Hash Table', 'Greedy', '3+']",72.7%,Easy,55.5292%;
2358,2358. Maximum Number of Groups Entering a Competition,"['Array', 'Math', 'Binary Search', '1+']",67.7%,Medium,16.7825%;
2359,2359. Find Closest Node to Given Two Nodes,"['Depth-First Search', 'Graph']",46.2%,Medium,78.3058%;
2360,2360. Longest Cycle in a Graph,"['Depth-First Search', 'Graph', '1+']",38.9%,Hard,50.2331%;
2361,2361. Minimum Costs Using the Train Line,"['Array', 'Dynamic Programming']",76.1%,Hard,73.2274%;
2362,2362. Generate the Invoice,['Database'],80.8%,Hard,0%;
2363,2363. Merge Similar Items,"['Array', 'Hash Table', 'Sorting', '1+']",75.6%,Easy,12.4028%;
2364,2364. Count Number of Bad Pairs,"['Array', 'Hash Table']",41.1%,Medium,18.1128%;
2365,2365. Task Scheduler II,"['Array', 'Hash Table', 'Simulation']",46.7%,Medium,42.5217%;
2366,2366. Minimum Replacements to Sort the Array,"['Array', 'Math', 'Greedy']",40.9%,Hard,19.1652%;
2367,2367. Number of Arithmetic Triplets,"['Array', 'Hash Table', 'Two Pointers', '1+']",83.6%,Easy,32.1209%;
2368,2368. Reachable Nodes With Restrictions,"['Array', 'Hash Table', 'Tree', '3+']",57.8%,Medium,21.2524%;
2369,2369. Check if There is a Valid Partition For The Array,"['Array', 'Dynamic Programming']",40.1%,Medium,48.4923%;
2370,2370. Longest Ideal Subsequence,"['Hash Table', 'String', '1+']",37.8%,Medium,27.995%;
2371,2371. Minimize Maximum Value in a Grid,"['Array', 'Greedy', 'Union Find', '4+']",71.1%,Hard,0%;
2372,2372. Calculate the Influence of Each Salesperson,['Database'],85.6%,Medium,0%;
2373,2373. Largest Local Values in a Matrix,"['Array', 'Matrix']",83.3%,Easy,41.2999%;
2374,2374. Node With Highest Edge Score,"['Hash Table', 'Graph']",46.5%,Medium,26.7549%;
2375,2375. Construct Smallest Number From DI String,"['String', 'Backtracking', 'Stack', '1+']",74.5%,Medium,39.1672%;
2376,2376. Count Special Integers,"['Math', 'Dynamic Programming']",36.6%,Hard,40.869%;
2377,2377. Sort the Olympic Table,['Database'],78.4%,Easy,0%;
2378,2378. Choose Edges to Maximize Score in a Tree,"['Dynamic Programming', 'Tree', '1+']",60.2%,Medium,0%;
2379,2379. Minimum Recolors to Get K Consecutive Black Blocks,"['String', 'Sliding Window']",57.7%,Easy,32.5787%;
2380,2380. Time Needed to Rearrange a Binary String,"['String', 'Dynamic Programming', '1+']",49.0%,Medium,52.2295%;
2381,2381. Shifting Letters II,"['Array', 'String', 'Prefix Sum']",34.9%,Medium,39.1672%;
2382,2382. Maximum Segment Sum After Removals,"['Array', 'Union Find', 'Prefix Sum', '1+']",47.8%,Hard,50.0961%;
2383,2383. Minimum Hours of Training to Win a Competition,"['Array', 'Greedy']",41.0%,Easy,15.4894%;
2384,2384. Largest Palindromic Number,"['Hash Table', 'String', 'Greedy']",31.1%,Medium,43.5587%;
2385,2385. Amount of Time for Binary Tree to Be Infected,"['Tree', 'Depth-First Search', '2+']",56.6%,Medium,32.0875%;
2386,2386. Find the K-Sum of an Array,"['Array', 'Sorting', 'Heap (Priority Queue)']",38.5%,Hard,37.6083%;
2387,2387. Median of a Row Wise Sorted Matrix,"['Array', 'Binary Search', 'Matrix']",68.8%,Medium,0%;
2388,2388. Change Null Values in a Table to the Previous Value,['Database'],65.9%,Medium,18.1128%;
2389,2389. Longest Subsequence With Limited Sum,"['Array', 'Binary Search', 'Greedy', '2+']",72.5%,Easy,52.169%;
2390,2390. Removing Stars From a String,"['String', 'Stack', 'Simulation']",65.2%,Medium,19.1652%;
2391,2391. Minimum Amount of Time to Collect Garbage,"['Array', 'String', 'Prefix Sum']",84.4%,Medium,33.1694%;
2392,2392. Build a Matrix With Conditions,"['Array', 'Graph', 'Topological Sort', '1+']",59.6%,Hard,21.7064%;
2393,2393. Count Strictly Increasing Subarrays,"['Array', 'Math', 'Dynamic Programming']",73.0%,Medium,0%;
2394,2394. Employees With Deductions,['Database'],41.7%,Medium,0%;
2395,2395. Find Subarrays With Equal Sum,"['Array', 'Hash Table']",64.5%,Easy,16.5253%;
2396,2396. Strictly Palindromic Number,"['Math', 'Two Pointers', 'Brainteaser']",87.8%,Medium,38.7604%;
2397,2397. Maximum Rows Covered by Columns,"['Array', 'Backtracking', '3+']",53.0%,Medium,0%;
2398,2398. Maximum Number of Robots Within Budget,"['Array', 'Binary Search', 'Queue', '3+']",32.9%,Hard,65.033%;
2399,2399. Check Distances Between Same Letters,"['Array', 'Hash Table', 'String']",70.6%,Easy,36.385%;
2400,2400. Number of Ways to Reach a Position After Exactly k Steps,"['Math', 'Dynamic Programming', '1+']",33.0%,Medium,21.7064%;
2401,2401. Longest Nice Subarray,"['Array', 'Bit Manipulation', '1+']",49.2%,Medium,27.3577%;
2402,2402. Meeting Rooms III,"['Array', 'Sorting', 'Heap (Priority Queue)']",33.6%,Hard,74.313%;
2403,2403. Minimum Time to Kill All Monsters,"['Array', 'Dynamic Programming', '2+']",51.2%,Hard,0%;
2404,2404. Most Frequent Even Element,"['Array', 'Hash Table', 'Counting']",50.9%,Easy,43.3732%;
2405,2405. Optimal Partition of String,"['Hash Table', 'String', 'Greedy']",75.1%,Medium,33.009%;
2406,2406. Divide Intervals Into Minimum Number of Groups,"['Array', 'Two Pointers', 'Greedy', '3+']",46.0%,Medium,46.9534%;
2407,2407. Longest Increasing Subsequence II,"['Array', 'Divide and Conquer', '5+']",21.7%,Hard,47.3104%;
2408,2408. Design SQL,"['Array', 'Hash Table', 'String', '1+']",84.0%,Medium,39.1672%;
2409,2409. Count Days Spent Together,"['Math', 'String']",43.5%,Easy,40.5994%;
2410,2410. Maximum Matching of Players With Trainers,"['Array', 'Two Pointers', 'Greedy', '1+']",60.9%,Medium,15.7137%;
2411,2411. Smallest Subarrays With Maximum Bitwise OR,"['Array', 'Binary Search', '2+']",41.6%,Medium,29.6486%;
2412,2412. Minimum Money Required Before Transactions,"['Array', 'Greedy', 'Sorting']",39.6%,Hard,38.647%;
2413,2413. Smallest Even Multiple,"['Math', 'Number Theory']",87.7%,Easy,23.6311%;
2414,2414. Length of the Longest Alphabetical Continuous Substring,['String'],56.1%,Medium,12.6938%;
2415,2415. Reverse Odd Levels of Binary Tree,"['Tree', 'Depth-First Search', '2+']",76.7%,Medium,31.4073%;
2416,2416. Sum of Prefix Scores of Strings,"['Array', 'String', 'Trie', '1+']",43.7%,Hard,44.8737%;
2417,2417. Closest Fair Integer,"['Math', 'Enumeration']",45.3%,Medium,0%;
2418,2418. Sort the People,"['Array', 'Hash Table', 'String', '1+']",81.2%,Easy,37.9027%;
2419,2419. Longest Subarray With Maximum Bitwise AND,"['Array', 'Bit Manipulation', 'Brainteaser']",47.9%,Medium,29.6585%;
2420,2420. Find All Good Indices,"['Array', 'Dynamic Programming', '1+']",37.5%,Medium,48.4923%;
2421,2421. Number of Good Paths,"['Array', 'Tree', 'Union Find', '1+']",57.6%,Hard,81.2887%;
2422,2422. Merge Operations to Turn Array Into a Palindrome,"['Array', 'Two Pointers', 'Greedy']",69.8%,Medium,48.4923%;
2423,2423. Remove Letter To Equalize Frequency,"['Hash Table', 'String', 'Counting']",18.1%,Easy,36.6611%;
2424,2424. Longest Uploaded Prefix,"['Binary Search', 'Union Find', '5+']",54.0%,Medium,25.1229%;
2425,2425. Bitwise XOR of All Pairings,"['Array', 'Bit Manipulation', 'Brainteaser']",58.6%,Medium,13.5957%;
2426,2426. Number of Pairs Satisfying Inequality,"['Array', 'Binary Search', '5+']",43.0%,Hard,52.4167%;
2427,2427. Number of Common Factors,"['Math', 'Enumeration', 'Number Theory']",79.8%,Easy,30.7874%;
2428,2428. Maximum Sum of an Hourglass,"['Array', 'Matrix', 'Prefix Sum']",74.2%,Medium,33.075%;
2429,2429. Minimize XOR,"['Greedy', 'Bit Manipulation']",42.5%,Medium,38.3795%;
2430,2430. Maximum Deletions on a String,"['String', 'Dynamic Programming', '3+']",32.2%,Hard,66.7173%;
2431,2431. Maximize Total Tastiness of Purchased Fruits,"['Array', 'Dynamic Programming']",67.5%,Medium,0%;
2432,2432. The Employee That Worked on the Longest Task,['Array'],49.4%,Easy,28.7263%;
2433,2433. Find The Original Array of Prefix Xor,"['Array', 'Bit Manipulation']",85.6%,Medium,15.4894%;
2434,2434. Using a Robot to Print the Lexicographically Smallest String,"['Hash Table', 'String', 'Stack', '1+']",38.5%,Medium,49.6272%;
2435,2435. Paths in Matrix Whose Sum Is Divisible by K,"['Array', 'Dynamic Programming', 'Matrix']",41.5%,Hard,51.09%;
2436,2436. Minimum Split Into Subarrays With GCD Greater Than One,"['Array', 'Math', '3+']",74.2%,Medium,0%;
2437,2437. Number of Valid Clock Times,"['String', 'Enumeration']",43.1%,Easy,46.1312%;
2438,2438. Range Product Queries of Powers,"['Array', 'Bit Manipulation', 'Prefix Sum']",39.0%,Medium,34.9753%;
2439,2439. Minimize Maximum of Array,"['Array', 'Binary Search', '3+']",34.4%,Medium,57.0941%;
2440,2440. Create Components With Same Value,"['Array', 'Math', 'Tree', '2+']",54.6%,Hard,56.1456%;
2441,2441. Largest Positive Integer That Exists With Its Negative,"['Array', 'Hash Table']",68.0%,Easy,35.1629%;
2442,2442. Count Number of Distinct Integers After Reverse Operations,"['Array', 'Hash Table', 'Math']",78.7%,Medium,27.1456%;
2443,2443. Sum of Number and Its Reverse,"['Math', 'Enumeration']",45.7%,Medium,27.0643%;
2444,2444. Count Subarrays With Fixed Bounds,"['Array', 'Queue', 'Sliding Window', '1+']",62.1%,Hard,73.2365%;
2445,2445. Number of Nodes With Value One,"['Tree', 'Depth-First Search', '2+']",70.8%,Medium,59.6047%;
2446,2446. Determine if Two Events Have Conflict,"['Array', 'String']",49.9%,Easy,35.9111%;
2447,2447. Number of Subarrays With GCD Equal to K,"['Array', 'Math', 'Number Theory']",48.6%,Medium,30.6728%;
2448,2448. Minimum Cost to Make Array Equal,"['Array', 'Binary Search', 'Greedy', '2+']",34.8%,Hard,74.4353%;
2449,2449. Minimum Number of Operations to Make Arrays Similar,"['Array', 'Greedy', 'Sorting']",64.0%,Hard,36.7581%;
2450,2450. Number of Distinct Binary Strings After Applying Operations,"['Math', 'String']",67.6%,Medium,0%;
2451,2451. Odd String Difference,"['Hash Table', 'Math', 'String']",60.1%,Easy,30.9574%;
2452,2452. Words Within Two Edits of Dictionary,"['Array', 'String']",60.4%,Medium,18.4503%;
2453,2453. Destroy Sequential Targets,"['Array', 'Hash Table', 'Counting']",37.7%,Medium,0%;
2454,2454. Next Greater Element IV,"['Array', 'Binary Search', 'Stack', '3+']",39.8%,Hard,65.1478%;
2455,2455. Average Value of Even Numbers That Are Divisible by Three,"['Array', 'Math']",59.1%,Easy,13.3134%;
2456,2456. Most Popular Video Creator,"['Array', 'Hash Table', 'String', '2+']",43.8%,Medium,46.9534%;
2457,2457. Minimum Addition to Make Integer Beautiful,"['Math', 'Greedy']",37.0%,Medium,47.6685%;
2458,2458. Height of Binary Tree After Subtree Removal Queries,"['Array', 'Tree', 'Depth-First Search', '2+']",37.0%,Hard,52.7168%;
2459,2459. Sort Array by Moving Items to Empty Space,"['Array', 'Greedy', 'Sorting']",51.9%,Hard,0%;
2460,2460. Apply Operations to an Array,"['Array', 'Simulation']",67.2%,Easy,31.4958%;
2461,2461. Maximum Sum of Distinct Subarrays With Length K,"['Array', 'Hash Table', 'Sliding Window']",34.3%,Medium,40.2316%;
2462,2462. Total Cost to Hire K Workers,"['Array', 'Two Pointers', '2+']",37.6%,Medium,27.3577%;
2463,2463. Minimum Total Distance Traveled,"['Array', 'Dynamic Programming', 'Sorting']",40.6%,Hard,55.646%;
2464,2464. Minimum Subarrays in a Valid Split,"['Array', 'Math', '2+']",56.0%,Medium,0%;
2465,2465. Number of Distinct Averages,"['Array', 'Hash Table', 'Two Pointers', '1+']",58.3%,Easy,14.8423%;
2466,2466. Count Ways To Build Good Strings,['Dynamic Programming'],42.1%,Medium,53.5314%;
2467,2467. Most Profitable Path in a Tree,"['Array', 'Tree', 'Depth-First Search', '2+']",48.3%,Medium,48.4923%;
2468,2468. Split Message Based on Limit,"['String', 'Binary Search']",46.3%,Hard,63.576%;
2469,2469. Convert the Temperature,['Math'],89.1%,Easy,19.7506%;
2470,2470. Number of Subarrays With LCM Equal to K,"['Array', 'Math', 'Number Theory']",38.4%,Medium,34.3739%;
2471,2471. Minimum Number of Operations to Sort a Binary Tree by Level,"['Tree', 'Breadth-First Search', '1+']",62.3%,Medium,19.1652%;
2472,2472. Maximum Number of Non-overlapping Palindrome Substrings,"['String', 'Dynamic Programming']",38.0%,Hard,63.576%;
2473,2473. Minimum Cost to Buy Apples,"['Array', 'Graph', '2+']",62.9%,Medium,0%;
2474,2474. Customers With Strictly Increasing Purchases,['Database'],45.2%,Hard,22.3734%;
2475,2475. Number of Unequal Triplets in Array,"['Array', 'Hash Table']",70.8%,Easy,34.4454%;
2476,2476. Closest Nodes Queries in a Binary Search Tree,"['Array', 'Binary Search', 'Tree', '2+']",40.7%,Medium,19.9398%;
2477,2477. Minimum Fuel Cost to Report to the Capital,"['Tree', 'Depth-First Search', '2+']",67.8%,Medium,61.5627%;
2478,2478. Number of Beautiful Partitions,"['String', 'Dynamic Programming']",30.7%,Hard,31.7834%;
2479,2479. Maximum XOR of Two Non-Overlapping Subtrees,"['Tree', 'Depth-First Search', 'Graph', '1+']",46.7%,Hard,0%;
2480,2480. Form a Chemical Bond,['Database'],56.3%,Easy,0%;
2481,2481. Minimum Cuts to Divide a Circle,"['Math', 'Geometry']",52.5%,Easy,0%;
2482,2482. Difference Between Ones and Zeros in Row and Column,"['Array', 'Matrix', 'Simulation']",79.7%,Medium,36.5543%;
2483,2483. Minimum Penalty for a Shop,"['String', 'Prefix Sum']",55.7%,Medium,27.995%;
2484,2484. Count Palindromic Subsequences,"['String', 'Dynamic Programming']",33.0%,Hard,58.7693%;
2485,2485. Find the Pivot Integer,"['Math', 'Prefix Sum']",80.0%,Easy,18.4223%;
2486,2486. Append Characters to String to Make Subsequence,"['Two Pointers', 'String', 'Greedy']",64.0%,Medium,50.5291%;
2487,2487. Remove Nodes From Linked List,"['Linked List', 'Stack', 'Recursion', '1+']",68.8%,Medium,42.5589%;
2488,2488. Count Subarrays With Median K,"['Array', 'Hash Table', 'Prefix Sum']",42.2%,Hard,62.5126%;
2489,2489. Number of Substrings With Fixed Ratio,"['Hash Table', 'Math', 'String', '1+']",58.7%,Medium,0%;
2490,2490. Circular Sentence,['String'],64.6%,Easy,18.0732%;
2491,2491. Divide Players Into Teams of Equal Skill,"['Array', 'Hash Table', 'Two Pointers', '1+']",58.8%,Medium,44.7074%;
2492,2492. Minimum Score of a Path Between Two Cities,"['Depth-First Search', '3+']",46.5%,Medium,39.441%;
2493,2493. Divide Nodes Into the Maximum Number of Groups,"['Breadth-First Search', 'Union Find', '1+']",37.0%,Hard,48.4923%;
2494,2494. Merge Overlapping Events in the Same Hall,['Database'],18.7%,Hard,48.4923%;
2495,2495. Number of Subarrays Having Even Product,"['Array', 'Math', 'Dynamic Programming']",65.6%,Medium,0%;
2496,2496. Maximum Value of a String in an Array,"['Array', 'String']",72.0%,Easy,10.3137%;
2497,2497. Maximum Star Sum of a Graph,"['Array', 'Greedy', 'Graph', '2+']",38.4%,Medium,10.0509%;
2498,2498. Frog Jump II,"['Array', 'Binary Search', 'Greedy']",60.9%,Medium,52.1381%;
2499,2499. Minimum Total Cost to Make Arrays Unequal,"['Array', 'Hash Table', 'Greedy', '1+']",44.1%,Hard,56.5328%;
2500,2500. Delete Greatest Value in Each Row,"['Array', 'Sorting', 'Matrix']",81.0%,Easy,25.1729%;
2501,2501. Longest Square Streak in an Array,"['Array', 'Hash Table', '3+']",39.5%,Medium,37.8805%;
2502,2502. Design Memory Allocator,"['Array', 'Hash Table', 'Design', '1+']",52.3%,Medium,62.7046%;
2503,2503. Maximum Number of Points From Grid Queries,"['Array', 'Breadth-First Search', '3+']",37.0%,Hard,19.1652%;
2504,2504. Concatenate the Name and the Profession,['Database'],55.0%,Easy,0%;
2505,2505. Bitwise OR of All Subsequence Sums,"['Array', 'Math', 'Bit Manipulation', '1+']",59.6%,Medium,0%;
2506,2506. Count Pairs Of Similar Strings,"['Array', 'Hash Table', 'String']",70.6%,Easy,31.602%;
2507,2507. Smallest Value After Replacing With Sum of Prime Factors,"['Math', 'Number Theory']",48.7%,Medium,30.9747%;
2508,2508. Add Edges to Make Degrees of All Nodes Even,"['Hash Table', 'Graph']",32.3%,Hard,26.561%;
2509,2509. Cycle Length Queries in a Tree,"['Tree', 'Binary Tree']",57.3%,Hard,37.1288%;
2510,2510. Check if There is a Path With Equal Number of 0's And 1's,"['Array', 'Dynamic Programming', 'Matrix']",55.6%,Medium,0%;
2511,2511. Maximum Enemy Forts That Can Be Captured,"['Array', 'Two Pointers']",37.4%,Easy,11.4522%;
2512,2512. Reward Top K Students,"['Array', 'Hash Table', 'String', '2+']",46.5%,Medium,19.7401%;
2513,2513. Minimize the Maximum of Two Arrays,"['Math', 'Binary Search', 'Number Theory']",26.6%,Medium,49.9577%;
2514,2514. Count Anagrams,"['Hash Table', 'Math', 'String', '2+']",34.1%,Hard,0%;
2515,2515. Shortest Distance to Target String in a Circular Array,"['Array', 'String']",48.9%,Easy,20.3521%;
2516,2516. Take K of Each Character From Left and Right,"['Hash Table', 'String', 'Sliding Window']",33.9%,Medium,34.8443%;
2517,2517. Maximum Tastiness of Candy Basket,"['Array', 'Binary Search', 'Sorting']",64.6%,Medium,33.8438%;
2518,2518. Number of Great Partitions,"['Array', 'Dynamic Programming']",33.0%,Hard,49.9577%;
2519,2519. Count the Number of K-Big Indices,"['Array', 'Binary Search', '5+']",64.3%,Hard,0%;
2520,2520. Count the Digits That Divide a Number,['Math'],85.0%,Easy,3.89975%;
2521,2521. Distinct Prime Factors of Product of Array,"['Array', 'Hash Table', 'Math', '1+']",50.0%,Medium,14.4755%;
2522,2522. Partition String Into Substrings With Values at Most K,"['String', 'Dynamic Programming', 'Greedy']",46.7%,Medium,24.6294%;
2523,2523. Closest Prime Numbers in Range,"['Math', 'Number Theory']",37.0%,Medium,37.8805%;
2524,2524. Maximum Frequency Score of a Subarray,"['Array', 'Hash Table', 'Math', '1+']",40.1%,Hard,0%;
2525,2525. Categorize Box According to Criteria,['Math'],33.9%,Easy,12.0454%;
2526,2526. Find Consecutive Integers from a Data Stream,"['Hash Table', 'Design', 'Queue', '2+']",45.0%,Medium,0%;
2527,2527. Find Xor-Beauty of Array,"['Array', 'Math', 'Bit Manipulation']",70.1%,Medium,0%;
2528,2528. Maximize the Minimum Powered City,"['Array', 'Binary Search', 'Greedy', '3+']",32.1%,Hard,32.809%;
2529,2529. Maximum Count of Positive Integer and Negative Integer,"['Array', 'Binary Search', 'Counting']",75.0%,Easy,2.83995%;
2530,2530. Maximal Score After Applying K Operations,"['Array', 'Greedy', 'Heap (Priority Queue)']",43.3%,Medium,21.3499%;
2531,2531. Make Number of Distinct Characters Equal,"['Hash Table', 'String', 'Counting']",25.5%,Medium,10.0509%;
2532,2532. Time to Cross a Bridge,"['Array', 'Heap (Priority Queue)', '1+']",53.6%,Hard,58.5443%;
2533,2533. Number of Good Binary Strings,['Dynamic Programming'],64.3%,Medium,0%;
2534,2534. Time Taken to Cross the Door,"['Array', 'Queue', 'Simulation']",70.7%,Hard,0%;
2535,2535. Difference Between Element Sum and Digit Sum of an Array,"['Array', 'Math']",85.5%,Easy,22.5401%;
2536,2536. Increment Submatrices by One,"['Array', 'Matrix', 'Prefix Sum']",48.3%,Medium,17.5771%;
2537,2537. Count the Number of Good Subarrays,"['Array', 'Hash Table', 'Sliding Window']",47.9%,Medium,35.9339%;
2538,2538. Difference Between Maximum and Minimum Price Sum,"['Array', 'Dynamic Programming', 'Tree']",34.8%,Hard,14.8423%;
2539,2539. Count the Number of Good Subsequences,"['Hash Table', 'Math', 'String', '2+']",77.4%,Medium,0%;
2540,2540. Minimum Common Value,"['Array', 'Hash Table', 'Two Pointers', '1+']",51.7%,Easy,8.23292%;
2541,2541. Minimum Operations to Make Array Equal II,"['Array', 'Math', 'Greedy']",30.9%,Medium,10.0509%;
2542,2542. Maximum Subsequence Score,"['Array', 'Greedy', 'Sorting', '1+']",38.0%,Medium,42.4619%;
2543,2543. Check if Point Is Reachable,"['Math', 'Number Theory']",42.1%,Hard,19.9398%;
2544,2544. Alternating Digit Sum,['Math'],69.8%,Easy,4.02218%;
2545,2545. Sort the Students by Their Kth Score,"['Array', 'Sorting', 'Matrix']",85.9%,Medium,0%;
2546,2546. Apply Bitwise Operations to Make Strings Equal,"['String', 'Bit Manipulation']",40.6%,Medium,15.386%;
2547,2547. Minimum Cost to Split an Array,"['Array', 'Hash Table', '2+']",38.8%,Hard,33.8438%;
2548,2548. Maximum Price to Fill a Bag,"['Array', 'Greedy', 'Sorting']",69.1%,Medium,0%;
2549,2549. Count Distinct Numbers on Board,"['Array', 'Hash Table', 'Math', '1+']",59.8%,Easy,15.2584%;
2550,2550. Count Collisions of Monkeys on a Polygon,"['Math', 'Recursion']",26.5%,Medium,5.31554%;
2551,2551. Put Marbles in Bags,"['Array', 'Greedy', 'Sorting', '1+']",52.8%,Hard,46.4779%;
2552,2552. Count Increasing Quadruplets,"['Array', 'Dynamic Programming', '3+']",31.4%,Hard,44.1806%;
2553,2553. Separate the Digits in an Array,"['Array', 'Simulation']",79.6%,Easy,0.845285%;
2554,2554. Maximum Number of Integers to Choose From a Range I,"['Array', 'Hash Table', '3+']",52.3%,Medium,0%;
2555,2555. Maximize Win From Two Segments,"['Array', 'Binary Search', 'Sliding Window']",30.1%,Medium,47.998%;
2556,2556. Disconnect Path in a Binary Matrix by at Most One Flip,"['Array', 'Dynamic Programming', '3+']",28.6%,Medium,17.5771%;
2557,2557. Maximum Number of Integers to Choose From a Range II,"['Array', 'Binary Search', 'Greedy', '1+']",45.6%,Medium,0%;
2558,2558. Take Gifts From the Richest Pile,"['Array', 'Heap (Priority Queue)', '1+']",66.3%,Easy,20.378%;
2559,2559. Count Vowel Strings in Ranges,"['Array', 'String', 'Prefix Sum']",51.3%,Medium,1.95559%;
2560,2560. House Robber IV,"['Array', 'Binary Search']",39.6%,Medium,24.9007%;
2561,2561. Rearranging Fruits,"['Array', 'Hash Table', 'Greedy']",34.2%,Hard,9.0275%;
2562,2562. Find the Array Concatenation Value,"['Array', 'Two Pointers', 'Simulation']",69.7%,Easy,3.85297%;
2563,2563. Count the Number of Fair Pairs,"['Array', 'Two Pointers', '2+']",31.8%,Medium,34.2432%;
2564,2564. Substring XOR Queries,"['Array', 'Hash Table', 'String', '1+']",33.5%,Medium,9.71707%;
2565,2565. Subsequence With the Minimum Score,"['Two Pointers', 'String', 'Binary Search']",32.0%,Hard,38.647%;
2566,2566. Maximum Difference by Remapping a Digit,"['Math', 'Greedy']",60.1%,Easy,16.5253%;
2567,2567. Minimum Score by Changing Two Elements,"['Array', 'Greedy', 'Sorting']",47.3%,Medium,33.1694%;
2568,2568. Minimum Impossible OR,"['Array', 'Bit Manipulation', 'Brainteaser']",56.9%,Medium,23.7598%;
2569,2569. Handling Sum Queries After Update,"['Array', 'Segment Tree']",25.7%,Hard,0%;
2570,2570. Merge Two 2D Arrays by Summing Values,"['Array', 'Hash Table', 'Two Pointers']",72.9%,Easy,0%;
2571,2571. Minimum Operations to Reduce an Integer to 0,"['Dynamic Programming', 'Greedy', '1+']",49.1%,Medium,21.7064%;
2572,2572. Count the Number of Square-Free Subsets,"['Array', 'Math', '2+']",20.3%,Medium,17.397%;
2573,2573. Find the String with LCP,"['String', 'Dynamic Programming', '2+']",35.3%,Hard,34.4775%;
2574,2574. Left and Right Sum Differences,"['Array', 'Prefix Sum']",88.6%,Easy,2.69082%;
2575,2575. Find the Divisibility Array of a String,"['Array', 'Math', 'String']",30.8%,Medium,0%;
2576,2576. Find the Maximum Number of Marked Indices,"['Array', 'Two Pointers', '3+']",37.1%,Medium,17.072%;
2577,2577. Minimum Time to Visit a Cell In a Grid,"['Array', 'Breadth-First Search', '4+']",35.5%,Hard,14.0399%;
2578,2578. Split With Minimum Sum,"['Math', 'Greedy', 'Sorting']",69.2%,Easy,0.659632%;
2579,2579. Count Total Number of Colored Cells,['Math'],56.9%,Medium,0%;
2580,2580. Count Ways to Group Overlapping Ranges,"['Array', 'Sorting']",34.5%,Medium,0%;
2581,2581. Count Number of Possible Root Nodes,"['Hash Table', '3+']",47.3%,Hard,2.62688%;
2582,2582. Pass the Pillow,"['Math', 'Simulation']",46.2%,Easy,1.35421%;
2583,2583. Kth Largest Sum in a Binary Tree,"['Binary Search', 'Tree', '1+']",46.5%,Medium,0.461111%;
2584,2584. Split the Array to Make Coprime Products,"['Array', 'Hash Table', 'Math', '1+']",21.8%,Hard,0%;
2585,2585. Number of Ways to Earn Points,"['Array', 'Dynamic Programming']",60.1%,Hard,5.74575%;
2586,2586. Count the Number of Vowel Strings in Range,"['Array', 'String']",79.1%,Easy,0%;
2587,2587. Rearrange Array to Maximize Prefix Score,"['Array', 'Greedy', 'Sorting', '1+']",38.9%,Medium,0%;
2588,2588. Count the Number of Beautiful Subarrays,"['Array', 'Hash Table', '2+']",48.2%,Medium,0%;
2589,2589. Minimum Time to Complete All Tasks,"['Array', 'Binary Search', 'Stack', '2+']",33.6%,Hard,0%;
